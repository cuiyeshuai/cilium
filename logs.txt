level=debug msg="Skipped reading configuration file" error="Config File \"cilium\" Not Found in \"[/root]\"" subsys=config
level=info msg="Memory available for map entries (0.003% of 4124385280B): 10310963B" subsys=config
level=debug msg="Total memory for default map entries: 149422080" subsys=config
level=info msg="option bpf-ct-global-tcp-max set by dynamic sizing to 131072" subsys=config
level=info msg="option bpf-ct-global-any-max set by dynamic sizing to 65536" subsys=config
level=info msg="option bpf-nat-global-max set by dynamic sizing to 131072" subsys=config
level=info msg="option bpf-neigh-global-max set by dynamic sizing to 131072" subsys=config
level=info msg="option bpf-sock-rev-map-max set by dynamic sizing to 65536" subsys=config
level=info msg="  --agent-health-port='9879'" subsys=daemon
level=info msg="  --agent-labels=''" subsys=daemon
level=info msg="  --agent-not-ready-taint-key='node.cilium.io/agent-not-ready'" subsys=daemon
level=info msg="  --allocator-list-timeout='3m0s'" subsys=daemon
level=info msg="  --allow-icmp-frag-needed='true'" subsys=daemon
level=info msg="  --allow-localhost='auto'" subsys=daemon
level=info msg="  --annotate-k8s-node='false'" subsys=daemon
level=info msg="  --api-rate-limit=''" subsys=daemon
level=info msg="  --arping-refresh-period='30s'" subsys=daemon
level=info msg="  --auto-create-cilium-node-resource='true'" subsys=daemon
level=info msg="  --auto-direct-node-routes='true'" subsys=daemon
level=info msg="  --bgp-announce-lb-ip='false'" subsys=daemon
level=info msg="  --bgp-announce-pod-cidr='false'" subsys=daemon
level=info msg="  --bgp-config-path='/var/lib/cilium/bgp/config.yaml'" subsys=daemon
level=info msg="  --bpf-auth-map-max='524288'" subsys=daemon
level=info msg="  --bpf-ct-global-any-max='262144'" subsys=daemon
level=info msg="  --bpf-ct-global-tcp-max='524288'" subsys=daemon
level=info msg="  --bpf-ct-timeout-regular-any='1m0s'" subsys=daemon
level=info msg="  --bpf-ct-timeout-regular-tcp='6h0m0s'" subsys=daemon
level=info msg="  --bpf-ct-timeout-regular-tcp-fin='10s'" subsys=daemon
level=info msg="  --bpf-ct-timeout-regular-tcp-syn='1m0s'" subsys=daemon
level=info msg="  --bpf-ct-timeout-service-any='1m0s'" subsys=daemon
level=info msg="  --bpf-ct-timeout-service-tcp='6h0m0s'" subsys=daemon
level=info msg="  --bpf-ct-timeout-service-tcp-grace='1m0s'" subsys=daemon
level=info msg="  --bpf-filter-priority='1'" subsys=daemon
level=info msg="  --bpf-fragments-map-max='8192'" subsys=daemon
level=info msg="  --bpf-lb-acceleration='disabled'" subsys=daemon
level=info msg="  --bpf-lb-affinity-map-max='0'" subsys=daemon
level=info msg="  --bpf-lb-algorithm='random'" subsys=daemon
level=info msg="  --bpf-lb-dev-ip-addr-inherit=''" subsys=daemon
level=info msg="  --bpf-lb-dsr-dispatch='opt'" subsys=daemon
level=info msg="  --bpf-lb-dsr-l4-xlate='frontend'" subsys=daemon
level=info msg="  --bpf-lb-external-clusterip='false'" subsys=daemon
level=info msg="  --bpf-lb-maglev-hash-seed='JLfvgnHc2kaSUFaI'" subsys=daemon
level=info msg="  --bpf-lb-maglev-map-max='0'" subsys=daemon
level=info msg="  --bpf-lb-maglev-table-size='16381'" subsys=daemon
level=info msg="  --bpf-lb-map-max='65536'" subsys=daemon
level=info msg="  --bpf-lb-mode='snat'" subsys=daemon
level=info msg="  --bpf-lb-rev-nat-map-max='0'" subsys=daemon
level=info msg="  --bpf-lb-rss-ipv4-src-cidr=''" subsys=daemon
level=info msg="  --bpf-lb-rss-ipv6-src-cidr=''" subsys=daemon
level=info msg="  --bpf-lb-service-backend-map-max='0'" subsys=daemon
level=info msg="  --bpf-lb-service-map-max='0'" subsys=daemon
level=info msg="  --bpf-lb-sock='false'" subsys=daemon
level=info msg="  --bpf-lb-sock-hostns-only='true'" subsys=daemon
level=info msg="  --bpf-lb-source-range-map-max='0'" subsys=daemon
level=info msg="  --bpf-map-dynamic-size-ratio='0.0025'" subsys=daemon
level=info msg="  --bpf-map-event-buffers=''" subsys=daemon
level=info msg="  --bpf-nat-global-max='524288'" subsys=daemon
level=info msg="  --bpf-neigh-global-max='524288'" subsys=daemon
level=info msg="  --bpf-policy-map-max='16384'" subsys=daemon
level=info msg="  --bpf-root='/sys/fs/bpf'" subsys=daemon
level=info msg="  --bpf-sock-rev-map-max='262144'" subsys=daemon
level=info msg="  --bypass-ip-availability-upon-restore='false'" subsys=daemon
level=info msg="  --certificates-directory='/var/run/cilium/certs'" subsys=daemon
level=info msg="  --cflags=''" subsys=daemon
level=info msg="  --cgroup-root='/run/cilium/cgroupv2'" subsys=daemon
level=info msg="  --cilium-endpoint-gc-interval='5m0s'" subsys=daemon
level=info msg="  --cluster-health-port='4240'" subsys=daemon
level=info msg="  --cluster-id='0'" subsys=daemon
level=info msg="  --cluster-name='kind-kind'" subsys=daemon
level=info msg="  --clustermesh-config='/var/lib/cilium/clustermesh/'" subsys=daemon
level=info msg="  --cmdref=''" subsys=daemon
level=info msg="  --cni-chaining-mode='none'" subsys=daemon
level=info msg="  --cni-exclusive='true'" subsys=daemon
level=info msg="  --cni-log-file='/var/run/cilium/cilium-cni.log'" subsys=daemon
level=info msg="  --cnp-node-status-gc-interval='0s'" subsys=daemon
level=info msg="  --config=''" subsys=daemon
level=info msg="  --config-dir='/tmp/cilium/config-map'" subsys=daemon
level=info msg="  --config-sources='config-map:kube-system/cilium-config'" subsys=daemon
level=info msg="  --conntrack-gc-interval='0s'" subsys=daemon
level=info msg="  --crab='true'" subsys=daemon
level=info msg="  --crd-wait-timeout='5m0s'" subsys=daemon
level=info msg="  --custom-cni-conf='false'" subsys=daemon
level=info msg="  --datapath-mode='veth'" subsys=daemon
level=info msg="  --debug='true'" subsys=daemon
level=info msg="  --debug-verbose='datapath'" subsys=daemon
level=info msg="  --derive-masquerade-ip-addr-from-device=''" subsys=daemon
level=info msg="  --devices=''" subsys=daemon
level=info msg="  --direct-routing-device=''" subsys=daemon
level=info msg="  --disable-cnp-status-updates='true'" subsys=daemon
level=info msg="  --disable-endpoint-crd='false'" subsys=daemon
level=info msg="  --disable-envoy-version-check='false'" subsys=daemon
level=info msg="  --disable-iptables-feeder-rules=''" subsys=daemon
level=info msg="  --dns-max-ips-per-restored-rule='1000'" subsys=daemon
level=info msg="  --dns-policy-unload-on-shutdown='false'" subsys=daemon
level=info msg="  --dnsproxy-concurrency-limit='0'" subsys=daemon
level=info msg="  --dnsproxy-concurrency-processing-grace-period='0s'" subsys=daemon
level=info msg="  --dnsproxy-lock-count='128'" subsys=daemon
level=info msg="  --dnsproxy-lock-timeout='500ms'" subsys=daemon
level=info msg="  --egress-gateway-policy-map-max='16384'" subsys=daemon
level=info msg="  --egress-masquerade-interfaces=''" subsys=daemon
level=info msg="  --egress-multi-home-ip-rule-compat='false'" subsys=daemon
level=info msg="  --enable-auto-protect-node-port-range='true'" subsys=daemon
level=info msg="  --enable-bandwidth-manager='false'" subsys=daemon
level=info msg="  --enable-bbr='false'" subsys=daemon
level=info msg="  --enable-bgp-control-plane='false'" subsys=daemon
level=info msg="  --enable-bpf-clock-probe='true'" subsys=daemon
level=info msg="  --enable-bpf-masquerade='false'" subsys=daemon
level=info msg="  --enable-bpf-tproxy='false'" subsys=daemon
level=info msg="  --enable-cilium-api-server-access='*'" subsys=daemon
level=info msg="  --enable-cilium-endpoint-slice='false'" subsys=daemon
level=info msg="  --enable-cilium-health-api-server-access='*'" subsys=daemon
level=info msg="  --enable-custom-calls='false'" subsys=daemon
level=info msg="  --enable-endpoint-health-checking='true'" subsys=daemon
level=info msg="  --enable-endpoint-routes='false'" subsys=daemon
level=info msg="  --enable-envoy-config='false'" subsys=daemon
level=info msg="  --enable-external-ips='true'" subsys=daemon
level=info msg="  --enable-health-check-nodeport='true'" subsys=daemon
level=info msg="  --enable-health-checking='true'" subsys=daemon
level=info msg="  --enable-host-firewall='false'" subsys=daemon
level=info msg="  --enable-host-legacy-routing='false'" subsys=daemon
level=info msg="  --enable-host-port='true'" subsys=daemon
level=info msg="  --enable-hubble='true'" subsys=daemon
level=info msg="  --enable-hubble-recorder-api='true'" subsys=daemon
level=info msg="  --enable-icmp-rules='true'" subsys=daemon
level=info msg="  --enable-identity-mark='true'" subsys=daemon
level=info msg="  --enable-ip-masq-agent='false'" subsys=daemon
level=info msg="  --enable-ipsec='false'" subsys=daemon
level=info msg="  --enable-ipv4='true'" subsys=daemon
level=info msg="  --enable-ipv4-egress-gateway='false'" subsys=daemon
level=info msg="  --enable-ipv4-fragment-tracking='true'" subsys=daemon
level=info msg="  --enable-ipv4-masquerade='true'" subsys=daemon
level=info msg="  --enable-ipv6='false'" subsys=daemon
level=info msg="  --enable-ipv6-big-tcp='false'" subsys=daemon
level=info msg="  --enable-ipv6-masquerade='true'" subsys=daemon
level=info msg="  --enable-ipv6-ndp='false'" subsys=daemon
level=info msg="  --enable-k8s='true'" subsys=daemon
level=info msg="  --enable-k8s-api-discovery='false'" subsys=daemon
level=info msg="  --enable-k8s-endpoint-slice='true'" subsys=daemon
level=info msg="  --enable-k8s-event-handover='false'" subsys=daemon
level=info msg="  --enable-k8s-networkpolicy='true'" subsys=daemon
level=info msg="  --enable-k8s-terminating-endpoint='true'" subsys=daemon
level=info msg="  --enable-l2-neigh-discovery='true'" subsys=daemon
level=info msg="  --enable-l7-proxy='true'" subsys=daemon
level=info msg="  --enable-local-node-route='true'" subsys=daemon
level=info msg="  --enable-local-redirect-policy='false'" subsys=daemon
level=info msg="  --enable-mke='false'" subsys=daemon
level=info msg="  --enable-monitor='true'" subsys=daemon
level=info msg="  --enable-nat46x64-gateway='false'" subsys=daemon
level=info msg="  --enable-node-port='false'" subsys=daemon
level=info msg="  --enable-pmtu-discovery='false'" subsys=daemon
level=info msg="  --enable-policy='default'" subsys=daemon
level=info msg="  --enable-recorder='false'" subsys=daemon
level=info msg="  --enable-remote-node-identity='true'" subsys=daemon
level=info msg="  --enable-runtime-device-detection='false'" subsys=daemon
level=info msg="  --enable-sctp='false'" subsys=daemon
level=info msg="  --enable-service-topology='false'" subsys=daemon
level=info msg="  --enable-session-affinity='false'" subsys=daemon
level=info msg="  --enable-srv6='false'" subsys=daemon
level=info msg="  --enable-stale-cilium-endpoint-cleanup='true'" subsys=daemon
level=info msg="  --enable-svc-source-range-check='true'" subsys=daemon
level=info msg="  --enable-tracing='false'" subsys=daemon
level=info msg="  --enable-unreachable-routes='false'" subsys=daemon
level=info msg="  --enable-vtep='false'" subsys=daemon
level=info msg="  --enable-well-known-identities='false'" subsys=daemon
level=info msg="  --enable-wireguard='false'" subsys=daemon
level=info msg="  --enable-wireguard-userspace-fallback='false'" subsys=daemon
level=info msg="  --enable-xdp-prefilter='false'" subsys=daemon
level=info msg="  --enable-xt-socket-fallback='true'" subsys=daemon
level=info msg="  --encrypt-interface=''" subsys=daemon
level=info msg="  --encrypt-node='false'" subsys=daemon
level=info msg="  --endpoint-gc-interval='5m0s'" subsys=daemon
level=info msg="  --endpoint-queue-size='25'" subsys=daemon
level=info msg="  --endpoint-status=''" subsys=daemon
level=info msg="  --envoy-config-timeout='2m0s'" subsys=daemon
level=info msg="  --envoy-log=''" subsys=daemon
level=info msg="  --exclude-local-address=''" subsys=daemon
level=info msg="  --fixed-identity-mapping=''" subsys=daemon
level=info msg="  --fqdn-regex-compile-lru-size='1024'" subsys=daemon
level=info msg="  --gops-port='9890'" subsys=daemon
level=info msg="  --http-403-msg=''" subsys=daemon
level=info msg="  --http-idle-timeout='0'" subsys=daemon
level=info msg="  --http-max-grpc-timeout='0'" subsys=daemon
level=info msg="  --http-normalize-path='true'" subsys=daemon
level=info msg="  --http-request-timeout='3600'" subsys=daemon
level=info msg="  --http-retry-count='3'" subsys=daemon
level=info msg="  --http-retry-timeout='0'" subsys=daemon
level=info msg="  --hubble-disable-tls='false'" subsys=daemon
level=info msg="  --hubble-event-buffer-capacity='4095'" subsys=daemon
level=info msg="  --hubble-event-queue-size='0'" subsys=daemon
level=info msg="  --hubble-export-file-compress='false'" subsys=daemon
level=info msg="  --hubble-export-file-max-backups='5'" subsys=daemon
level=info msg="  --hubble-export-file-max-size-mb='10'" subsys=daemon
level=info msg="  --hubble-export-file-path=''" subsys=daemon
level=info msg="  --hubble-listen-address=':4244'" subsys=daemon
level=info msg="  --hubble-metrics=''" subsys=daemon
level=info msg="  --hubble-metrics-server=''" subsys=daemon
level=info msg="  --hubble-monitor-events=''" subsys=daemon
level=info msg="  --hubble-prefer-ipv6='false'" subsys=daemon
level=info msg="  --hubble-recorder-sink-queue-size='1024'" subsys=daemon
level=info msg="  --hubble-recorder-storage-path='/var/run/cilium/pcaps'" subsys=daemon
level=info msg="  --hubble-skip-unknown-cgroup-ids='true'" subsys=daemon
level=info msg="  --hubble-socket-path='/var/run/cilium/hubble.sock'" subsys=daemon
level=info msg="  --hubble-tls-cert-file='/var/lib/cilium/tls/hubble/server.crt'" subsys=daemon
level=info msg="  --hubble-tls-client-ca-files='/var/lib/cilium/tls/hubble/client-ca.crt'" subsys=daemon
level=info msg="  --hubble-tls-key-file='/var/lib/cilium/tls/hubble/server.key'" subsys=daemon
level=info msg="  --identity-allocation-mode='crd'" subsys=daemon
level=info msg="  --identity-change-grace-period='5s'" subsys=daemon
level=info msg="  --identity-gc-interval='15m0s'" subsys=daemon
level=info msg="  --identity-heartbeat-timeout='30m0s'" subsys=daemon
level=info msg="  --identity-restore-grace-period='10m0s'" subsys=daemon
level=info msg="  --install-egress-gateway-routes='false'" subsys=daemon
level=info msg="  --install-iptables-rules='true'" subsys=daemon
level=info msg="  --install-no-conntrack-iptables-rules='false'" subsys=daemon
level=info msg="  --ip-allocation-timeout='2m0s'" subsys=daemon
level=info msg="  --ip-masq-agent-config-path='/etc/config/ip-masq-agent'" subsys=daemon
level=info msg="  --ipam='kubernetes'" subsys=daemon
level=info msg="  --ipam-cilium-node-update-rate='15s'" subsys=daemon
level=info msg="  --ipsec-key-file=''" subsys=daemon
level=info msg="  --ipsec-key-rotation-duration='5m0s'" subsys=daemon
level=info msg="  --iptables-lock-timeout='5s'" subsys=daemon
level=info msg="  --iptables-random-fully='false'" subsys=daemon
level=info msg="  --ipv4-native-routing-cidr='10.0.0.0/24'" subsys=daemon
level=info msg="  --ipv4-node='auto'" subsys=daemon
level=info msg="  --ipv4-pod-subnets=''" subsys=daemon
level=info msg="  --ipv4-range='auto'" subsys=daemon
level=info msg="  --ipv4-service-loopback-address='169.254.42.1'" subsys=daemon
level=info msg="  --ipv4-service-range='auto'" subsys=daemon
level=info msg="  --ipv6-cluster-alloc-cidr='f00d::/64'" subsys=daemon
level=info msg="  --ipv6-mcast-device=''" subsys=daemon
level=info msg="  --ipv6-native-routing-cidr=''" subsys=daemon
level=info msg="  --ipv6-node='auto'" subsys=daemon
level=info msg="  --ipv6-pod-subnets=''" subsys=daemon
level=info msg="  --ipv6-range='auto'" subsys=daemon
level=info msg="  --ipv6-service-range='auto'" subsys=daemon
level=info msg="  --join-cluster='false'" subsys=daemon
level=info msg="  --k8s-api-server=''" subsys=daemon
level=info msg="  --k8s-client-burst='0'" subsys=daemon
level=info msg="  --k8s-client-qps='0'" subsys=daemon
level=info msg="  --k8s-heartbeat-timeout='30s'" subsys=daemon
level=info msg="  --k8s-kubeconfig-path=''" subsys=daemon
level=info msg="  --k8s-namespace='kube-system'" subsys=daemon
level=info msg="  --k8s-require-ipv4-pod-cidr='false'" subsys=daemon
level=info msg="  --k8s-require-ipv6-pod-cidr='false'" subsys=daemon
level=info msg="  --k8s-service-cache-size='128'" subsys=daemon
level=info msg="  --k8s-service-proxy-name=''" subsys=daemon
level=info msg="  --k8s-sync-timeout='3m0s'" subsys=daemon
level=info msg="  --k8s-watcher-endpoint-selector='metadata.name!=kube-scheduler,metadata.name!=kube-controller-manager,metadata.name!=etcd-operator,metadata.name!=gcp-controller-manager'" subsys=daemon
level=info msg="  --keep-config='false'" subsys=daemon
level=info msg="  --kube-proxy-replacement='strict'" subsys=daemon
level=info msg="  --kube-proxy-replacement-healthz-bind-address=''" subsys=daemon
level=info msg="  --kvstore=''" subsys=daemon
level=info msg="  --kvstore-connectivity-timeout='2m0s'" subsys=daemon
level=info msg="  --kvstore-lease-ttl='15m0s'" subsys=daemon
level=info msg="  --kvstore-max-consecutive-quorum-errors='2'" subsys=daemon
level=info msg="  --kvstore-opt=''" subsys=daemon
level=info msg="  --kvstore-periodic-sync='5m0s'" subsys=daemon
level=info msg="  --label-prefix-file=''" subsys=daemon
level=info msg="  --labels=''" subsys=daemon
level=info msg="  --lib-dir='/var/lib/cilium'" subsys=daemon
level=info msg="  --local-max-addr-scope='252'" subsys=daemon
level=info msg="  --local-router-ipv4=''" subsys=daemon
level=info msg="  --local-router-ipv6=''" subsys=daemon
level=info msg="  --log-driver=''" subsys=daemon
level=info msg="  --log-opt=''" subsys=daemon
level=info msg="  --log-system-load='false'" subsys=daemon
level=info msg="  --max-controller-interval='0'" subsys=daemon
level=info msg="  --mesh-auth-monitor-queue-size='1024'" subsys=daemon
level=info msg="  --mesh-auth-mtls-listener-port='0'" subsys=daemon
level=info msg="  --mesh-auth-rotated-identities-queue-size='1024'" subsys=daemon
level=info msg="  --mesh-auth-spiffe-trust-domain='spiffe.cilium'" subsys=daemon
level=info msg="  --mesh-auth-spire-admin-socket=''" subsys=daemon
level=info msg="  --metrics=''" subsys=daemon
level=info msg="  --mke-cgroup-mount=''" subsys=daemon
level=info msg="  --monitor-aggregation='none'" subsys=daemon
level=info msg="  --monitor-aggregation-flags='all'" subsys=daemon
level=info msg="  --monitor-aggregation-interval='5s'" subsys=daemon
level=info msg="  --monitor-queue-size='0'" subsys=daemon
level=info msg="  --mtu='0'" subsys=daemon
level=info msg="  --node-encryption-opt-out-labels='node-role.kubernetes.io/control-plane'" subsys=daemon
level=info msg="  --node-port-acceleration='disabled'" subsys=daemon
level=info msg="  --node-port-algorithm='random'" subsys=daemon
level=info msg="  --node-port-bind-protection='true'" subsys=daemon
level=info msg="  --node-port-mode='snat'" subsys=daemon
level=info msg="  --node-port-range='30000,32767'" subsys=daemon
level=info msg="  --nodes-gc-interval='5m0s'" subsys=daemon
level=info msg="  --operator-api-serve-addr='127.0.0.1:9234'" subsys=daemon
level=info msg="  --policy-audit-mode='false'" subsys=daemon
level=info msg="  --policy-queue-size='100'" subsys=daemon
level=info msg="  --policy-trigger-interval='1s'" subsys=daemon
level=info msg="  --pprof='false'" subsys=daemon
level=info msg="  --pprof-address='localhost'" subsys=daemon
level=info msg="  --pprof-port='6060'" subsys=daemon
level=info msg="  --preallocate-bpf-maps='false'" subsys=daemon
level=info msg="  --prepend-iptables-chains='true'" subsys=daemon
level=info msg="  --procfs='/host/proc'" subsys=daemon
level=info msg="  --prometheus-serve-addr=':9962'" subsys=daemon
level=info msg="  --proxy-connect-timeout='2'" subsys=daemon
level=info msg="  --proxy-gid='1337'" subsys=daemon
level=info msg="  --proxy-max-connection-duration-seconds='0'" subsys=daemon
level=info msg="  --proxy-max-requests-per-connection='0'" subsys=daemon
level=info msg="  --proxy-prometheus-port='0'" subsys=daemon
level=info msg="  --read-cni-conf=''" subsys=daemon
level=info msg="  --remove-cilium-node-taints='true'" subsys=daemon
level=info msg="  --restore='true'" subsys=daemon
level=info msg="  --route-metric='0'" subsys=daemon
level=info msg="  --routing-mode='native'" subsys=daemon
level=info msg="  --set-cilium-is-up-condition='true'" subsys=daemon
level=info msg="  --set-cilium-node-taints='true'" subsys=daemon
level=info msg="  --sidecar-istio-proxy-image='cilium/istio_proxy'" subsys=daemon
level=info msg="  --single-cluster-route='false'" subsys=daemon
level=info msg="  --skip-cnp-status-startup-clean='false'" subsys=daemon
level=info msg="  --socket-path='/var/run/cilium/cilium.sock'" subsys=daemon
level=info msg="  --srv6-encap-mode='reduced'" subsys=daemon
level=info msg="  --state-dir='/var/run/cilium'" subsys=daemon
level=info msg="  --synchronize-k8s-nodes='true'" subsys=daemon
level=info msg="  --tofqdns-dns-reject-response-code='refused'" subsys=daemon
level=info msg="  --tofqdns-enable-dns-compression='true'" subsys=daemon
level=info msg="  --tofqdns-endpoint-max-ip-per-hostname='50'" subsys=daemon
level=info msg="  --tofqdns-idle-connection-grace-period='0s'" subsys=daemon
level=info msg="  --tofqdns-max-deferred-connection-deletes='10000'" subsys=daemon
level=info msg="  --tofqdns-min-ttl='0'" subsys=daemon
level=info msg="  --tofqdns-pre-cache=''" subsys=daemon
level=info msg="  --tofqdns-proxy-port='0'" subsys=daemon
level=info msg="  --tofqdns-proxy-response-max-delay='100ms'" subsys=daemon
level=info msg="  --trace-payloadlen='128'" subsys=daemon
level=info msg="  --trace-sock='true'" subsys=daemon
level=info msg="  --tunnel=''" subsys=daemon
level=info msg="  --tunnel-port='0'" subsys=daemon
level=info msg="  --tunnel-protocol='vxlan'" subsys=daemon
level=info msg="  --unmanaged-pod-watcher-interval='15'" subsys=daemon
level=info msg="  --version='false'" subsys=daemon
level=info msg="  --vlan-bpf-bypass=''" subsys=daemon
level=info msg="  --vtep-cidr=''" subsys=daemon
level=info msg="  --vtep-endpoint=''" subsys=daemon
level=info msg="  --vtep-mac=''" subsys=daemon
level=info msg="  --vtep-mask=''" subsys=daemon
level=info msg="  --write-cni-conf-when-ready='/host/etc/cni/net.d/05-cilium.conflist'" subsys=daemon
level=debug msg="Enabling datapath debug messages" subsys=daemon
level=info msg="     _ _ _" subsys=daemon
level=info msg=" ___|_| |_|_ _ _____" subsys=daemon
level=info msg="|  _| | | | | |     |" subsys=daemon
level=info msg="|___|_|_|_|___|_|_|_|" subsys=daemon
level=info msg="Cilium 1.14.0-snapshot.2 045af65a99 2023-07-11T22:06:37+01:00 go version go1.20.3 linux/arm64" subsys=daemon
level=info msg="cilium-envoy  version: 3d6c80b860b9b39c616f835d9bdac281a81139ae/1.25.6/Distribution/RELEASE/BoringSSL" subsys=daemon
level=info msg="clang (10.0.0) and kernel (5.15.49) versions: OK!" subsys=linux-datapath
level=info msg="linking environment: OK!" subsys=linux-datapath
level=info msg="Detected mounted BPF filesystem at /sys/fs/bpf" subsys=bpf
level=info msg="Mounted cgroupv2 filesystem at /run/cilium/cgroupv2" subsys=cgroups
level=info msg="Parsing base label prefixes from default label list" subsys=labels-filter
level=info msg="Parsing additional label prefixes from user inputs: []" subsys=labels-filter
level=info msg="Final label prefixes to be used for identity evaluation:" subsys=labels-filter
level=info msg=" - reserved:.*" subsys=labels-filter
level=info msg=" - :io\\.kubernetes\\.pod\\.namespace" subsys=labels-filter
level=info msg=" - :io\\.cilium\\.k8s\\.namespace\\.labels" subsys=labels-filter
level=info msg=" - :app\\.kubernetes\\.io" subsys=labels-filter
level=info msg=" - !:io\\.kubernetes" subsys=labels-filter
level=info msg=" - !:kubernetes\\.io" subsys=labels-filter
level=info msg=" - !:.*beta\\.kubernetes\\.io" subsys=labels-filter
level=info msg=" - !:k8s\\.io" subsys=labels-filter
level=info msg=" - !:pod-template-generation" subsys=labels-filter
level=info msg=" - !:pod-template-hash" subsys=labels-filter
level=info msg=" - !:controller-revision-hash" subsys=labels-filter
level=info msg=" - !:annotation.*" subsys=labels-filter
level=info msg=" - !:etcd_node" subsys=labels-filter
level=info msg="Auto-disabling \"enable-bpf-clock-probe\" feature since KERNEL_HZ cannot be determined" error="open /proc/schedstat: no such file or directory" subsys=daemon
level=info msg="Using autogenerated IPv4 allocation range" subsys=node v4Prefix=10.2.0.0/16
level=debug msg=Invoking function="pprof.glob..func1 (cell.go:51)" subsys=hive
level=info msg=Invoked duration=1.449041ms function="pprof.glob..func1 (cell.go:51)" subsys=hive
level=debug msg=Invoking function="gops.registerGopsHooks (cell.go:39)" subsys=hive
level=info msg=Invoked duration="57.542µs" function="gops.registerGopsHooks (cell.go:39)" subsys=hive
level=debug msg=Invoking function="cmd.glob..func3 (daemon_main.go:1581)" subsys=hive
level=debug msg="getting identity cache for identity allocator manager" subsys=identity-cache
level=info msg="Spire Delegate API Client is disabled as no socket path is configured" subsys=spire-delegate
level=info msg="mTLS Auth Handler is disabled as no port is configured" subsys=auth-manager
level=info msg=Invoked duration=69.668792ms function="cmd.glob..func3 (daemon_main.go:1581)" subsys=hive
level=debug msg=Invoking function="utime.initUtimeSync (cell.go:30)" subsys=hive
level=info msg=Invoked duration="10.458µs" function="utime.initUtimeSync (cell.go:30)" subsys=hive
level=info msg=Starting subsys=hive
level=debug msg="Executing start hook" function="gops.registerGopsHooks.func1 (cell.go:44)" subsys=hive
level=info msg="Started gops server" address="127.0.0.1:9890" subsys=gops
level=info msg="Start hook executed" duration="446.584µs" function="gops.registerGopsHooks.func1 (cell.go:44)" subsys=hive
level=debug msg="Executing start hook" function="client.(*compositeClientset).onStart" subsys=hive
level=info msg="Establishing connection to apiserver" host="https://10.96.0.1:443" subsys=k8s-client
level=info msg="Connected to apiserver" subsys=k8s-client
level=debug msg="Starting new controller" name=k8s-heartbeat subsys=controller uuid=45972407-ff91-4e18-a82f-32a4ebdfb07b
level=debug msg="Skipping Leases support fallback discovery" subsys=k8s
level=info msg="Start hook executed" duration=14.515417ms function="client.(*compositeClientset).onStart" subsys=hive
level=debug msg="Executing start hook" function="authmap.newAuthMap.func1 (cell.go:28)" subsys=hive
level=debug msg="Controller func execution time: 3.177417ms" name=k8s-heartbeat subsys=controller uuid=45972407-ff91-4e18-a82f-32a4ebdfb07b
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_auth_map subsys=ebpf
level=info msg="Start hook executed" duration=11.088958ms function="authmap.newAuthMap.func1 (cell.go:28)" subsys=hive
level=debug msg="Executing start hook" function="configmap.newMap.func1 (cell.go:24)" subsys=hive
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_runtime_config subsys=bpf
level=info msg="Start hook executed" duration="42.292µs" function="configmap.newMap.func1 (cell.go:24)" subsys=hive
level=debug msg="Executing start hook" function="datapath.newDatapath.func1 (cells.go:85)" subsys=hive
level=info msg="Start hook executed" duration=39.875875ms function="datapath.newDatapath.func1 (cells.go:85)" subsys=hive
level=debug msg="Executing start hook" function="*resource.resource[*github.com/cilium/cilium/pkg/k8s/slim/k8s/api/core/v1.Service].Start" subsys=hive
level=info msg="Start hook executed" duration="34.333µs" function="*resource.resource[*github.com/cilium/cilium/pkg/k8s/slim/k8s/api/core/v1.Service].Start" subsys=hive
level=debug msg="Executing start hook" function="*gobgp.diffStore[*github.com/cilium/cilium/pkg/k8s/slim/k8s/api/core/v1.Service].Start" subsys=hive
level=info msg="Start hook executed" duration=201.012916ms function="*gobgp.diffStore[*github.com/cilium/cilium/pkg/k8s/slim/k8s/api/core/v1.Service].Start" subsys=hive
level=debug msg="Executing start hook" function="*resource.resource[*k8s.io/api/core/v1.Node].Start" subsys=hive
level=info msg="Start hook executed" duration="35.5µs" function="*resource.resource[*k8s.io/api/core/v1.Node].Start" subsys=hive
level=debug msg="Executing start hook" function="*resource.resource[*github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2.CiliumNode].Start" subsys=hive
level=info msg="Start hook executed" duration=875ns function="*resource.resource[*github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2.CiliumNode].Start" subsys=hive
level=debug msg="Executing start hook" function="*resource.resource[*github.com/cilium/cilium/pkg/k8s/slim/k8s/api/core/v1.Namespace].Start" subsys=hive
level=info msg="Start hook executed" duration="1.208µs" function="*resource.resource[*github.com/cilium/cilium/pkg/k8s/slim/k8s/api/core/v1.Namespace].Start" subsys=hive
level=debug msg="Executing start hook" function="*resource.resource[*github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2alpha1.CiliumLoadBalancerIPPool].Start" subsys=hive
level=info msg="Start hook executed" duration="8.459µs" function="*resource.resource[*github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2alpha1.CiliumLoadBalancerIPPool].Start" subsys=hive
level=debug msg="Executing start hook" function="*resource.resource[*github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2.CiliumIdentity].Start" subsys=hive
level=info msg="Start hook executed" duration="8.083µs" function="*resource.resource[*github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2.CiliumIdentity].Start" subsys=hive
level=debug msg="Executing start hook" function="*resource.resource[*github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2.CiliumNetworkPolicy].Start" subsys=hive
level=info msg="Start hook executed" duration="8.875µs" function="*resource.resource[*github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2.CiliumNetworkPolicy].Start" subsys=hive
level=debug msg="Executing start hook" function="*resource.resource[*github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2.CiliumClusterwideNetworkPolicy].Start" subsys=hive
level=info msg="Start hook executed" duration="13.292µs" function="*resource.resource[*github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2.CiliumClusterwideNetworkPolicy].Start" subsys=hive
level=debug msg="Executing start hook" function="*resource.resource[*github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2alpha1.CiliumCIDRGroup].Start" subsys=hive
level=info msg="Start hook executed" duration="10.167µs" function="*resource.resource[*github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2alpha1.CiliumCIDRGroup].Start" subsys=hive
level=debug msg="Executing start hook" function="endpointmanager.newDefaultEndpointManager.func1 (cell.go:185)" subsys=hive
level=debug msg="Starting new controller" name=endpoint-gc subsys=controller uuid=d4b14e65-58a4-4882-9c49-c486239d096c
level=info msg="Start hook executed" duration="41.917µs" function="endpointmanager.newDefaultEndpointManager.func1 (cell.go:185)" subsys=hive
level=debug msg="Executing start hook" function="cmd.newPolicyTrifecta.func1 (policy.go:129)" subsys=hive
level=debug msg="Controller func execution time: 1.708µs" name=endpoint-gc subsys=controller uuid=d4b14e65-58a4-4882-9c49-c486239d096c
level=debug msg="creating new EventQueue" name=repository-change-queue numBufferedEvents=100 subsys=eventqueue
level=debug msg="creating new EventQueue" name=repository-reaction-queue numBufferedEvents=100 subsys=eventqueue
level=info msg="Start hook executed" duration=3.658416ms function="cmd.newPolicyTrifecta.func1 (policy.go:129)" subsys=hive
level=debug msg="Executing start hook" function="*manager.manager.Start" subsys=hive
level=debug msg="Performing regular background work" subsys=nodemanager syncInterval=1m0s
level=info msg="Start hook executed" duration=1.868792ms function="*manager.manager.Start" subsys=hive
level=debug msg="Executing start hook" function="monitor.(*dropMonitor).OnStart" subsys=hive
level=info msg="Start hook executed" duration="896.292µs" function="monitor.(*dropMonitor).OnStart" subsys=hive
level=debug msg="Executing start hook" function="*cni.cniConfigManager.Start" subsys=hive
level=debug msg="Starting new controller" name=write-cni-file subsys=controller uuid=3cfbe411-1b59-49e7-befb-3031c69674fc
level=info msg="Start hook executed" duration="777.791µs" function="*cni.cniConfigManager.Start" subsys=hive
level=debug msg="Executing start hook" function="cmd.newDaemonPromise.func1 (daemon_main.go:1629)" subsys=hive
level=info msg="Generating CNI configuration file with mode none" subsys=cni-config
level=info msg="Activity in /host/etc/cni/net.d/, re-generating CNI configuration" subsys=cni-config
level=info msg="Activity in /host/etc/cni/net.d/, re-generating CNI configuration" subsys=cni-config
level=info msg="Activity in /host/etc/cni/net.d/, re-generating CNI configuration" subsys=cni-config
level=info msg="Activity in /host/etc/cni/net.d/, re-generating CNI configuration" subsys=cni-config
level=info msg="Auto-enabling \"enable-node-port\", \"enable-external-ips\", \"bpf-lb-sock\", \"enable-host-port\", \"enable-session-affinity\" features" subsys=daemon
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_test subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_test subsys=bpf
level=debug msg="enabling events buffer" file-path= name=cilium_lb4_services_v2 size=128 subsys=bpf ttl=0s
level=info msg="Wrote CNI configuration file to /host/etc/cni/net.d/05-cilium.conflist" subsys=cni-config
level=info msg="Activity in /host/etc/cni/net.d/, re-generating CNI configuration" subsys=cni-config
level=debug msg="Controller func execution time: 5.180875ms" name=write-cni-file subsys=controller uuid=3cfbe411-1b59-49e7-befb-3031c69674fc
level=debug msg="Controller run succeeded; waiting for next controller update or stop" name=write-cni-file subsys=controller uuid=3cfbe411-1b59-49e7-befb-3031c69674fc
level=info msg="Generating CNI configuration file with mode none" subsys=cni-config
level=debug msg="Existing CNI configuration file /host/etc/cni/net.d/05-cilium.conflist unchanged" subsys=cni-config
level=debug msg="Controller func execution time: 62.666µs" name=write-cni-file subsys=controller uuid=3cfbe411-1b59-49e7-befb-3031c69674fc
level=debug msg="Controller run succeeded; waiting for next controller update or stop" name=write-cni-file subsys=controller uuid=3cfbe411-1b59-49e7-befb-3031c69674fc
level=info msg="Activity in /host/etc/cni/net.d/, re-generating CNI configuration" subsys=cni-config
level=debug msg="enabling events buffer" file-path= name=cilium_lb4_backends_v2 size=128 subsys=bpf ttl=0s
level=debug msg="enabling events buffer" file-path= name=cilium_lb4_backends_v3 size=128 subsys=bpf ttl=0s
level=info msg="Generating CNI configuration file with mode none" subsys=cni-config
level=debug msg="Existing CNI configuration file /host/etc/cni/net.d/05-cilium.conflist unchanged" subsys=cni-config
level=debug msg="Controller func execution time: 85.25µs" name=write-cni-file subsys=controller uuid=3cfbe411-1b59-49e7-befb-3031c69674fc
level=debug msg="Controller run succeeded; waiting for next controller update or stop" name=write-cni-file subsys=controller uuid=3cfbe411-1b59-49e7-befb-3031c69674fc
level=info msg="Generating CNI configuration file with mode none" subsys=cni-config
level=debug msg="Existing CNI configuration file /host/etc/cni/net.d/05-cilium.conflist unchanged" subsys=cni-config
level=debug msg="Controller func execution time: 66.708µs" name=write-cni-file subsys=controller uuid=3cfbe411-1b59-49e7-befb-3031c69674fc
level=debug msg="Controller run succeeded; waiting for next controller update or stop" name=write-cni-file subsys=controller uuid=3cfbe411-1b59-49e7-befb-3031c69674fc
level=debug msg="enabling events buffer" file-path= name=cilium_lb4_reverse_nat size=128 subsys=bpf ttl=0s
level=debug msg="enabling events buffer" file-path= name=cilium_lb4_crab size=128 subsys=bpf ttl=0s
level=debug msg="enabling events buffer" file-path= name=cilium_lb4_crab_long size=128 subsys=bpf ttl=0s
level=debug msg="enabling events buffer" file-path= name=cilium_lb_affinity_match size=128 subsys=bpf ttl=0s
level=debug msg="enabling events buffer" file-path= name=cilium_lb4_source_range size=128 subsys=bpf ttl=0s
level=info msg="Inheriting MTU from external network interface" device=eth0 ipAddr=172.21.0.2 mtu=1500 subsys=mtu
level=debug msg="enabling events buffer" file-path= name=cilium_ipcache size=1024 subsys=bpf ttl=0s
level=debug msg="creating new EventQueue" name=config-modify-queue numBufferedEvents=10 subsys=eventqueue
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ipcache subsys=bpf
level=info msg="Envoy: Starting xDS gRPC server listening on /var/run/cilium/xds.sock" subsys=envoy-manager
level=debug msg="enabling events buffer" file-path= name=cilium_lxc size=128 subsys=bpf ttl=0s
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_lxc subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ipcache subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_node_map subsys=ebpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_metrics subsys=ebpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_lb4_reverse_sk subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_lb4_reverse_sk subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_lb4_services_v2 subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_lb4_backends_v3 subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_lb4_reverse_nat subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_lb4_crab subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_lb4_crab_long subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_events subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_events subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_signals subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_signals subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_call_policy subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_call_policy subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_nodeport_neigh4 subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_nodeport_neigh4 subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ipv4_frag_datagrams subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ipv4_frag_datagrams subsys=bpf
level=debug msg="Starting new controller" name=metricsmap-bpf-prom-sync subsys=controller uuid=38a9c0b7-176f-4a35-865f-69a2af221242
level=debug msg="Controller func execution time: 27.291µs" name=metricsmap-bpf-prom-sync subsys=controller uuid=38a9c0b7-176f-4a35-865f-69a2af221242
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_lb_affinity_match subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_lb4_affinity subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_lb4_source_range subsys=bpf
level=info msg="Restored 0 node IDs from the BPF map" subsys=linux-datapath
level=info msg="Restored services from maps" failedServices=0 restoredServices=0 subsys=service
level=info msg="Restored backends from maps" failedBackends=0 restoredBackends=0 skippedBackends=0 subsys=service
level=info msg="Reading old endpoints..." subsys=daemon
level=info msg="No old endpoints found." subsys=daemon
level=debug msg="Starting new controller" name=dns-garbage-collector-job subsys=controller uuid=2b14121f-464b-409a-8896-af0196b8affa
level=debug msg="Running 'iptables -t mangle -n -L CILIUM_PRE_mangle' command" subsys=iptables
level=debug msg="Controller func execution time: 2.417µs" name=dns-garbage-collector-job subsys=controller uuid=2b14121f-464b-409a-8896-af0196b8affa
level=debug msg="DNS Proxy port is configured to 0. A random port will be assigned by the OS." subsys=fqdn/dnsproxy
level=debug msg="DNS Proxy bound to address" address="[::]:39151" subsys=fqdn/dnsproxy
level=info msg="Waiting until all Cilium CRDs are available" subsys=k8s
level=debug msg="waiting for cache to synchronize" kubernetesResource="crd:ciliumnodes.cilium.io" subsys=k8s
level=debug msg="waiting for cache to synchronize" kubernetesResource="crd:ciliumendpoints.cilium.io" subsys=k8s
level=debug msg="waiting for cache to synchronize" kubernetesResource="crd:ciliumnetworkpolicies.cilium.io" subsys=k8s
level=debug msg="waiting for cache to synchronize" kubernetesResource="crd:ciliumnodeconfigs.cilium.io" subsys=k8s
level=debug msg="waiting for cache to synchronize" kubernetesResource="crd:ciliumloadbalancerippools.cilium.io" subsys=k8s
level=debug msg="waiting for cache to synchronize" kubernetesResource="crd:ciliumidentities.cilium.io" subsys=k8s
level=debug msg="waiting for cache to synchronize" kubernetesResource="crd:ciliumclusterwidenetworkpolicies.cilium.io" subsys=k8s
level=debug msg="waiting for cache to synchronize" kubernetesResource="crd:ciliumcidrgroups.cilium.io" subsys=k8s
level=debug msg="cache synced" kubernetesResource="crd:ciliumnodes.cilium.io" subsys=k8s
level=debug msg="cache synced" kubernetesResource="crd:ciliumidentities.cilium.io" subsys=k8s
level=debug msg="cache synced" kubernetesResource="crd:ciliumnodeconfigs.cilium.io" subsys=k8s
level=debug msg="cache synced" kubernetesResource="crd:ciliumendpoints.cilium.io" subsys=k8s
level=debug msg="cache synced" kubernetesResource="crd:ciliumcidrgroups.cilium.io" subsys=k8s
level=debug msg="cache synced" kubernetesResource="crd:ciliumnetworkpolicies.cilium.io" subsys=k8s
level=debug msg="cache synced" kubernetesResource="crd:ciliumloadbalancerippools.cilium.io" subsys=k8s
level=debug msg="cache synced" kubernetesResource="crd:ciliumclusterwidenetworkpolicies.cilium.io" subsys=k8s
level=info msg="All Cilium CRDs have been found and are available" subsys=k8s
level=debug msg="waiting for cache to synchronize" kubernetesResource="core/v1::Node" subsys=k8s
level=debug msg="cache synced" kubernetesResource="core/v1::Node" subsys=k8s
level=info msg="Retrieved node information from kubernetes node" nodeName=kind-worker4 subsys=k8s
level=info msg="Received own node information from API server" ipAddr.ipv4=172.21.0.2 ipAddr.ipv6="fc00:c111::2" k8sNodeIP=172.21.0.2 labels="map[beta.kubernetes.io/arch:arm64 beta.kubernetes.io/os:linux kubernetes.io/arch:arm64 kubernetes.io/hostname:kind-worker4 kubernetes.io/os:linux]" nodeName=kind-worker4 subsys=k8s v4Prefix=10.244.1.0/24 v6Prefix="fd00:10:244:1::/64"
level=info msg="k8s mode: Allowing localhost to reach local endpoints" subsys=daemon
level=info msg="Direct routing device detected" direct-routing-device=eth0 subsys=linux-datapath
level=info msg="Detected devices" devices="[eth0]" subsys=linux-datapath
level=info msg="BPF host routing requires enable-bpf-masquerade. Falling back to legacy host routing (enable-host-legacy-routing=true)." subsys=daemon
level=info msg="Enabling k8s event listener" subsys=k8s-watcher
level=debug msg="waiting for cache to synchronize" kubernetesResource="core/v1::Service" subsys=k8s
level=debug msg="waiting for cache to synchronize" kubernetesResource="core/v1::Namespace" subsys=k8s
level=debug msg="waiting for cache to synchronize" kubernetesResource="networking.k8s.io/v1::NetworkPolicy" subsys=k8s
level=debug msg="waiting for cache to synchronize" kubernetesResource="core/v1::Pods" subsys=k8s
level=debug msg="waiting for cache to synchronize" kubernetesResource="discovery/v1::EndpointSlice" subsys=k8s
level=debug msg="Skip pod event using host networking" hostIP=172.21.0.2 k8sNamespace=kube-system k8sPodName=kube-proxy-7dpp6 podIP=172.21.0.2 podIPs="[{172.21.0.2} {fc00:c111::2}]" subsys=k8s-watcher
level=debug msg="Skip pod event using host networking" hostIP=172.21.0.2 k8sNamespace=kube-system k8sPodName=cilium-58hm6 podIP=172.21.0.2 podIPs="[{172.21.0.2} {fc00:c111::2}]" subsys=k8s-watcher
level=debug msg="waiting for cache to synchronize" kubernetesResource="cilium/v2::CiliumClusterwideNetworkPolicy" subsys=k8s
level=debug msg="waiting for cache to synchronize" kubernetesResource="cilium/v2::CiliumNetworkPolicy" subsys=k8s
level=debug msg="waiting for cache to synchronize" kubernetesResource="cilium/v2alpha1::CiliumCIDRGroup" subsys=k8s
level=debug msg="waiting for cache to synchronize" kubernetesResource="cilium/v2::CiliumEndpoint" subsys=k8s
level=debug msg="waiting for cache to synchronize" kubernetesResource="cilium/v2::CiliumNode" subsys=k8s
level=info msg="Waiting until local node addressing before starting watchers depending on it" subsys=k8s-watcher
level=info msg="Removing stale endpoint interfaces" subsys=daemon
level=info msg="Skipping kvstore configuration" subsys=daemon
level=debug msg="Processing 0 endpoints for EndpointSlice kube-dns-mpghx" subsys=k8s
level=debug msg="EndpointSlice kube-dns-mpghx has 0 backends" subsys=k8s
level=debug msg="Processing 1 endpoints for EndpointSlice kubernetes" subsys=k8s
level=debug msg="EndpointSlice kubernetes has 1 backends" subsys=k8s
level=info msg="Initializing node addressing" subsys=daemon
level=info msg="Initializing kubernetes IPAM" subsys=ipam v4Prefix=10.244.1.0/24 v6Prefix="<nil>"
level=info msg="Restoring endpoints..." subsys=daemon
level=debug msg="Kubernetes service definition changed" action=service-updated endpoints= k8sNamespace=kube-system k8sSvcName=kube-dns old-service=nil service="frontends:[10.96.0.10]/ports=[dns dns-tcp metrics]/selector=map[k8s-app:kube-dns]" subsys=k8s-watcher
level=debug msg="Starting new controller" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Resolving identity" identityLabels="cidr:172.21.0.4/32,reserved:kube-apiserver,reserved:world" subsys=identity-cache
level=debug msg="UpdateIdentities: Adding a new identity" identity=16777217 labels="[cidr:0.0.0.0/0 cidr:128.0.0.0/1 cidr:128.0.0.0/2 cidr:160.0.0.0/3 cidr:160.0.0.0/4 cidr:168.0.0.0/5 cidr:172.0.0.0/10 cidr:172.0.0.0/11 cidr:172.0.0.0/6 cidr:172.0.0.0/7 cidr:172.0.0.0/8 cidr:172.0.0.0/9 cidr:172.16.0.0/12 cidr:172.16.0.0/13 cidr:172.20.0.0/14 cidr:172.20.0.0/15 cidr:172.21.0.0/16 cidr:172.21.0.0/17 cidr:172.21.0.0/18 cidr:172.21.0.0/19 cidr:172.21.0.0/20 cidr:172.21.0.0/21 cidr:172.21.0.0/22 cidr:172.21.0.0/23 cidr:172.21.0.0/24 cidr:172.21.0.0/25 cidr:172.21.0.0/26 cidr:172.21.0.0/27 cidr:172.21.0.0/28 cidr:172.21.0.0/29 cidr:172.21.0.4/30 cidr:172.21.0.4/31 cidr:172.21.0.4/32 reserved:kube-apiserver reserved:world]" subsys=policy
level=debug msg="Waiting for proxy updates to complete..." subsys=endpoint-manager
level=debug msg="Wait time for proxy updates: 15.75µs" subsys=endpoint-manager
level=debug msg="Upserting IP into ipcache layer" identity="{16777217 kube-apiserver [] false true}" ipAddr=172.21.0.4/32 key=0 subsys=ipcache
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{16777217 kube-apiserver [] false true}" ipAddr="{172.21.0.4 ffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Controller func execution time: 1.01125ms" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller run succeeded; waiting for next controller update or stop" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="UpdateIdentities: Skipping add of an existing identical identity" identity=16777217 subsys=policy
level=debug msg="Regenerating all endpoints" subsys=policy
level=info msg="regenerating all endpoints" reason="one or more identities created or deleted" subsys=endpoint-manager
level=info msg="Endpoints restored" failed=0 restored=0 subsys=daemon
level=debug msg="Allocated random IP" ip=10.244.1.145 owner=router pool=default subsys=ipam
level=info msg="Addressing information:" subsys=daemon
level=info msg="  Cluster-Name: kind-kind" subsys=daemon
level=info msg="  Cluster-ID: 0" subsys=daemon
level=info msg="  Local node-name: kind-worker4" subsys=daemon
level=info msg="  Node-IPv6: fc00:c111::2" subsys=daemon
level=info msg="  External-Node IPv4: 172.21.0.2" subsys=daemon
level=info msg="  Internal-Node IPv4: 10.244.1.145" subsys=daemon
level=info msg="  IPv4 allocation prefix: 10.244.1.0/24" subsys=daemon
level=info msg="  IPv4 native routing prefix: 10.0.0.0/24" subsys=daemon
level=info msg="  Loopback IPv4: 169.254.42.1" subsys=daemon
level=info msg="  Local IPv4 addresses:" subsys=daemon
level=info msg="  - 172.21.0.2" subsys=daemon
level=debug msg="Allocated random IP" ip=10.244.1.174 owner=health pool=default subsys=ipam
level=debug msg="IPv4 health endpoint address: 10.244.1.174" subsys=daemon
level=debug msg="Received node update event from local: types.Node{Name:\"kind-worker4\", Cluster:\"kind-kind\", IPAddresses:[]types.Address{types.Address{Type:\"InternalIP\", IP:net.IP{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xac, 0x15, 0x0, 0x2}}, types.Address{Type:\"InternalIP\", IP:net.IP{0xfc, 0x0, 0xc1, 0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2}}, types.Address{Type:\"CiliumInternalIP\", IP:net.IP{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xa, 0xf4, 0x1, 0x91}}}, IPv4AllocCIDR:(*cidr.CIDR)(0x4000dba1f8), IPv4SecondaryAllocCIDRs:[]*cidr.CIDR(nil), IPv6AllocCIDR:(*cidr.CIDR)(nil), IPv6SecondaryAllocCIDRs:[]*cidr.CIDR(nil), IPv4HealthIP:net.IP{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xa, 0xf4, 0x1, 0xae}, IPv6HealthIP:net.IP(nil), IPv4IngressIP:net.IP(nil), IPv6IngressIP:net.IP(nil), ClusterID:0x0, Source:\"local\", EncryptionKey:0x0, Labels:map[string]string{\"beta.kubernetes.io/arch\":\"arm64\", \"beta.kubernetes.io/os\":\"linux\", \"kubernetes.io/arch\":\"arm64\", \"kubernetes.io/hostname\":\"kind-worker4\", \"kubernetes.io/os\":\"linux\"}, Annotations:map[string]string(nil), NodeIdentity:0x1, WireguardPubKey:\"\"}" subsys=nodemanager
level=debug msg="Running 'ipset create cilium_node_set_v4 iphash family inet -exist' command" subsys=iptables
level=debug msg="Received node update event from custom-resource: types.Node{Name:\"kind-control-plane\", Cluster:\"kind-kind\", IPAddresses:[]types.Address{types.Address{Type:\"InternalIP\", IP:net.IP{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xac, 0x15, 0x0, 0x4}}, types.Address{Type:\"InternalIP\", IP:net.IP{0xfc, 0x0, 0xc1, 0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4}}, types.Address{Type:\"CiliumInternalIP\", IP:net.IP{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xa, 0xf4, 0x0, 0xb5}}}, IPv4AllocCIDR:(*cidr.CIDR)(0x4000795650), IPv4SecondaryAllocCIDRs:[]*cidr.CIDR(nil), IPv6AllocCIDR:(*cidr.CIDR)(nil), IPv6SecondaryAllocCIDRs:[]*cidr.CIDR(nil), IPv4HealthIP:net.IP{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xa, 0xf4, 0x0, 0xb}, IPv6HealthIP:net.IP(nil), IPv4IngressIP:net.IP(nil), IPv6IngressIP:net.IP(nil), ClusterID:0x0, Source:\"custom-resource\", EncryptionKey:0x0, Labels:map[string]string{\"beta.kubernetes.io/arch\":\"arm64\", \"beta.kubernetes.io/os\":\"linux\", \"kubernetes.io/arch\":\"arm64\", \"kubernetes.io/hostname\":\"kind-control-plane\", \"kubernetes.io/os\":\"linux\", \"node-role.kubernetes.io/control-plane\":\"\", \"node.kubernetes.io/exclude-from-external-load-balancers\":\"\"}, Annotations:map[string]string(nil), NodeIdentity:0x0, WireguardPubKey:\"\"}" subsys=nodemanager
level=debug msg="Running 'ipset create cilium_node_set_v4 iphash family inet -exist' command" subsys=iptables
level=info msg="Adding local node to cluster" node="{kind-worker4 kind-kind [{InternalIP 172.21.0.2} {InternalIP fc00:c111::2} {CiliumInternalIP 10.244.1.145}] 10.244.1.0/24 [] <nil> [] 10.244.1.174 <nil> <nil> <nil> 0 local 0 map[beta.kubernetes.io/arch:arm64 beta.kubernetes.io/os:linux kubernetes.io/arch:arm64 kubernetes.io/hostname:kind-worker4 kubernetes.io/os:linux] map[] 1 }" subsys=nodediscovery
level=debug msg="Upserting service" backends="[]" l7LBFrontendPorts="[]" l7LBProxyPort=0 loadBalancerSourceRanges="[]" serviceIP="{10.96.0.10 {TCP 9153} 0}" serviceName=kube-dns serviceNamespace=kube-system sessionAffinity=false sessionAffinityTimeout=0 subsys=service svcExtTrafficPolicy=Cluster svcHealthCheckNodePort=0 svcIntTrafficPolicy=Cluster svcType=ClusterIP
level=debug msg="Resolving service" l3n4Addr="{AddrCluster:10.96.0.10 L4Addr:{Protocol:TCP Port:9153} Scope:0}" subsys=service
level=debug msg="Acquired service ID" backends="[]" l7LBFrontendPorts="[]" l7LBProxyPort=0 loadBalancerSourceRanges="[]" serviceID=1 serviceIP="{10.96.0.10 {TCP 9153} 0}" serviceName=kube-dns serviceNamespace=kube-system sessionAffinity=false sessionAffinityTimeout=0 subsys=service svcExtTrafficPolicy=Cluster svcHealthCheckNodePort=0 svcIntTrafficPolicy=Cluster svcType=ClusterIP
level=debug msg="Deleting backends from session affinity match" backends="[]" serviceID=1 subsys=service
level=debug msg="Upserted service entry" backendSlot=0 subsys=map-lb svcKey="10.96.0.10:49443" svcVal="0 0 (256) [0x0 0x0]"
level=debug msg="Adding backends to affinity match map" backends="[]" serviceID=1 subsys=service
level=debug msg="Upserting service" backends="[]" l7LBFrontendPorts="[]" l7LBProxyPort=0 loadBalancerSourceRanges="[]" serviceIP="{10.96.0.10 {TCP 53} 0}" serviceName=kube-dns serviceNamespace=kube-system sessionAffinity=false sessionAffinityTimeout=0 subsys=service svcExtTrafficPolicy=Cluster svcHealthCheckNodePort=0 svcIntTrafficPolicy=Cluster svcType=ClusterIP
level=debug msg="Resolving service" l3n4Addr="{AddrCluster:10.96.0.10 L4Addr:{Protocol:TCP Port:53} Scope:0}" subsys=service
level=debug msg="Acquired service ID" backends="[]" l7LBFrontendPorts="[]" l7LBProxyPort=0 loadBalancerSourceRanges="[]" serviceID=2 serviceIP="{10.96.0.10 {TCP 53} 0}" serviceName=kube-dns serviceNamespace=kube-system sessionAffinity=false sessionAffinityTimeout=0 subsys=service svcExtTrafficPolicy=Cluster svcHealthCheckNodePort=0 svcIntTrafficPolicy=Cluster svcType=ClusterIP
level=debug msg="Deleting backends from session affinity match" backends="[]" serviceID=2 subsys=service
level=debug msg="Upserted service entry" backendSlot=0 subsys=map-lb svcKey="10.96.0.10:13568" svcVal="0 0 (512) [0x0 0x0]"
level=debug msg="Adding backends to affinity match map" backends="[]" serviceID=2 subsys=service
level=debug msg="Kubernetes service definition changed" action=service-updated endpoints="172.21.0.4:6443/TCP" k8sNamespace=default k8sSvcName=kubernetes old-service=nil service="frontends:[10.96.0.1]/ports=[https]/selector=map[]" subsys=k8s-watcher
level=debug msg="Upserting service" backends="[172.21.0.4:6443]" l7LBFrontendPorts="[]" l7LBProxyPort=0 loadBalancerSourceRanges="[]" serviceIP="{10.96.0.1 {TCP 443} 0}" serviceName=kubernetes serviceNamespace=default sessionAffinity=false sessionAffinityTimeout=0 subsys=service svcExtTrafficPolicy=Cluster svcHealthCheckNodePort=0 svcIntTrafficPolicy=Cluster svcType=ClusterIP
level=debug msg="Resolving service" l3n4Addr="{AddrCluster:10.96.0.1 L4Addr:{Protocol:TCP Port:443} Scope:0}" subsys=service
level=debug msg="Acquired service ID" backends="[172.21.0.4:6443]" l7LBFrontendPorts="[]" l7LBProxyPort=0 loadBalancerSourceRanges="[]" serviceID=3 serviceIP="{10.96.0.1 {TCP 443} 0}" serviceName=kubernetes serviceNamespace=default sessionAffinity=false sessionAffinityTimeout=0 subsys=service svcExtTrafficPolicy=Cluster svcHealthCheckNodePort=0 svcIntTrafficPolicy=Cluster svcType=ClusterIP
level=debug msg="Deleting backends from session affinity match" backends="[]" serviceID=3 subsys=service
level=debug msg="Adding new backend" backendID=1 backendWeight=100 backends="[172.21.0.4:6443]" l3n4Addr="{172.21.0.4 {TCP 6443} 0}" l7LBFrontendPorts="[]" l7LBProxyPort=0 loadBalancerSourceRanges="[]" serviceID=3 serviceIP="{10.96.0.1 {TCP 443} 0}" serviceName=kubernetes serviceNamespace=default sessionAffinity=false sessionAffinityTimeout=0 subsys=service svcExtTrafficPolicy=Cluster svcHealthCheckNodePort=0 svcIntTrafficPolicy=Cluster svcType=ClusterIP
level=debug msg="Upserted service entry" backendSlot=1 subsys=map-lb svcKey="10.96.0.1:47873" svcVal="1 0 (768) [0x0 0x0]"
level=debug msg="Upserted service entry" backendSlot=0 subsys=map-lb svcKey="10.96.0.1:47873" svcVal="0 1 (768) [0x0 0x0]"
level=debug msg="Adding backends to affinity match map" backends="[]" serviceID=3 subsys=service
level=debug msg="Running 'ipset add cilium_node_set_v4 172.21.0.2 -exist' command" subsys=iptables
level=debug msg="Running 'ipset add cilium_node_set_v4 172.21.0.4 -exist' command" subsys=iptables
level=debug msg="Updating existing controller" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller update time: 41.166µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Running 'ipset create cilium_node_set_v6 iphash family inet6 -exist' command" subsys=iptables
level=debug msg="Resolving identity" identityLabels="reserved:kube-apiserver,reserved:remote-node" subsys=identity-cache
level=debug msg="Resolved reserved identity" identity=kube-apiserver identityLabels="reserved:kube-apiserver,reserved:remote-node" isNew=false subsys=identity-cache
level=debug msg="UpdateIdentities: Skipping add of an existing identical identity" identity=kube-apiserver subsys=policy
level=debug msg="Waiting for proxy updates to complete..." subsys=endpoint-manager
level=debug msg="Wait time for proxy updates: 20.208µs" subsys=endpoint-manager
level=debug msg="Upserting IP into ipcache layer" identity="{kube-apiserver kube-apiserver [] false true}" ipAddr=172.21.0.4/32 key=0 subsys=ipcache
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{kube-apiserver kube-apiserver [] false true}" ipAddr="{172.21.0.4 ffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="UpdateIdentities: Deleting identity" identity=16777217 labels="[cidr:0.0.0.0/0 cidr:128.0.0.0/1 cidr:128.0.0.0/2 cidr:160.0.0.0/3 cidr:160.0.0.0/4 cidr:168.0.0.0/5 cidr:172.0.0.0/10 cidr:172.0.0.0/11 cidr:172.0.0.0/6 cidr:172.0.0.0/7 cidr:172.0.0.0/8 cidr:172.0.0.0/9 cidr:172.16.0.0/12 cidr:172.16.0.0/13 cidr:172.20.0.0/14 cidr:172.20.0.0/15 cidr:172.21.0.0/16 cidr:172.21.0.0/17 cidr:172.21.0.0/18 cidr:172.21.0.0/19 cidr:172.21.0.0/20 cidr:172.21.0.0/21 cidr:172.21.0.0/22 cidr:172.21.0.0/23 cidr:172.21.0.0/24 cidr:172.21.0.0/25 cidr:172.21.0.0/26 cidr:172.21.0.0/27 cidr:172.21.0.0/28 cidr:172.21.0.0/29 cidr:172.21.0.4/30 cidr:172.21.0.4/31 cidr:172.21.0.4/32 reserved:kube-apiserver reserved:world]" subsys=policy
level=debug msg="Waiting for proxy updates to complete..." subsys=endpoint-manager
level=debug msg="Wait time for proxy updates: 32.125µs" subsys=endpoint-manager
level=debug msg="Controller func execution time: 345.417µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller run succeeded; waiting for next controller update or stop" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=warning msg="UpdateIdentities: Skipping Delete of a non-existing identity" identity=16777217 subsys=policy
level=debug msg="Running 'ipset add cilium_node_set_v6 fc00:c111::4 -exist' command" subsys=iptables
level=debug msg="Upserting IP into ipcache layer" identity="{remote-node custom-resource [] false false}" ipAddr="fc00:c111::4/128" key=0 subsys=ipcache
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{remote-node custom-resource [] false false}" ipAddr="{fc00:c111::4 ffffffffffffffffffffffffffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Updating existing controller" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller update time: 29.75µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Resolving identity" identityLabels="reserved:remote-node" subsys=identity-cache
level=debug msg="Resolved reserved identity" identity=remote-node identityLabels="reserved:remote-node" isNew=false subsys=identity-cache
level=debug msg="Upserting IP into ipcache layer" identity="{remote-node custom-resource [] false false}" ipAddr=10.244.0.181/32 key=0 subsys=ipcache
level=debug msg="Allocated new node ID for node IP address" ipAddr=172.21.0.4 nodeID=12602 subsys=linux-datapath
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{remote-node custom-resource [] false false}" ipAddr="{10.244.0.181 ffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Updating existing controller" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller update time: 4.959µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller func execution time: 115.625µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller run succeeded; waiting for next controller update or stop" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Upserting IP into ipcache layer" identity="{health custom-resource [] false false}" ipAddr=10.244.0.11 key=0 subsys=ipcache
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{health custom-resource [] false false}" ipAddr="{10.244.0.11 ffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Received node update event from custom-resource: types.Node{Name:\"kind-worker3\", Cluster:\"kind-kind\", IPAddresses:[]types.Address{types.Address{Type:\"InternalIP\", IP:net.IP{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xac, 0x15, 0x0, 0x6}}, types.Address{Type:\"InternalIP\", IP:net.IP{0xfc, 0x0, 0xc1, 0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6}}, types.Address{Type:\"CiliumInternalIP\", IP:net.IP{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xa, 0xf4, 0x3, 0xd0}}}, IPv4AllocCIDR:(*cidr.CIDR)(0x4001060288), IPv4SecondaryAllocCIDRs:[]*cidr.CIDR(nil), IPv6AllocCIDR:(*cidr.CIDR)(nil), IPv6SecondaryAllocCIDRs:[]*cidr.CIDR(nil), IPv4HealthIP:net.IP{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xa, 0xf4, 0x3, 0xb2}, IPv6HealthIP:net.IP(nil), IPv4IngressIP:net.IP(nil), IPv6IngressIP:net.IP(nil), ClusterID:0x0, Source:\"custom-resource\", EncryptionKey:0x0, Labels:map[string]string{\"beta.kubernetes.io/arch\":\"arm64\", \"beta.kubernetes.io/os\":\"linux\", \"kubernetes.io/arch\":\"arm64\", \"kubernetes.io/hostname\":\"kind-worker3\", \"kubernetes.io/os\":\"linux\"}, Annotations:map[string]string(nil), NodeIdentity:0x0, WireguardPubKey:\"\"}" subsys=nodemanager
level=debug msg="Running 'ipset create cilium_node_set_v4 iphash family inet -exist' command" subsys=iptables
level=debug msg="Resolving identity" identityLabels="reserved:remote-node" subsys=identity-cache
level=debug msg="Resolved reserved identity" identity=remote-node identityLabels="reserved:remote-node" isNew=false subsys=identity-cache
level=debug msg="Controller func execution time: 248µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller run succeeded; waiting for next controller update or stop" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Running 'ipset add cilium_node_set_v4 172.21.0.6 -exist' command" subsys=iptables
level=debug msg="Upserting IP into ipcache layer" identity="{host local [] false false}" ipAddr=172.21.0.2/32 key=0 subsys=ipcache
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{host local [] false false}" ipAddr="{172.21.0.2 ffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Updating existing controller" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller update time: 42.833µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Running 'ipset create cilium_node_set_v6 iphash family inet6 -exist' command" subsys=iptables
level=debug msg="Controller func execution time: 8.709µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller run succeeded; waiting for next controller update or stop" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Upserting IP into ipcache layer" identity="{remote-node custom-resource [] false false}" ipAddr=172.21.0.6/32 key=0 subsys=ipcache
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{remote-node custom-resource [] false false}" ipAddr="{172.21.0.6 ffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Updating existing controller" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller update time: 6.791µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Running 'ipset create cilium_node_set_v6 iphash family inet6 -exist' command" subsys=iptables
level=debug msg="Resolving identity" identityLabels="reserved:remote-node" subsys=identity-cache
level=debug msg="Resolved reserved identity" identity=remote-node identityLabels="reserved:remote-node" isNew=false subsys=identity-cache
level=debug msg="Controller func execution time: 82.083µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller run succeeded; waiting for next controller update or stop" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Running 'ipset add cilium_node_set_v6 fc00:c111::2 -exist' command" subsys=iptables
level=debug msg="Running 'ipset add cilium_node_set_v6 fc00:c111::6 -exist' command" subsys=iptables
level=debug msg="Upserting IP into ipcache layer" identity="{host local [] false false}" ipAddr="fc00:c111::2/128" key=0 subsys=ipcache
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{host local [] false false}" ipAddr="{fc00:c111::2 ffffffffffffffffffffffffffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Updating existing controller" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller update time: 37.917µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Upserting IP into ipcache layer" identity="{host local [] false false}" ipAddr=10.244.1.145/32 key=0 subsys=ipcache
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{host local [] false false}" ipAddr="{10.244.1.145 ffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Updating existing controller" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller func execution time: 6.083µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller run succeeded; waiting for next controller update or stop" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Upserting IP into ipcache layer" identity="{remote-node custom-resource [] false false}" ipAddr="fc00:c111::6/128" key=0 subsys=ipcache
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{remote-node custom-resource [] false false}" ipAddr="{fc00:c111::6 ffffffffffffffffffffffffffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Updating existing controller" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller update time: 1.375459ms" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Upserting IP into ipcache layer" identity="{health local [] false false}" ipAddr=10.244.1.174 key=0 subsys=ipcache
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{health local [] false false}" ipAddr="{10.244.1.174 ffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Controller update time: 1.165834ms" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Upserting IP into ipcache layer" identity="{remote-node custom-resource [] false false}" ipAddr=10.244.3.208/32 key=0 subsys=ipcache
level=debug msg="Allocated new node ID for node IP address" ipAddr=172.21.0.6 nodeID=49982 subsys=linux-datapath
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{remote-node custom-resource [] false false}" ipAddr="{10.244.3.208 ffffffff}" modification=Upsert subsys=datapath-ipcache
level=info msg="Waiting until all pre-existing resources have been received" subsys=k8s-watcher
level=debug msg="Resolving identity" identityLabels="reserved:remote-node" subsys=identity-cache
level=debug msg="Resolved reserved identity" identity=remote-node identityLabels="reserved:remote-node" isNew=false subsys=identity-cache
level=debug msg="Controller func execution time: 582.167µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller run succeeded; waiting for next controller update or stop" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Updating existing controller" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller update time: 37.042µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Upserting IP into ipcache layer" identity="{health custom-resource [] false false}" ipAddr=10.244.3.178 key=0 subsys=ipcache
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{health custom-resource [] false false}" ipAddr="{10.244.3.178 ffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Received node update event from custom-resource: types.Node{Name:\"kind-worker\", Cluster:\"kind-kind\", IPAddresses:[]types.Address{types.Address{Type:\"InternalIP\", IP:net.IP{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xac, 0x15, 0x0, 0x5}}, types.Address{Type:\"InternalIP\", IP:net.IP{0xfc, 0x0, 0xc1, 0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5}}, types.Address{Type:\"CiliumInternalIP\", IP:net.IP{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xa, 0xf4, 0x4, 0x44}}}, IPv4AllocCIDR:(*cidr.CIDR)(0x4000a382b8), IPv4SecondaryAllocCIDRs:[]*cidr.CIDR(nil), IPv6AllocCIDR:(*cidr.CIDR)(nil), IPv6SecondaryAllocCIDRs:[]*cidr.CIDR(nil), IPv4HealthIP:net.IP{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xa, 0xf4, 0x4, 0x9}, IPv6HealthIP:net.IP(nil), IPv4IngressIP:net.IP(nil), IPv6IngressIP:net.IP(nil), ClusterID:0x0, Source:\"custom-resource\", EncryptionKey:0x0, Labels:map[string]string{\"beta.kubernetes.io/arch\":\"arm64\", \"beta.kubernetes.io/os\":\"linux\", \"kubernetes.io/arch\":\"arm64\", \"kubernetes.io/hostname\":\"kind-worker\", \"kubernetes.io/os\":\"linux\"}, Annotations:map[string]string(nil), NodeIdentity:0x0, WireguardPubKey:\"\"}" subsys=nodemanager
level=debug msg="Running 'ipset create cilium_node_set_v4 iphash family inet -exist' command" subsys=iptables
level=debug msg="Controller func execution time: 381.25µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller run succeeded; waiting for next controller update or stop" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Resolving identity" identityLabels="reserved:remote-node" subsys=identity-cache
level=debug msg="Resolved reserved identity" identity=remote-node identityLabels="reserved:remote-node" isNew=false subsys=identity-cache
level=debug msg="Controller func execution time: 146.75µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller run succeeded; waiting for next controller update or stop" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="stopped waiting for caches to be synced" kubernetesResource="core/v1::Node" subsys=k8s
level=debug msg="resource \"core/v1::Endpoint\" cache has synced, stopping timeout watcher" subsys=k8s
level=debug msg="resource \"discovery/v1beta1::EndpointSlice\" cache has synced, stopping timeout watcher" subsys=k8s
level=debug msg="resource \"core/v1::Node\" cache has synced, stopping timeout watcher" subsys=k8s
level=debug msg="Running 'ipset add cilium_node_set_v4 172.21.0.5 -exist' command" subsys=iptables
level=info msg="Creating or updating CiliumNode resource" node=kind-worker4 subsys=nodediscovery
level=debug msg="Upserting IP into ipcache layer" identity="{remote-node custom-resource [] false false}" ipAddr=172.21.0.5/32 key=0 subsys=ipcache
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{remote-node custom-resource [] false false}" ipAddr="{172.21.0.5 ffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Updating existing controller" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller update time: 6.166µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Running 'ipset create cilium_node_set_v6 iphash family inet6 -exist' command" subsys=iptables
level=debug msg="Resolving identity" identityLabels="reserved:remote-node" subsys=identity-cache
level=debug msg="Resolved reserved identity" identity=remote-node identityLabels="reserved:remote-node" isNew=false subsys=identity-cache
level=debug msg="Controller func execution time: 69.208µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller run succeeded; waiting for next controller update or stop" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=warning msg="Unable to get node resource" error="ciliumnodes.cilium.io \"kind-worker4\" not found" subsys=nodediscovery
level=debug msg="Running 'ipset add cilium_node_set_v6 fc00:c111::5 -exist' command" subsys=iptables
level=debug msg="Upserting IP into ipcache layer" identity="{remote-node custom-resource [] false false}" ipAddr="fc00:c111::5/128" key=0 subsys=ipcache
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{remote-node custom-resource [] false false}" ipAddr="{fc00:c111::5 ffffffffffffffffffffffffffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Updating existing controller" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller update time: 27.583µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Upserting IP into ipcache layer" identity="{remote-node custom-resource [] false false}" ipAddr=10.244.4.68/32 key=0 subsys=ipcache
level=debug msg="Allocated new node ID for node IP address" ipAddr=172.21.0.5 nodeID=3370 subsys=linux-datapath
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{remote-node custom-resource [] false false}" ipAddr="{10.244.4.68 ffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Updating existing controller" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller update time: 28.875µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Upserting IP into ipcache layer" identity="{health custom-resource [] false false}" ipAddr=10.244.4.9 key=0 subsys=ipcache
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{health custom-resource [] false false}" ipAddr="{10.244.4.9 ffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Resolving identity" identityLabels="reserved:remote-node" subsys=identity-cache
level=debug msg="Resolved reserved identity" identity=remote-node identityLabels="reserved:remote-node" isNew=false subsys=identity-cache
level=debug msg="Resolving identity" identityLabels="reserved:remote-node" subsys=identity-cache
level=debug msg="Resolved reserved identity" identity=remote-node identityLabels="reserved:remote-node" isNew=false subsys=identity-cache
level=debug msg="Controller func execution time: 36.458µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller run succeeded; waiting for next controller update or stop" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller func execution time: 625ns" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller run succeeded; waiting for next controller update or stop" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=info msg="Successfully created CiliumNode resource" subsys=nodediscovery
level=debug msg="Annotate k8s node is disabled." subsys=daemon
level=info msg="Initializing identity allocator" subsys=identity-cache
level=info msg="Allocating identities between range" cluster-id=0 max=65535 min=256 subsys=identity-cache
level=info msg="Cluster-ID is not specified, skipping ClusterMesh initialization" subsys=daemon
level=debug msg="Identity allocation backed by CRD" subsys=identity-cache
level=debug msg="Starting new controller" name=template-dir-watcher subsys=controller uuid=2fa9b596-01ee-46b1-a313-c11a7340a16f
level=debug msg="writing configuration" file-path=netdev_config.h subsys=datapath-loader
level=info msg="Setting up BPF datapath" bpfClockSource=ktime bpfInsnSet="<nil>" subsys=datapath-loader
level=info msg="Setting sysctl" subsys=sysctl sysParamName=net.core.bpf_jit_enable sysParamValue=1
level=warning msg="Unable to ensure that BPF JIT compilation is enabled. This can be ignored when Cilium is running inside non-host network namespace (e.g. with kind or minikube)" error="could not open the sysctl file /host/proc/sys/net/core/bpf_jit_enable: open /host/proc/sys/net/core/bpf_jit_enable: no such file or directory" subsys=sysctl sysParamName=net.core.bpf_jit_enable sysParamValue=1
level=info msg="Setting sysctl" subsys=sysctl sysParamName=net.ipv4.conf.all.rp_filter sysParamValue=0
level=info msg="Setting sysctl" subsys=sysctl sysParamName=net.ipv4.fib_multipath_use_neigh sysParamValue=1
level=info msg="Setting sysctl" subsys=sysctl sysParamName=kernel.unprivileged_bpf_disabled sysParamValue=1
level=info msg="Setting sysctl" subsys=sysctl sysParamName=kernel.timer_migration sysParamValue=0
level=info msg="Setting sysctl" subsys=sysctl sysParamName=net.ipv4.conf.cilium_host.forwarding sysParamValue=1
level=info msg="Setting sysctl" subsys=sysctl sysParamName=net.ipv4.conf.cilium_host.rp_filter sysParamValue=0
level=info msg="Setting sysctl" subsys=sysctl sysParamName=net.ipv4.conf.cilium_host.accept_local sysParamValue=1
level=info msg="Setting sysctl" subsys=sysctl sysParamName=net.ipv4.conf.cilium_host.send_redirects sysParamValue=0
level=info msg="Setting sysctl" subsys=sysctl sysParamName=net.ipv4.conf.cilium_net.forwarding sysParamValue=1
level=info msg="Setting sysctl" subsys=sysctl sysParamName=net.ipv4.conf.cilium_net.rp_filter sysParamValue=0
level=info msg="Setting sysctl" subsys=sysctl sysParamName=net.ipv4.conf.cilium_net.accept_local sysParamValue=1
level=info msg="Setting sysctl" subsys=sysctl sysParamName=net.ipv4.conf.cilium_net.send_redirects sysParamValue=0
level=debug msg="cache synced" kubernetesResource="discovery/v1::EndpointSlice" subsys=k8s
level=debug msg="cache synced" kubernetesResource="core/v1::Service" subsys=k8s
level=debug msg="stopped waiting for caches to be synced" kubernetesResource="core/v1::Service" subsys=k8s
level=debug msg="cache synced" kubernetesResource="core/v1::Pods" subsys=k8s
level=debug msg="stopped waiting for caches to be synced" kubernetesResource="core/v1::Pods" subsys=k8s
level=debug msg="resource \"core/v1::Pods\" cache has synced, stopping timeout watcher" subsys=k8s
level=debug msg="resource \"core/v1::Service\" cache has synced, stopping timeout watcher" subsys=k8s
level=debug msg="cache synced" kubernetesResource="networking.k8s.io/v1::NetworkPolicy" subsys=k8s
level=debug msg="stopped waiting for caches to be synced" kubernetesResource="networking.k8s.io/v1::NetworkPolicy" subsys=k8s
level=debug msg="resource \"networking.k8s.io/v1::NetworkPolicy\" cache has synced, stopping timeout watcher" subsys=k8s
level=debug msg="cache synced" kubernetesResource="cilium/v2::CiliumNode" subsys=k8s
level=debug msg="stopped waiting for caches to be synced" kubernetesResource="cilium/v2::CiliumNode" subsys=k8s
level=debug msg="resource \"cilium/v2::CiliumNode\" cache has synced, stopping timeout watcher" subsys=k8s
level=debug msg="cache synced" kubernetesResource="cilium/v2alpha1::CiliumCIDRGroup" subsys=k8s
level=debug msg="stopped waiting for caches to be synced" kubernetesResource="cilium/v2alpha1::CiliumCIDRGroup" subsys=k8s
level=debug msg="resource \"cilium/v2alpha1::CiliumCIDRGroup\" cache has synced, stopping timeout watcher" subsys=k8s
level=debug msg="cache synced" kubernetesResource="cilium/v2::CiliumClusterwideNetworkPolicy" subsys=k8s
level=debug msg="stopped waiting for caches to be synced" kubernetesResource="cilium/v2::CiliumClusterwideNetworkPolicy" subsys=k8s
level=debug msg="resource \"cilium/v2::CiliumClusterwideNetworkPolicy\" cache has synced, stopping timeout watcher" subsys=k8s
level=debug msg="cache synced" kubernetesResource="cilium/v2::CiliumNetworkPolicy" subsys=k8s
level=debug msg="stopped waiting for caches to be synced" kubernetesResource="cilium/v2::CiliumNetworkPolicy" subsys=k8s
level=debug msg="resource \"cilium/v2::CiliumNetworkPolicy\" cache has synced, stopping timeout watcher" subsys=k8s
level=debug msg="cache synced" kubernetesResource="cilium/v2::CiliumEndpoint" subsys=k8s
level=debug msg="stopped waiting for caches to be synced" kubernetesResource="cilium/v2::CiliumEndpoint" subsys=k8s
level=debug msg="resource \"cilium/v2::CiliumEndpoint\" cache has synced, stopping timeout watcher" subsys=k8s
level=debug msg="Initial list of identities received" subsys=allocator
level=debug msg="Launching compiler" args="[-emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -DCALLS_MAP=cilium_calls_lb -I/var/run/cilium/state/globals -I/var/run/cilium/state -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_sock.c -o -]" subsys=datapath-loader target=clang
level=debug msg="cache synced" kubernetesResource="core/v1::Namespace" subsys=k8s
level=debug msg="stopped waiting for caches to be synced" kubernetesResource="core/v1::Namespace" subsys=k8s
level=debug msg="resource \"core/v1::Namespace\" cache has synced, stopping timeout watcher" subsys=k8s
level=info msg="No existing link found at /sys/fs/bpf/cilium/socketlb/links/cgroup/cil_sock6_post_bind for program cil_sock6_post_bind" subsys=socketlb
level=debug msg="Program cil_sock6_post_bind attached using bpf_link" subsys=socketlb
level=info msg="No existing link found at /sys/fs/bpf/cilium/socketlb/links/cgroup/cil_sock4_connect for program cil_sock4_connect" subsys=socketlb
level=debug msg="Program cil_sock4_connect attached using bpf_link" subsys=socketlb
level=info msg="No existing link found at /sys/fs/bpf/cilium/socketlb/links/cgroup/cil_sock4_recvmsg for program cil_sock4_recvmsg" subsys=socketlb
level=debug msg="Program cil_sock4_recvmsg attached using bpf_link" subsys=socketlb
level=info msg="No existing link found at /sys/fs/bpf/cilium/socketlb/links/cgroup/cil_sock4_getpeername for program cil_sock4_getpeername" subsys=socketlb
level=debug msg="Program cil_sock4_getpeername attached using bpf_link" subsys=socketlb
level=info msg="No existing link found at /sys/fs/bpf/cilium/socketlb/links/cgroup/cil_sock4_post_bind for program cil_sock4_post_bind" subsys=socketlb
level=debug msg="Program cil_sock4_post_bind attached using bpf_link" subsys=socketlb
level=debug msg="No pinned link '/sys/fs/bpf/cilium/socketlb/links/cgroup/cil_sock4_pre_bind', querying cgroup" subsys=socketlb
level=debug msg="No programs in cgroup /run/cilium/cgroupv2 with attach type CGroupInet4Bind" subsys=socketlb
level=info msg="No existing link found at /sys/fs/bpf/cilium/socketlb/links/cgroup/cil_sock6_connect for program cil_sock6_connect" subsys=socketlb
level=debug msg="Program cil_sock6_connect attached using bpf_link" subsys=socketlb
level=info msg="No existing link found at /sys/fs/bpf/cilium/socketlb/links/cgroup/cil_sock6_recvmsg for program cil_sock6_recvmsg" subsys=socketlb
level=debug msg="Program cil_sock6_recvmsg attached using bpf_link" subsys=socketlb
level=info msg="No existing link found at /sys/fs/bpf/cilium/socketlb/links/cgroup/cil_sock4_sendmsg for program cil_sock4_sendmsg" subsys=socketlb
level=debug msg="Program cil_sock4_sendmsg attached using bpf_link" subsys=socketlb
level=info msg="No existing link found at /sys/fs/bpf/cilium/socketlb/links/cgroup/cil_sock6_sendmsg for program cil_sock6_sendmsg" subsys=socketlb
level=debug msg="Program cil_sock6_sendmsg attached using bpf_link" subsys=socketlb
level=info msg="No existing link found at /sys/fs/bpf/cilium/socketlb/links/cgroup/cil_sock6_getpeername for program cil_sock6_getpeername" subsys=socketlb
level=debug msg="Program cil_sock6_getpeername attached using bpf_link" subsys=socketlb
level=debug msg="No pinned link '/sys/fs/bpf/cilium/socketlb/links/cgroup/cil_sock6_pre_bind', querying cgroup" subsys=socketlb
level=debug msg="No programs in cgroup /run/cilium/cgroupv2 with attach type CGroupInet6Bind" subsys=socketlb
level=debug msg="Finalizing bpffs map migration" subsys=socketlb
level=debug msg="Launching compiler" args="[-emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_alignchecker.c -o -]" subsys=datapath-loader target=clang
level=debug msg="Updating direct route" addedCIDRs="[10.244.0.0/24]" newIP=172.21.0.4 oldIP="<nil>" removedCIDRs="[]" subsys=linux-datapath
level=debug msg="Updating direct route" addedCIDRs="[10.244.3.0/24]" newIP=172.21.0.6 oldIP="<nil>" removedCIDRs="[]" subsys=linux-datapath
level=debug msg="Updating direct route" addedCIDRs="[10.244.4.0/24]" newIP=172.21.0.5 oldIP="<nil>" removedCIDRs="[]" subsys=linux-datapath
level=debug msg="Running 'iptables -t nat -S' command" subsys=iptables
level=debug msg="Unable to insert new next hop" error="invalid argument" interface=eth0 ipAddr="fc00:c111::6" neighbor="{LinkIndex:65 Family:0 State:4 Type:0 Flags:16 FlagsExt:0 IP:fc00:c111::6 HardwareAddr: LLIPAddr:<nil> Vlan:0 VNI:0 MasterIndex:0}" nextHop="fc00:c111::6" subsys=node-neigh-debug
level=debug msg="Unable to insert new next hop" error="invalid argument" interface=eth0 ipAddr="fc00:c111::4" neighbor="{LinkIndex:65 Family:0 State:4 Type:0 Flags:16 FlagsExt:0 IP:fc00:c111::4 HardwareAddr: LLIPAddr:<nil> Vlan:0 VNI:0 MasterIndex:0}" nextHop="fc00:c111::4" subsys=node-neigh-debug
level=debug msg="Unable to insert new next hop" error="invalid argument" interface=eth0 ipAddr="fc00:c111::5" neighbor="{LinkIndex:65 Family:0 State:4 Type:0 Flags:16 FlagsExt:0 IP:fc00:c111::5 HardwareAddr: LLIPAddr:<nil> Vlan:0 VNI:0 MasterIndex:0}" nextHop="fc00:c111::5" subsys=node-neigh-debug
level=debug msg="Running 'ip6tables -t nat -S' command" subsys=iptables
level=debug msg="Running 'iptables -t mangle -S' command" subsys=iptables
level=debug msg="Running 'ip6tables -t mangle -S' command" subsys=iptables
level=debug msg="Running 'iptables -t raw -S' command" subsys=iptables
level=debug msg="Running 'ip6tables -t raw -S' command" subsys=iptables
level=debug msg="Running 'iptables -t filter -S' command" subsys=iptables
level=debug msg="Running 'ip6tables -t filter -S' command" subsys=iptables
level=debug msg="Running 'iptables -t filter -S OLD_CILIUM_INPUT' command" subsys=iptables
level=debug msg="Running 'ip6tables -t filter -S OLD_CILIUM_INPUT' command" subsys=iptables
level=debug msg="Running 'iptables -t filter -S OLD_CILIUM_OUTPUT' command" subsys=iptables
level=debug msg="Running 'ip6tables -t filter -S OLD_CILIUM_OUTPUT' command" subsys=iptables
level=debug msg="Running 'iptables -t raw -S OLD_CILIUM_OUTPUT_raw' command" subsys=iptables
level=debug msg="Running 'ip6tables -t raw -S OLD_CILIUM_OUTPUT_raw' command" subsys=iptables
level=debug msg="Received node update event from custom-resource: types.Node{Name:\"kind-worker2\", Cluster:\"kind-kind\", IPAddresses:[]types.Address{types.Address{Type:\"InternalIP\", IP:net.IP{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xac, 0x15, 0x0, 0x3}}, types.Address{Type:\"InternalIP\", IP:net.IP{0xfc, 0x0, 0xc1, 0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3}}, types.Address{Type:\"CiliumInternalIP\", IP:net.IP{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xa, 0xf4, 0x2, 0xd7}}}, IPv4AllocCIDR:(*cidr.CIDR)(0x4000dbabf0), IPv4SecondaryAllocCIDRs:[]*cidr.CIDR(nil), IPv6AllocCIDR:(*cidr.CIDR)(nil), IPv6SecondaryAllocCIDRs:[]*cidr.CIDR(nil), IPv4HealthIP:net.IP{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xa, 0xf4, 0x2, 0x52}, IPv6HealthIP:net.IP(nil), IPv4IngressIP:net.IP(nil), IPv6IngressIP:net.IP(nil), ClusterID:0x0, Source:\"custom-resource\", EncryptionKey:0x0, Labels:map[string]string{\"beta.kubernetes.io/arch\":\"arm64\", \"beta.kubernetes.io/os\":\"linux\", \"kubernetes.io/arch\":\"arm64\", \"kubernetes.io/hostname\":\"kind-worker2\", \"kubernetes.io/os\":\"linux\"}, Annotations:map[string]string(nil), NodeIdentity:0x0, WireguardPubKey:\"\"}" subsys=nodemanager
level=debug msg="Running 'ipset create cilium_node_set_v4 iphash family inet -exist' command" subsys=iptables
level=debug msg="Running 'iptables -t nat -S OLD_CILIUM_POST_nat' command" subsys=iptables
level=debug msg="Running 'ipset add cilium_node_set_v4 172.21.0.3 -exist' command" subsys=iptables
level=debug msg="Running 'ip6tables -t nat -S OLD_CILIUM_POST_nat' command" subsys=iptables
level=debug msg="Upserting IP into ipcache layer" identity="{remote-node custom-resource [] false false}" ipAddr=172.21.0.3/32 key=0 subsys=ipcache
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{remote-node custom-resource [] false false}" ipAddr="{172.21.0.3 ffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Updating existing controller" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller update time: 27.541µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Running 'ipset create cilium_node_set_v6 iphash family inet6 -exist' command" subsys=iptables
level=debug msg="Resolving identity" identityLabels="reserved:remote-node" subsys=identity-cache
level=debug msg="Resolved reserved identity" identity=remote-node identityLabels="reserved:remote-node" isNew=false subsys=identity-cache
level=debug msg="Controller func execution time: 47.208µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller run succeeded; waiting for next controller update or stop" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Running 'ipset add cilium_node_set_v6 fc00:c111::3 -exist' command" subsys=iptables
level=debug msg="Running 'iptables -t nat -S OLD_CILIUM_OUTPUT_nat' command" subsys=iptables
level=debug msg="Upserting IP into ipcache layer" identity="{remote-node custom-resource [] false false}" ipAddr="fc00:c111::3/128" key=0 subsys=ipcache
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{remote-node custom-resource [] false false}" ipAddr="{fc00:c111::3 ffffffffffffffffffffffffffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Updating existing controller" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller update time: 41.167µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Upserting IP into ipcache layer" identity="{remote-node custom-resource [] false false}" ipAddr=10.244.2.215/32 key=0 subsys=ipcache
level=debug msg="Allocated new node ID for node IP address" ipAddr=172.21.0.3 nodeID=33665 subsys=linux-datapath
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{remote-node custom-resource [] false false}" ipAddr="{10.244.2.215 ffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Running 'iptables -t nat -S OLD_CILIUM_PRE_nat' command" subsys=iptables
level=debug msg="Resolving identity" identityLabels="reserved:remote-node" subsys=identity-cache
level=debug msg="Resolved reserved identity" identity=remote-node identityLabels="reserved:remote-node" isNew=false subsys=identity-cache
level=debug msg="Controller func execution time: 265.625µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller run succeeded; waiting for next controller update or stop" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Updating existing controller" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller update time: 63.417µs" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Upserting IP into ipcache layer" identity="{health custom-resource [] false false}" ipAddr=10.244.2.82 key=0 subsys=ipcache
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{health custom-resource [] false false}" ipAddr="{10.244.2.82 ffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Updating direct route" addedCIDRs="[10.244.2.0/24]" newIP=172.21.0.3 oldIP="<nil>" removedCIDRs="[]" subsys=linux-datapath
level=debug msg="Resolving identity" identityLabels="reserved:remote-node" subsys=identity-cache
level=debug msg="Resolved reserved identity" identity=remote-node identityLabels="reserved:remote-node" isNew=false subsys=identity-cache
level=debug msg="Controller func execution time: 2.079083ms" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Controller run succeeded; waiting for next controller update or stop" name=ipcache-inject-labels subsys=controller uuid=b25c471c-dd27-43c9-ba01-93a0debcf058
level=debug msg="Running 'iptables -t mangle -S OLD_CILIUM_POST_mangle' command" subsys=iptables
level=debug msg="Unable to insert new next hop" error="invalid argument" interface=eth0 ipAddr=172.21.0.3 neighbor="{LinkIndex:65 Family:0 State:4 Type:0 Flags:16 FlagsExt:0 IP:172.21.0.3 HardwareAddr: LLIPAddr:<nil> Vlan:0 VNI:0 MasterIndex:0}" nextHop=172.21.0.3 subsys=node-neigh-debug
level=debug msg="Unable to insert new next hop" error="invalid argument" interface=eth0 ipAddr="fc00:c111::3" neighbor="{LinkIndex:65 Family:0 State:4 Type:0 Flags:16 FlagsExt:0 IP:fc00:c111::3 HardwareAddr: LLIPAddr:<nil> Vlan:0 VNI:0 MasterIndex:0}" nextHop="fc00:c111::3" subsys=node-neigh-debug
level=debug msg="Running 'iptables -t mangle -S OLD_CILIUM_PRE_mangle' command" subsys=iptables
level=debug msg="Running 'ip6tables -t mangle -S OLD_CILIUM_PRE_mangle' command" subsys=iptables
level=debug msg="Running 'iptables -t raw -S OLD_CILIUM_PRE_raw' command" subsys=iptables
level=debug msg="Running 'ip6tables -t raw -S OLD_CILIUM_PRE_raw' command" subsys=iptables
level=debug msg="Running 'iptables -t filter -S OLD_CILIUM_FORWARD' command" subsys=iptables
level=debug msg="Running 'ip6tables -t filter -S OLD_CILIUM_FORWARD' command" subsys=iptables
level=debug msg="Running 'iptables -t filter -S CILIUM_INPUT' command" subsys=iptables
level=debug msg="Running 'ip6tables -t filter -S CILIUM_INPUT' command" subsys=iptables
level=debug msg="Running 'iptables -t filter -S CILIUM_OUTPUT' command" subsys=iptables
level=debug msg="Running 'ip6tables -t filter -S CILIUM_OUTPUT' command" subsys=iptables
level=debug msg="Running 'iptables -t raw -S CILIUM_OUTPUT_raw' command" subsys=iptables
level=debug msg="Running 'ip6tables -t raw -S CILIUM_OUTPUT_raw' command" subsys=iptables
level=debug msg="Running 'iptables -t nat -S CILIUM_POST_nat' command" subsys=iptables
level=debug msg="Running 'ip6tables -t nat -S CILIUM_POST_nat' command" subsys=iptables
level=debug msg="Running 'iptables -t nat -S CILIUM_OUTPUT_nat' command" subsys=iptables
level=debug msg="Running 'iptables -t nat -S CILIUM_PRE_nat' command" subsys=iptables
level=debug msg="Running 'iptables -t mangle -S CILIUM_POST_mangle' command" subsys=iptables
level=debug msg="Running 'iptables -t mangle -S CILIUM_PRE_mangle' command" subsys=iptables
level=debug msg="Running 'ip6tables -t mangle -S CILIUM_PRE_mangle' command" subsys=iptables
level=debug msg="Running 'iptables -t raw -S CILIUM_PRE_raw' command" subsys=iptables
level=debug msg="Running 'ip6tables -t raw -S CILIUM_PRE_raw' command" subsys=iptables
level=debug msg="Running 'iptables -t filter -S CILIUM_FORWARD' command" subsys=iptables
level=debug msg="Running 'ip6tables -t filter -S CILIUM_FORWARD' command" subsys=iptables
level=debug msg="Running 'iptables -t filter -N CILIUM_INPUT' command" subsys=iptables
level=debug msg="Running 'iptables -t filter -N CILIUM_OUTPUT' command" subsys=iptables
level=debug msg="Running 'iptables -t raw -N CILIUM_OUTPUT_raw' command" subsys=iptables
level=debug msg="Running 'iptables -t nat -N CILIUM_POST_nat' command" subsys=iptables
level=debug msg="Running 'iptables -t nat -N CILIUM_OUTPUT_nat' command" subsys=iptables
level=debug msg="Running 'iptables -t nat -N CILIUM_PRE_nat' command" subsys=iptables
level=debug msg="Running 'iptables -t mangle -N CILIUM_POST_mangle' command" subsys=iptables
level=debug msg="Running 'iptables -t mangle -N CILIUM_PRE_mangle' command" subsys=iptables
level=debug msg="Running 'iptables -t raw -N CILIUM_PRE_raw' command" subsys=iptables
level=debug msg="Running 'iptables -t filter -N CILIUM_FORWARD' command" subsys=iptables
level=debug msg="Running 'iptables -t raw -A CILIUM_PRE_raw -m mark --mark 0x00000200/0x00000f00 -m comment --comment cilium: NOTRACK for proxy traffic -j CT --notrack' command" subsys=iptables
level=debug msg="Running 'iptables -t filter -A CILIUM_INPUT -m mark --mark 0x00000200/0x00000f00 -m comment --comment cilium: ACCEPT for proxy traffic -j ACCEPT' command" subsys=iptables
level=debug msg="Running 'iptables -t raw -A CILIUM_OUTPUT_raw -o lxc+ -m mark --mark 0x00000a00/0xfffffeff -m comment --comment cilium: NOTRACK for proxy return traffic -j CT --notrack' command" subsys=iptables
level=debug msg="Running 'iptables -t raw -A CILIUM_OUTPUT_raw -o cilium_host -m mark --mark 0x00000a00/0xfffffeff -m comment --comment cilium: NOTRACK for proxy return traffic -j CT --notrack' command" subsys=iptables
level=debug msg="Running 'iptables -t raw -A CILIUM_OUTPUT_raw -o lxc+ -m mark --mark 0x00000800/0x00000e00 -m comment --comment cilium: NOTRACK for L7 proxy upstream traffic -j CT --notrack' command" subsys=iptables
level=debug msg="Running 'iptables -t raw -A CILIUM_OUTPUT_raw -o cilium_host -m mark --mark 0x00000800/0x00000e00 -m comment --comment cilium: NOTRACK for L7 proxy upstream traffic -j CT --notrack' command" subsys=iptables
level=debug msg="Running 'iptables -t filter -A CILIUM_OUTPUT -m mark --mark 0x00000a00/0xfffffeff -m comment --comment cilium: ACCEPT for proxy return traffic -j ACCEPT' command" subsys=iptables
level=debug msg="Running 'iptables -t filter -A CILIUM_OUTPUT -m mark --mark 0x00000800/0x00000e00 -m comment --comment cilium: ACCEPT for l7 proxy upstream traffic -j ACCEPT' command" subsys=iptables
level=debug msg="Running 'iptables -t mangle -A CILIUM_PRE_mangle -m socket --transparent -m comment --comment cilium: any->pod redirect proxied traffic to host proxy -j MARK --set-mark 0x00000200' command" subsys=iptables
level=debug msg="Running 'iptables -A CILIUM_FORWARD -o cilium_host -m comment --comment cilium: any->cluster on cilium_host forward accept -j ACCEPT' command" subsys=iptables
level=debug msg="Running 'iptables -A CILIUM_FORWARD -i cilium_host -m comment --comment cilium: cluster->any on cilium_host forward accept (nodeport) -j ACCEPT' command" subsys=iptables
level=debug msg="Running 'iptables -A CILIUM_FORWARD -i lxc+ -m comment --comment cilium: cluster->any on lxc+ forward accept -j ACCEPT' command" subsys=iptables
level=debug msg="Running 'iptables -A CILIUM_FORWARD -i cilium_net -m comment --comment cilium: cluster->any on cilium_net forward accept (nodeport) -j ACCEPT' command" subsys=iptables
level=debug msg="Running 'iptables -t filter -A CILIUM_OUTPUT -m mark ! --mark 0x00000e00/0x00000f00 -m mark ! --mark 0x00000d00/0x00000f00 -m mark ! --mark 0x00000a00/0x00000e00 -m mark ! --mark 0x00000800/0x00000e00 -m mark ! --mark 0x00000f00/0x00000f00 -m comment --comment cilium: host->any mark as from host -j MARK --set-xmark 0x00000c00/0x00000f00' command" subsys=iptables
level=debug msg="Running 'ipset create cilium_node_set_v4 iphash family inet -exist' command" subsys=iptables
level=debug msg="Running 'iptables -t nat -A CILIUM_POST_nat -s 10.244.1.0/24 -m set --match-set cilium_node_set_v4 dst -m comment --comment exclude traffic to cluster nodes from masquerade -j ACCEPT' command" subsys=iptables
level=debug msg="Running 'iptables -t nat -A CILIUM_POST_nat ! -d 10.0.0.0/24 -s 10.244.1.0/24 ! -o cilium_+ -m comment --comment cilium masquerade non-cluster -j MASQUERADE' command" subsys=iptables
level=debug msg="Running 'iptables -t nat -A CILIUM_POST_nat -m mark --mark 0x00000a00/0x00000e00 -m comment --comment exclude proxy return traffic from masquerade -j ACCEPT' command" subsys=iptables
level=debug msg="Running 'iptables -t nat -A CILIUM_POST_nat -s 127.0.0.1 -o cilium_host -m comment --comment cilium host->cluster from 127.0.0.1 masquerade -j SNAT --to-source 10.244.1.145' command" subsys=iptables
level=debug msg="Running 'iptables -t nat -A CILIUM_POST_nat -m mark --mark 0x00000f00/0x00000f00 -o cilium_host -m conntrack --ctstate DNAT -m comment --comment hairpin traffic that originated from a local pod -j SNAT --to-source 10.244.1.145' command" subsys=iptables
level=debug msg="Running 'iptables -t filter -I INPUT -m comment --comment cilium-feeder: CILIUM_INPUT -j CILIUM_INPUT' command" subsys=iptables
level=debug msg="Running 'iptables -t filter -I OUTPUT -m comment --comment cilium-feeder: CILIUM_OUTPUT -j CILIUM_OUTPUT' command" subsys=iptables
level=debug msg="Running 'iptables -t raw -I OUTPUT -m comment --comment cilium-feeder: CILIUM_OUTPUT_raw -j CILIUM_OUTPUT_raw' command" subsys=iptables
level=debug msg="Running 'iptables -t nat -I POSTROUTING -m comment --comment cilium-feeder: CILIUM_POST_nat -j CILIUM_POST_nat' command" subsys=iptables
level=debug msg="Running 'iptables -t nat -I OUTPUT -m comment --comment cilium-feeder: CILIUM_OUTPUT_nat -j CILIUM_OUTPUT_nat' command" subsys=iptables
level=debug msg="Running 'iptables -t nat -I PREROUTING -m comment --comment cilium-feeder: CILIUM_PRE_nat -j CILIUM_PRE_nat' command" subsys=iptables
level=debug msg="Running 'iptables -t mangle -I POSTROUTING -m comment --comment cilium-feeder: CILIUM_POST_mangle -j CILIUM_POST_mangle' command" subsys=iptables
level=debug msg="Running 'iptables -t mangle -I PREROUTING -m comment --comment cilium-feeder: CILIUM_PRE_mangle -j CILIUM_PRE_mangle' command" subsys=iptables
level=debug msg="Running 'iptables -t raw -I PREROUTING -m comment --comment cilium-feeder: CILIUM_PRE_raw -j CILIUM_PRE_raw' command" subsys=iptables
level=debug msg="Running 'iptables -t filter -I FORWARD -m comment --comment cilium-feeder: CILIUM_FORWARD -j CILIUM_FORWARD' command" subsys=iptables
level=debug msg="Running 'iptables -t mangle -S' command" subsys=iptables
level=debug msg="Running 'iptables -t nat -S' command" subsys=iptables
level=debug msg="Running 'ip6tables -t nat -S' command" subsys=iptables
level=debug msg="Running 'iptables -t mangle -S' command" subsys=iptables
level=debug msg="Running 'ip6tables -t mangle -S' command" subsys=iptables
level=debug msg="Running 'iptables -t raw -S' command" subsys=iptables
level=debug msg="Running 'ip6tables -t raw -S' command" subsys=iptables
level=debug msg="Running 'iptables -t filter -S' command" subsys=iptables
level=debug msg="Running 'ip6tables -t filter -S' command" subsys=iptables
level=debug msg="Running 'iptables -t filter -S OLD_CILIUM_INPUT' command" subsys=iptables
level=debug msg="Running 'ip6tables -t filter -S OLD_CILIUM_INPUT' command" subsys=iptables
level=debug msg="Running 'iptables -t filter -S OLD_CILIUM_OUTPUT' command" subsys=iptables
level=debug msg="Running 'ip6tables -t filter -S OLD_CILIUM_OUTPUT' command" subsys=iptables
level=debug msg="Running 'iptables -t raw -S OLD_CILIUM_OUTPUT_raw' command" subsys=iptables
level=debug msg="Running 'ip6tables -t raw -S OLD_CILIUM_OUTPUT_raw' command" subsys=iptables
level=debug msg="Running 'iptables -t nat -S OLD_CILIUM_POST_nat' command" subsys=iptables
level=debug msg="Running 'ip6tables -t nat -S OLD_CILIUM_POST_nat' command" subsys=iptables
level=debug msg="Running 'iptables -t nat -S OLD_CILIUM_OUTPUT_nat' command" subsys=iptables
level=debug msg="Running 'iptables -t nat -S OLD_CILIUM_PRE_nat' command" subsys=iptables
level=debug msg="Running 'iptables -t mangle -S OLD_CILIUM_POST_mangle' command" subsys=iptables
level=debug msg="Running 'iptables -t mangle -S OLD_CILIUM_PRE_mangle' command" subsys=iptables
level=debug msg="Running 'ip6tables -t mangle -S OLD_CILIUM_PRE_mangle' command" subsys=iptables
level=debug msg="Running 'iptables -t raw -S OLD_CILIUM_PRE_raw' command" subsys=iptables
level=debug msg="Running 'ip6tables -t raw -S OLD_CILIUM_PRE_raw' command" subsys=iptables
level=debug msg="Running 'iptables -t filter -S OLD_CILIUM_FORWARD' command" subsys=iptables
level=debug msg="Running 'ip6tables -t filter -S OLD_CILIUM_FORWARD' command" subsys=iptables
level=debug msg="Running 'ipset create cilium_node_set_v4 iphash family inet -exist' command" subsys=iptables
level=info msg="Iptables rules installed" subsys=iptables
level=info msg="Adding new proxy port rules for cilium-dns-egress:39151" id=cilium-dns-egress subsys=proxy
level=debug msg="Running 'iptables -t mangle -S' command" subsys=iptables
level=debug msg="Running 'iptables -t mangle -A CILIUM_PRE_mangle -p tcp -m mark --mark 0xef980200 -m comment --comment cilium: TPROXY to host cilium-dns-egress proxy -j TPROXY --tproxy-mark 0x200 --on-ip 0.0.0.0 --on-port 39151' command" subsys=iptables
level=debug msg="Running 'iptables -t mangle -A CILIUM_PRE_mangle -p udp -m mark --mark 0xef980200 -m comment --comment cilium: TPROXY to host cilium-dns-egress proxy -j TPROXY --tproxy-mark 0x200 --on-ip 0.0.0.0 --on-port 39151' command" subsys=iptables
level=info msg="Iptables proxy rules installed" subsys=iptables
level=debug msg="AckProxyPort: acked proxy port 39151 ({true dns false 39151 1 true 39151 false})" id=cilium-dns-egress subsys=proxy
level=info msg="Beginning to read perf buffer" startTime="2023-07-12 21:56:39.767694588 +0000 UTC m=+3.131604960" subsys=monitor-agent
level=debug msg="Group not found" error="group: unknown group cilium" file-path=/var/run/cilium/monitor1_2.sock group=cilium subsys=api
level=info msg="Serving cilium node monitor v1.2 API at unix:///var/run/cilium/monitor1_2.sock" subsys=monitor-agent
level=debug msg="Starting new controller" name=sync-host-ips subsys=controller uuid=1f72031f-0b21-4253-b78e-f47dcef294fe
level=debug msg="Added local ip to endpoint map" ipAddr=10.244.1.145 subsys=daemon
level=debug msg="New endpoint IP started shadowing existing CIDR to identity mapping" identity="{host local [] false false}" ipAddr=10.244.1.145 key=0 subsys=ipcache
level=debug msg="Upserting IP into ipcache layer" identity="{host local [] false false}" ipAddr=10.244.1.145 key=0 subsys=ipcache
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{host local [] false false}" ipAddr="{10.244.1.145 ffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Added local ip to endpoint map" ipAddr=172.21.0.2 subsys=daemon
level=debug msg="Upserting IP into ipcache layer" identity="{host local [] false false}" ipAddr=172.21.0.2 key=0 subsys=ipcache
level=debug msg="Upserting IP into ipcache layer" identity="{world local [] false false}" ipAddr=0.0.0.0/0 key=0 subsys=ipcache
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{world local [] false false}" ipAddr="{0.0.0.0 00000000}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Controller func execution time: 1.475792ms" name=sync-host-ips subsys=controller uuid=1f72031f-0b21-4253-b78e-f47dcef294fe
level=info msg="Start hook executed" duration=2.148870501s function="cmd.newDaemonPromise.func1 (daemon_main.go:1629)" subsys=hive
level=debug msg="Executing start hook" function="utime.initUtimeSync.func1 (cell.go:34)" subsys=hive
level=debug msg="Starting new controller" name=sync-utime subsys=controller uuid=fc6a203e-c969-4568-952b-816e5766db70
level=info msg="Start hook executed" duration="25µs" function="utime.initUtimeSync.func1 (cell.go:34)" subsys=hive
level=info msg="Starting IP identity watcher" subsys=ipcache
level=debug msg="Controller func execution time: 96.625µs" name=sync-utime subsys=controller uuid=fc6a203e-c969-4568-952b-816e5766db70
level=info msg="Initializing daemon" subsys=daemon
level=info msg="Validating configured node address ranges" subsys=daemon
level=info msg="Starting connection tracking garbage collector" subsys=daemon
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=info msg="Initial scan of connection tracking completed" subsys=ct-gc
level=info msg="Datapath signal listener running" subsys=signal
level=info msg="Regenerating restored endpoints" numRestored=0 subsys=daemon
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Couldn't open CT map for upgrade" error="Unable to get object /sys/fs/bpf/tc/globals/cilium_ct6_global: no such file or directory" file-path=/sys/fs/bpf/tc/globals/cilium_ct6_global subsys=map-ct
level=debug msg="Couldn't open CT map for upgrade" error="Unable to get object /sys/fs/bpf/tc/globals/cilium_ct_any6_global: no such file or directory" file-path=/sys/fs/bpf/tc/globals/cilium_ct_any6_global subsys=map-ct
level=info msg="Creating host endpoint" subsys=daemon
level=info msg="Finished regenerating restored endpoints" regenerated=0 subsys=daemon total=0
level=debug msg="Starting new controller" name=sync-lb-maps-with-k8s-services subsys=controller uuid=a0eff941-44fe-4246-8b6a-d1fa9af1ec1d
level=debug msg="Endpoint creation" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=0 endpointState=waiting-for-identity ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="Starting new controller" name=endpoint-317-regeneration-recovery subsys=controller uuid=e7863fbe-c1cf-4ee3-ba58-7391bc06fe4a
level=debug msg="creating new EventQueue" name=endpoint-317 numBufferedEvents=25 subsys=eventqueue
level=info msg="New endpoint" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=317 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=info msg="Deleted orphan backends" orphanBackends=0 subsys=service
level=debug msg="Controller func execution time: 593.75µs" name=sync-lb-maps-with-k8s-services subsys=controller uuid=a0eff941-44fe-4246-8b6a-d1fa9af1ec1d
level=debug msg="Controller run succeeded; waiting for next controller update or stop" name=sync-lb-maps-with-k8s-services subsys=controller uuid=a0eff941-44fe-4246-8b6a-d1fa9af1ec1d
level=debug msg="Starting new controller" name="sync-to-k8s-ciliumendpoint (317)" subsys=controller uuid=bb1e5172-6dc8-48cd-aba8-7e6f05e59668
level=debug msg="Refreshing labels of endpoint" containerID= endpointID=317 identityLabels="reserved:host" infoLabels="reserved:host" subsys=endpoint
level=debug msg="Skipping CiliumEndpoint update because it has no k8s pod name" containerID= controller="sync-to-k8s-ciliumendpoint (317)" datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=317 ipv4= ipv6= k8sPodName=/ subsys=endpointsynchronizer
level=debug msg="Controller func execution time: 80.458µs" name="sync-to-k8s-ciliumendpoint (317)" subsys=controller uuid=bb1e5172-6dc8-48cd-aba8-7e6f05e59668
level=debug msg="Assigning information label" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=317 ipv4= ipv6= k8sPodName=/ obj="{Key:host Value: Source:reserved}" subsys=endpoint
level=debug msg="Assigning security relevant label" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=317 ipv4= ipv6= k8sPodName=/ obj="{Key:host Value: Source:reserved}" subsys=endpoint
level=info msg="Resolving identity labels (blocking)" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=317 identityLabels="reserved:host" ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Resolving identity for labels" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=317 identityLabels="reserved:host" ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Resolving identity" identityLabels="reserved:host" subsys=identity-cache
level=debug msg="Resolved reserved identity" identity=host identityLabels="reserved:host" isNew=false subsys=identity-cache
level=debug msg="Assigned new identity to endpoint" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=317 identity=1 identityLabels="reserved:host" ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="removing old and adding new identity" new=1 old="<nil>" subsys=identitymanager
level=debug msg="Set identity for this endpoint" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=317 endpointState=ready ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=info msg="Identity of endpoint changed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=317 identity=1 identityLabels="reserved:host" ipv4= ipv6= k8sPodName=/ oldIdentity="no identity" subsys=endpoint
level=debug msg="Triggering endpoint regeneration due to updated security labels" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=317 endpointState=waiting-to-regenerate identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="Skipping CiliumEndpoint update because it has no k8s pod name" containerID= controller="sync-to-k8s-ciliumendpoint (317)" datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpointsynchronizer
level=debug msg="Controller func execution time: 55.958µs" name="sync-to-k8s-ciliumendpoint (317)" subsys=controller uuid=bb1e5172-6dc8-48cd-aba8-7e6f05e59668
level=debug msg="Starting new controller" name=resolve-identity-317 subsys=controller uuid=ea1d2dad-cf5f-4d2d-a842-c3d86893b227
level=info msg="Launching Cilium health daemon" subsys=daemon
level=debug msg="Endpoint labels unchanged, skipping resolution of identity" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=317 identity=1 identityLabels="reserved:host" ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Controller func execution time: 687.792µs" name=resolve-identity-317 subsys=controller uuid=ea1d2dad-cf5f-4d2d-a842-c3d86893b227
level=debug msg="Dequeued endpoint from build queue" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Regenerating endpoint" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ reason="updated security labels" startTime="2023-07-12 21:56:39.778754671 +0000 UTC m=+3.142665044" subsys=endpoint
level=debug msg="Regenerating endpoint: updated security labels" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=317 endpointState=regenerating identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 directory=317_next endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_policy_00317 subsys=bpf
level=debug msg="Starting policy recalculation..." containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Forced policy recalculation" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Completed endpoint policy recalculation" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 forcedRegeneration=true identity=1 ipv4= ipv6= k8sPodName=/ policyCalculation="&{{{{{0 0} 0 0 {{} 0} {{} 0}}}} {0 0 <nil>} 14667 0}" subsys=endpoint waitingForIdentityCache="&{{{{{0 0} 0 0 {{} 0} {{} 0}}}} {0 0 <nil>} 0 0}" waitingForPolicyRepository="&{{{{{0 0} 0 0 {{} 0} {{} 0}}}} {0 0 <nil>} 792 0}"
level=debug msg="Endpoint has no IP addresses" endpointID=317 subsys=envoy-manager
level=debug msg="BPF header file hashed (was: \"\")" bpfHeaderfileHash=0f5fa9a0ac774df439d9f3dc0bdbff52d824f5c229dffe9c8ab4b3a39b7c2977 containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="writing header file" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/ep_config.h identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="writing header file with DNSRules" DNSRules="map[]" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/ep_config.h identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=info msg="Launching Cilium health endpoint" subsys=daemon
level=debug msg="Starting new controller" name=cilium-health-ep subsys=controller uuid=c4a33897-a5e0-43fd-b28b-58af77a122a5
level=info msg="Serving prometheus metrics on :9962" subsys=daemon
level=debug msg="Cannot establish connection to local cilium instance" error="Get \"http://%2Fvar%2Frun%2Fcilium%2Fcilium.sock/v1/healthz\": dial unix /var/run/cilium/cilium.sock: connect: no such file or directory" subsys=cilium-health-launcher
level=debug msg="Killing old health endpoint process" pidfile=/var/run/cilium/state/health-endpoint.pid subsys=cilium-health-launcher
level=debug msg="Didn't find existing cilium-health endpoint to delete" subsys=daemon
level=info msg="Started healthz status API server" address="127.0.0.1:9879" subsys=daemon
level=info msg="Processing queued endpoint deletion requests from /var/run/cilium/deleteQueue" subsys=daemon
level=info msg="processing 0 queued deletion requests" subsys=daemon
level=info msg="Initializing Cilium API" subsys=daemon
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Didn't find existing device" error="Link not found" subsys=cilium-health-launcher veth=cilium_health
level=debug msg="Didn't find existing device" error="Link not found" subsys=cilium-health-launcher veth=lxc_health
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Preparing to compile BPF" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ regeneration-level=rewrite+load subsys=endpoint
level=debug msg="Load 1-min: 3.15 5-min: 1.93 15min: 1.84" endpointID=317 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2318 (58.96%) Free: 67 Buffers: 37 Cached: 1509" endpointID=317 subsys=endpoint
level=debug msg="Unable to remove cilium-health namespace" error="Unable to delete named netns cilium-health: Cannot remove namespace file \"/var/run/netns/cilium-health\": No such file or directory\n exit status 1" subsys=cilium-health-launcher
level=debug msg="Swap: Total: 1023 Used: 1009 (98.56%) Free: 14" endpointID=317 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 8.13% MEM: 2.38% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 93 VMS: 784 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="Created veth pair" subsys=endpoint-connector vethPair="[cilium lxc_health]"
level=debug msg="Spawning health endpoint with command \"ip\" [\"netns\" \"exec\" \"cilium-health\" \"cilium-health-responder\" \"--listen\" \"4240\" \"--pidfile\" \"/var/run/cilium/state/health-endpoint.pid\"]" subsys=cilium-health-launcher
level=debug msg="Endpoint creation" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=0 endpointState=waiting-for-identity ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="Starting new controller" name=neighbor-table-refresh subsys=controller uuid=5f42d2e2-48d7-4982-91cd-822a315d5338
level=info msg="Daemon initialization completed" bootstrapTime=2.976210085s subsys=daemon
level=debug msg="Controller func execution time: 28.083µs" name=neighbor-table-refresh subsys=controller uuid=5f42d2e2-48d7-4982-91cd-822a315d5338
level=debug msg="Starting new controller" name=link-cache subsys=controller uuid=943db86b-b8d5-4ac1-9d64-5a68b09b3280
level=debug msg="Controller func execution time: 125.917µs" name=link-cache subsys=controller uuid=943db86b-b8d5-4ac1-9d64-5a68b09b3280
level=info msg="Configuring Hubble server" eventQueueSize=5120 maxFlows=4095 subsys=hubble
level=debug msg="Group not found" error="group: unknown group cilium" file-path=/var/run/cilium/hubble.sock group=cilium subsys=api
level=info msg="Starting local Hubble server" address="unix:///var/run/cilium/hubble.sock" subsys=hubble
level=debug msg="Group not found" error="group: unknown group cilium" file-path=/var/run/cilium/cilium.sock group=cilium subsys=api
level=info msg="Serving cilium API at unix:///var/run/cilium/cilium.sock" subsys=daemon
level=debug msg="TLS configuration ready" config=tls-server subsys=hubble
level=info msg="Starting Hubble server" address=":4244" subsys=hubble
level=debug msg="Compiling datapath" clang="clang version 10.0.0 (https://github.com/llvm/llvm-project.git f5ae66a41b809db97c4fc34b29bb76be3a86fbe9)\nTarget: x86_64-unknown-linux-gnu\nThread model: posix\nInstalledDir: /usr/local/bin\n" debug=true llc="LLVM (http://llvm.org/):\n  LLVM version 10.0.0\n  Optimized build.\n  Default target: x86_64-unknown-linux-gnu\n  Host CPU: (unknown)\n\n  Registered Targets:\n    bpf   - BPF (host endian)\n    bpfeb - BPF (big endian)\n    bpfel - BPF (little endian)\n" subsys=datapath-loader
level=debug msg="Launching compiler" args="[-emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_host.c -o -]" subsys=datapath-loader target=clang
level=debug msg="Regenerating all endpoints" subsys=policy
level=info msg="regenerating all endpoints" reason="one or more identities created or deleted" subsys=endpoint-manager
level=debug msg="Triggering endpoint regeneration due to one or more identities created or deleted" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=waiting-to-regenerate identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="Skip pod event using host networking" k8sNamespace=kube-system k8sPodName=cilium-58hm6 new-hostIP=172.21.0.2 new-podIP=172.21.0.2 new-podIPs="[{172.21.0.2} {fc00:c111::2}]" old-hostIP=172.21.0.2 old-podIP=172.21.0.2 old-podIPs="[{172.21.0.2} {fc00:c111::2}]" subsys=k8s-watcher
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Sending request for /cluster/nodes ..." subsys=health-server
level=debug msg="Got cilium /cluster/nodes" subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.3.178 nodeName=kind-kind/kind-worker3 primary=false protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-worker3 primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.3.208 nodeName=kind-kind/kind-worker3 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.6 nodeName=kind-kind/kind-worker3 primary=true protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::6" nodeName=kind-kind/kind-worker3 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.4 nodeName=kind-kind/kind-control-plane primary=true protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::4" nodeName=kind-kind/kind-control-plane primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.0.11 nodeName=kind-kind/kind-control-plane primary=false protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-control-plane primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.0.181 nodeName=kind-kind/kind-control-plane primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.4 nodeName=kind-kind/kind-control-plane primary=true protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::4" nodeName=kind-kind/kind-control-plane primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.0.11 nodeName=kind-kind/kind-control-plane primary=false protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-control-plane primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.0.181 nodeName=kind-kind/kind-control-plane primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.4 nodeName=kind-kind/kind-control-plane primary=true protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::4" nodeName=kind-kind/kind-control-plane primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.0.11 nodeName=kind-kind/kind-control-plane primary=false protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-control-plane primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.0.181 nodeName=kind-kind/kind-control-plane primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.3.178 nodeName=kind-kind/kind-worker3 primary=false protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-worker3 primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.3.208 nodeName=kind-kind/kind-worker3 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.6 nodeName=kind-kind/kind-worker3 primary=true protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::6" nodeName=kind-kind/kind-worker3 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.6 nodeName=kind-kind/kind-worker3 primary=true protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::6" nodeName=kind-kind/kind-worker3 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.3.178 nodeName=kind-kind/kind-worker3 primary=false protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-worker3 primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.3.208 nodeName=kind-kind/kind-worker3 primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.1.145 nodeName=kind-kind/kind-worker4 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.2 nodeName=kind-kind/kind-worker4 primary=true protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::2" nodeName=kind-kind/kind-worker4 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.1.174 nodeName=kind-kind/kind-worker4 primary=false protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-worker4 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.4.9 nodeName=kind-kind/kind-worker primary=false protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-worker primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.4.68 nodeName=kind-kind/kind-worker primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.5 nodeName=kind-kind/kind-worker primary=true protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::5" nodeName=kind-kind/kind-worker primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.0.11 nodeName=kind-kind/kind-control-plane primary=false protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-control-plane primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.0.181 nodeName=kind-kind/kind-control-plane primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.4 nodeName=kind-kind/kind-control-plane primary=true protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::4" nodeName=kind-kind/kind-control-plane primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.1.174 nodeName=kind-kind/kind-worker4 primary=false protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-worker4 primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.1.145 nodeName=kind-kind/kind-worker4 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.2 nodeName=kind-kind/kind-worker4 primary=true protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::2" nodeName=kind-kind/kind-worker4 primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-worker3 primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.3.208 nodeName=kind-kind/kind-worker3 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.6 nodeName=kind-kind/kind-worker3 primary=true protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::6" nodeName=kind-kind/kind-worker3 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.3.178 nodeName=kind-kind/kind-worker3 primary=false protocol=icmp subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.5 nodeName=kind-kind/kind-worker primary=true protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::5" nodeName=kind-kind/kind-worker primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.4.9 nodeName=kind-kind/kind-worker primary=false protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-worker primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.4.68 nodeName=kind-kind/kind-worker primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.4.9 nodeName=kind-kind/kind-worker primary=false protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-worker primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.4.68 nodeName=kind-kind/kind-worker primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.5 nodeName=kind-kind/kind-worker primary=true protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::5" nodeName=kind-kind/kind-worker primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::3" nodeName=kind-kind/kind-worker2 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.2.82 nodeName=kind-kind/kind-worker2 primary=false protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-worker2 primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.2.215 nodeName=kind-kind/kind-worker2 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.3 nodeName=kind-kind/kind-worker2 primary=true protocol=icmp subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.3 nodeName=kind-kind/kind-worker2 primary=true protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::3" nodeName=kind-kind/kind-worker2 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.2.82 nodeName=kind-kind/kind-worker2 primary=false protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-worker2 primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.2.215 nodeName=kind-kind/kind-worker2 primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-worker4 primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.1.145 nodeName=kind-kind/kind-worker4 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.2 nodeName=kind-kind/kind-worker4 primary=true protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::2" nodeName=kind-kind/kind-worker4 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.1.174 nodeName=kind-kind/kind-worker4 primary=false protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.1.145 nodeName=kind-kind/kind-worker4 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.2 nodeName=kind-kind/kind-worker4 primary=true protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::2" nodeName=kind-kind/kind-worker4 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.1.174 nodeName=kind-kind/kind-worker4 primary=false protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-worker4 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.5 nodeName=kind-kind/kind-worker primary=true protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::5" nodeName=kind-kind/kind-worker primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.4.9 nodeName=kind-kind/kind-worker primary=false protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-worker primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.4.68 nodeName=kind-kind/kind-worker primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.3 nodeName=kind-kind/kind-worker2 primary=true protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::3" nodeName=kind-kind/kind-worker2 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.2.82 nodeName=kind-kind/kind-worker2 primary=false protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-worker2 primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.2.215 nodeName=kind-kind/kind-worker2 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.2.82 nodeName=kind-kind/kind-worker2 primary=false protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-worker2 primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.2.215 nodeName=kind-kind/kind-worker2 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.3 nodeName=kind-kind/kind-worker2 primary=true protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::3" nodeName=kind-kind/kind-worker2 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.2 nodeName=kind-kind/kind-worker4 primary=true protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::2" nodeName=kind-kind/kind-worker4 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.1.174 nodeName=kind-kind/kind-worker4 primary=false protocol=icmp subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-worker4 primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.1.145 nodeName=kind-kind/kind-worker4 primary=false subsys=health-server
level=debug msg="Load 1-min: 3.15 5-min: 1.93 15min: 1.84" endpointID=317 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2383 (60.59%) Free: 70 Buffers: 33 Cached: 1445" endpointID=317 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1018 (99.42%) Free: 5" endpointID=317 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 7.24% MEM: 2.23% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 87 VMS: 784 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME clang STATUS [running] PID 278 CPU: 30.73% MEM: 1.47% CMDLINE: clang -emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_host.c -o - MEM-EXT: RSS: 57 VMS: 92 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="Probe successful" ipAddr=172.21.0.5 nodeName=kind-kind/kind-worker rtt=1.458042ms subsys=health-server
level=debug msg="Probe successful" ipAddr=172.21.0.6 nodeName=kind-kind/kind-worker3 rtt=1.507291ms subsys=health-server
level=debug msg="Probe successful" ipAddr=172.21.0.3 nodeName=kind-kind/kind-worker2 rtt=1.5205ms subsys=health-server
level=debug msg="Probe successful" ipAddr=172.21.0.2 nodeName=kind-kind/kind-worker4 rtt=1.542125ms subsys=health-server
level=debug msg="Probe successful" ipAddr=172.21.0.4 nodeName=kind-kind/kind-control-plane rtt=1.562417ms subsys=health-server
level=debug msg="cilium-health agent running" pidfile=/var/run/cilium/state/health-endpoint.pid subsys=cilium-health-launcher
level=debug msg="Adding route" command="ip route add 10.244.1.145/32 dev cilium" netns=cilium-health subsys=cilium-health-launcher
level=debug msg="Adding route" command="ip route add 0.0.0.0/0 via 10.244.1.145 mtu 1500 dev cilium" netns=cilium-health subsys=cilium-health-launcher
level=debug msg="Running \"ip [netns exec cilium-health bash -c ip route add 10.244.1.145/32 dev cilium && ip route add 0.0.0.0/0 via 10.244.1.145 mtu 1500 dev cilium]\"" subsys=cilium-health-launcher
level=debug msg="Starting new controller" name=endpoint-767-regeneration-recovery subsys=controller uuid=6cb9c30c-f567-4e71-8177-fde97a90f07e
level=debug msg="creating new EventQueue" name=endpoint-767 numBufferedEvents=25 subsys=eventqueue
level=info msg="New endpoint" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=767 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Starting new controller" name="sync-to-k8s-ciliumendpoint (767)" subsys=controller uuid=5039eeaf-3bc8-4a34-86d2-ee0a245eba33
level=debug msg="Refreshing labels of endpoint" containerID= endpointID=767 identityLabels="reserved:health" infoLabels= subsys=endpoint
level=debug msg="Assigning security relevant label" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=767 ipv4=10.244.1.174 ipv6= k8sPodName=/ obj="{Key:health Value: Source:reserved}" subsys=endpoint
level=info msg="Resolving identity labels (blocking)" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=767 identityLabels="reserved:health" ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Resolving identity for labels" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=767 identityLabels="reserved:health" ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Resolving identity" identityLabels="reserved:health" subsys=identity-cache
level=debug msg="Resolved reserved identity" identity=health identityLabels="reserved:health" isNew=false subsys=identity-cache
level=debug msg="Assigned new identity to endpoint" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=767 identity=4 identityLabels="reserved:health" ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="removing old and adding new identity" new=4 old="<nil>" subsys=identitymanager
level=debug msg="Set identity for this endpoint" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=767 endpointState=ready ipv4=10.244.1.174 ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=info msg="Identity of endpoint changed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=767 identity=4 identityLabels="reserved:health" ipv4=10.244.1.174 ipv6= k8sPodName=/ oldIdentity="no identity" subsys=endpoint
level=debug msg="Triggering endpoint regeneration due to updated security labels" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=767 endpointState=waiting-to-regenerate identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="Starting new controller" name=resolve-identity-767 subsys=controller uuid=dcdfa95d-814c-4670-89b8-1bbd68303728
level=debug msg="Controller func execution time: 1.074807417s" name=cilium-health-ep subsys=controller uuid=c4a33897-a5e0-43fd-b28b-58af77a122a5
level=debug msg="Endpoint labels unchanged, skipping resolution of identity" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=767 identity=4 identityLabels="reserved:health" ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Controller func execution time: 18.333µs" name=resolve-identity-767 subsys=controller uuid=dcdfa95d-814c-4670-89b8-1bbd68303728
level=debug msg="Dequeued endpoint from build queue" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Regenerating endpoint" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ reason="updated security labels" startTime="2023-07-12 21:56:40.86039613 +0000 UTC m=+4.224306503" subsys=endpoint
level=debug msg="Regenerating endpoint: updated security labels" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=767 endpointState=regenerating identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 directory=767_next endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_policy_00767 subsys=bpf
level=debug msg="Starting policy recalculation..." containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Forced policy recalculation" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Completed endpoint policy recalculation" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 forcedRegeneration=true identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ policyCalculation="&{{{{{0 0} 0 0 {{} 0} {{} 0}}}} {0 0 <nil>} 14416 0}" subsys=endpoint waitingForIdentityCache="&{{{{{0 0} 0 0 {{} 0} {{} 0}}}} {0 0 <nil>} 0 0}" waitingForPolicyRepository="&{{{{{0 0} 0 0 {{} 0} {{} 0}}}} {0 0 <nil>} 208 0}"
level=debug msg="preparing new cache transaction: upserting 1 entries, deleting 0 entries" subsys=xds xdsCachedVersion=2 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="inserting resource into cache" subsys=xds xdsCachedVersion=2 xdsResourceName=767 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="committing cache transaction and notifying of new version" subsys=xds xdsCachedVersion=2 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="BPF header file hashed (was: \"\")" bpfHeaderfileHash=2a437131a8ba594ff149f7ab853c9324d465690aa6484f4397955fe717dd97f4 containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="writing header file" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 file-path=767_next/ep_config.h identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="writing header file with DNSRules" DNSRules="map[]" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 file-path=767_next/ep_config.h identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Preparing to compile BPF" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ regeneration-level=rewrite+load subsys=endpoint
level=debug msg="Skipping CiliumEndpoint update because it has no k8s pod name" containerID= controller="sync-to-k8s-ciliumendpoint (767)" datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpointsynchronizer
level=debug msg="Controller func execution time: 28.583µs" name="sync-to-k8s-ciliumendpoint (767)" subsys=controller uuid=5039eeaf-3bc8-4a34-86d2-ee0a245eba33
level=debug msg="Skipping CiliumEndpoint update because it has no k8s pod name" containerID= controller="sync-to-k8s-ciliumendpoint (767)" datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpointsynchronizer
level=debug msg="Controller func execution time: 8.083µs" name="sync-to-k8s-ciliumendpoint (767)" subsys=controller uuid=5039eeaf-3bc8-4a34-86d2-ee0a245eba33
level=debug msg="Load 1-min: 3.15 5-min: 1.93 15min: 1.84" endpointID=767 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2392 (60.83%) Free: 77 Buffers: 32 Cached: 1430" endpointID=767 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1020 (99.64%) Free: 3" endpointID=767 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 7.16% MEM: 2.17% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 85 VMS: 784 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME clang STATUS [running] PID 278 CPU: 31.44% MEM: 1.47% CMDLINE: clang -emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_host.c -o - MEM-EXT: RSS: 57 VMS: 92 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="Compiling datapath" clang="clang version 10.0.0 (https://github.com/llvm/llvm-project.git f5ae66a41b809db97c4fc34b29bb76be3a86fbe9)\nTarget: x86_64-unknown-linux-gnu\nThread model: posix\nInstalledDir: /usr/local/bin\n" debug=true llc="LLVM (http://llvm.org/):\n  LLVM version 10.0.0\n  Optimized build.\n  Default target: x86_64-unknown-linux-gnu\n  Host CPU: (unknown)\n\n  Registered Targets:\n    bpf   - BPF (host endian)\n    bpfeb - BPF (big endian)\n    bpfel - BPF (little endian)\n" subsys=datapath-loader
level=debug msg="Launching compiler" args="[-emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69 -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_lxc.c -o -]" subsys=datapath-loader target=clang
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Load 1-min: 4.58 5-min: 2.25 15min: 1.94" endpointID=317 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2469 (62.77%) Free: 127 Buffers: 22 Cached: 1314" endpointID=317 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1023 (100.00%) Free: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 6.18% MEM: 2.01% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 79 VMS: 784 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME clang STATUS [zombie] PID 278 CPU: 29.20% MEM: 0.00% CMDLINE:  MEM-EXT: RSS: 0 VMS: 0 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME llc STATUS [running] PID 279 CPU: 6.58% MEM: 1.13% CMDLINE: llc -march=bpf -mcpu=v3 -filetype=obj -o /var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e/bpf_host.dbg.o MEM-EXT: RSS: 44 VMS: 54 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME clang STATUS [running] PID 286 CPU: 12.49% MEM: 1.31% CMDLINE: clang -emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69 -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_lxc.c -o - MEM-EXT: RSS: 51 VMS: 86 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="Skipping probe for address" ipAddr=10.244.3.208 nodeName=kind-kind/kind-worker3 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.6 nodeName=kind-kind/kind-worker3 primary=true protocol=http subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::6" nodeName=kind-kind/kind-worker3 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.3.178 nodeName=kind-kind/kind-worker3 primary=false protocol=http subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-worker3 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.4 nodeName=kind-kind/kind-control-plane primary=true protocol=http subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::4" nodeName=kind-kind/kind-control-plane primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.0.11 nodeName=kind-kind/kind-control-plane primary=false protocol=http subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-control-plane primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.0.181 nodeName=kind-kind/kind-control-plane primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.5 nodeName=kind-kind/kind-worker primary=true protocol=http subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::5" nodeName=kind-kind/kind-worker primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.4.9 nodeName=kind-kind/kind-worker primary=false protocol=http subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-worker primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.4.68 nodeName=kind-kind/kind-worker primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.3 nodeName=kind-kind/kind-worker2 primary=true protocol=http subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::3" nodeName=kind-kind/kind-worker2 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.2.82 nodeName=kind-kind/kind-worker2 primary=false protocol=http subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-worker2 primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.2.215 nodeName=kind-kind/kind-worker2 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=172.21.0.2 nodeName=kind-kind/kind-worker4 primary=true protocol=http subsys=health-server
level=debug msg="Skipping probe for address" ipAddr="fc00:c111::2" nodeName=kind-kind/kind-worker4 primary=false subsys=health-server
level=debug msg="Probing for connectivity to node" ipAddr=10.244.1.174 nodeName=kind-kind/kind-worker4 primary=false protocol=http subsys=health-server
level=debug msg="Skipping probe for address" ipAddr= nodeName=kind-kind/kind-worker4 primary=false subsys=health-server
level=debug msg="Skipping probe for address" ipAddr=10.244.1.145 nodeName=kind-kind/kind-worker4 primary=false subsys=health-server
level=debug msg="Greeting host" host="http://172.21.0.3:4240" ipAddr=172.21.0.3 nodeName=kind-kind/kind-worker2 path="Via L3" subsys=health-server
level=debug msg="Greeting failed" error="Get \"http://172.21.0.3:4240/hello\": dial tcp 172.21.0.3:4240: connect: connection refused" host="http://172.21.0.3:4240" ipAddr=172.21.0.3 nodeName=kind-kind/kind-worker2 path="Via L3" subsys=health-server
level=debug msg="Failed to probe: Get \"http://172.21.0.3:4240/hello\": dial tcp 172.21.0.3:4240: connect: connection refused" ipAddr=172.21.0.3 nodeName=kind-kind/kind-worker2 port=4240 subsys=health-server
level=debug msg="Greeting host" host="http://10.244.2.82:4240" ipAddr=10.244.2.82 nodeName=kind-kind/kind-worker2 path="Via L3" subsys=health-server
level=debug msg="Load 1-min: 4.58 5-min: 2.25 15min: 1.94" endpointID=767 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2476 (62.97%) Free: 118 Buffers: 22 Cached: 1315" endpointID=767 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1023 (100.00%) Free: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 6.12% MEM: 2.01% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 79 VMS: 784 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME clang STATUS [zombie] PID 278 CPU: 28.68% MEM: 0.00% CMDLINE:  MEM-EXT: RSS: 0 VMS: 0 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME llc STATUS [running] PID 279 CPU: 7.23% MEM: 1.14% CMDLINE: llc -march=bpf -mcpu=v3 -filetype=obj -o /var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e/bpf_host.dbg.o MEM-EXT: RSS: 44 VMS: 55 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME clang STATUS [running] PID 286 CPU: 13.59% MEM: 1.32% CMDLINE: clang -emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69 -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_lxc.c -o - MEM-EXT: RSS: 51 VMS: 86 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="Launching compiler" args="[-emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_host.c -o -]" subsys=datapath-loader target=clang
level=debug msg="Controller func execution time: 32.584µs" name=metricsmap-bpf-prom-sync subsys=controller uuid=38a9c0b7-176f-4a35-865f-69a2af221242
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Load 1-min: 4.58 5-min: 2.25 15min: 1.94" endpointID=317 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2482 (63.12%) Free: 105 Buffers: 22 Cached: 1322" endpointID=317 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1023 (99.97%) Free: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 5.64% MEM: 2.02% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 79 VMS: 784 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME clang STATUS [zombie] PID 286 CPU: 19.19% MEM: 0.00% CMDLINE:  MEM-EXT: RSS: 0 VMS: 0 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME llc STATUS [running] PID 287 CPU: 3.15% MEM: 0.77% CMDLINE: llc -march=bpf -mcpu=v3 -filetype=obj -o /var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69/bpf_lxc.dbg.o MEM-EXT: RSS: 30 VMS: 39 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME clang STATUS [running] PID 298 CPU: 7.21% MEM: 1.20% CMDLINE: clang -emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_host.c -o - MEM-EXT: RSS: 47 VMS: 83 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="Load 1-min: 4.58 5-min: 2.25 15min: 1.94" endpointID=767 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2486 (63.22%) Free: 99 Buffers: 22 Cached: 1324" endpointID=767 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1023 (99.95%) Free: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 5.59% MEM: 2.02% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 79 VMS: 784 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME clang STATUS [zombie] PID 286 CPU: 18.84% MEM: 0.00% CMDLINE:  MEM-EXT: RSS: 0 VMS: 0 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME llc STATUS [running] PID 287 CPU: 3.87% MEM: 0.85% CMDLINE: llc -march=bpf -mcpu=v3 -filetype=obj -o /var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69/bpf_lxc.dbg.o MEM-EXT: RSS: 33 VMS: 43 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME clang STATUS [running] PID 298 CPU: 8.54% MEM: 1.23% CMDLINE: clang -emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_host.c -o - MEM-EXT: RSS: 48 VMS: 83 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="Launching compiler" args="[-emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69 -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_lxc.c -o -]" subsys=datapath-loader target=clang
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Load 1-min: 4.58 5-min: 2.25 15min: 1.94" endpointID=317 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2499 (63.56%) Free: 71 Buffers: 22 Cached: 1339" endpointID=317 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1021 (99.74%) Free: 2" endpointID=317 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 5.00% MEM: 2.02% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 79 VMS: 784 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME clang STATUS [running] PID 298 CPU: 21.01% MEM: 1.46% CMDLINE: clang -emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_host.c -o - MEM-EXT: RSS: 57 VMS: 92 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME clang STATUS [running] PID 300 CPU: 12.72% MEM: 1.26% CMDLINE: clang -emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69 -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_lxc.c -o - MEM-EXT: RSS: 49 VMS: 85 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="Load 1-min: 4.58 5-min: 2.25 15min: 1.94" endpointID=767 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2499 (63.55%) Free: 81 Buffers: 21 Cached: 1330" endpointID=767 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1022 (99.81%) Free: 1" endpointID=767 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 4.96% MEM: 2.03% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 79 VMS: 784 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME clang STATUS [running] PID 298 CPU: 21.19% MEM: 1.46% CMDLINE: clang -emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_host.c -o - MEM-EXT: RSS: 57 VMS: 92 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME clang STATUS [running] PID 300 CPU: 13.31% MEM: 1.28% CMDLINE: clang -emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69 -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_lxc.c -o - MEM-EXT: RSS: 50 VMS: 85 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Load 1-min: 4.58 5-min: 2.25 15min: 1.94" endpointID=317 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2492 (63.36%) Free: 121 Buffers: 19 Cached: 1300" endpointID=317 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1023 (100.00%) Free: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 4.49% MEM: 1.99% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 78 VMS: 784 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME clang STATUS [running] PID 298 CPU: 26.77% MEM: 1.47% CMDLINE: clang -emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_host.c -o - MEM-EXT: RSS: 57 VMS: 92 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME clang STATUS [zombie] PID 300 CPU: 23.84% MEM: 0.00% CMDLINE:  MEM-EXT: RSS: 0 VMS: 0 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME llc STATUS [running] PID 301 CPU: 6.05% MEM: 0.87% CMDLINE: llc -march=bpf -mcpu=v3 -filetype=asm -o /var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69/bpf_lxc.asm MEM-EXT: RSS: 34 VMS: 43 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="Load 1-min: 4.58 5-min: 2.25 15min: 1.94" endpointID=767 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2498 (63.53%) Free: 107 Buffers: 19 Cached: 1306" endpointID=767 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1023 (100.00%) Free: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 4.45% MEM: 1.99% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 78 VMS: 784 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME clang STATUS [running] PID 298 CPU: 27.31% MEM: 1.54% CMDLINE: clang -emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_host.c -o - MEM-EXT: RSS: 60 VMS: 95 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME clang STATUS [zombie] PID 300 CPU: 23.25% MEM: 0.00% CMDLINE:  MEM-EXT: RSS: 0 VMS: 0 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME llc STATUS [running] PID 301 CPU: 6.94% MEM: 0.88% CMDLINE: llc -march=bpf -mcpu=v3 -filetype=asm -o /var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69/bpf_lxc.asm MEM-EXT: RSS: 34 VMS: 43 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="Launching compiler" args="[-E -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69 -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_lxc.c -o /var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69/bpf_lxc.c]" subsys=datapath-loader target=clang
level=debug msg="Launching compiler" args="[-emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69 -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_lxc.c -o -]" subsys=datapath-loader target=clang
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Load 1-min: 4.58 5-min: 2.25 15min: 1.94" endpointID=317 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2507 (63.76%) Free: 78 Buffers: 20 Cached: 1326" endpointID=317 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1023 (100.00%) Free: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 4.07% MEM: 1.94% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 76 VMS: 784 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME clang STATUS [zombie] PID 298 CPU: 22.22% MEM: 0.00% CMDLINE:  MEM-EXT: RSS: 0 VMS: 0 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME llc STATUS [running] PID 299 CPU: 8.72% MEM: 1.31% CMDLINE: llc -march=bpf -mcpu=v3 -filetype=asm -o /var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e/bpf_host.asm MEM-EXT: RSS: 51 VMS: 61 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME clang STATUS [running] PID 313 CPU: 12.67% MEM: 1.26% CMDLINE: clang -emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69 -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_lxc.c -o - MEM-EXT: RSS: 49 VMS: 84 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="Load 1-min: 4.58 5-min: 2.25 15min: 1.94" endpointID=767 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2518 (64.04%) Free: 70 Buffers: 20 Cached: 1323" endpointID=767 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1023 (100.00%) Free: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 4.04% MEM: 1.93% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 75 VMS: 784 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME clang STATUS [zombie] PID 298 CPU: 21.87% MEM: 0.00% CMDLINE:  MEM-EXT: RSS: 0 VMS: 0 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME llc STATUS [running] PID 299 CPU: 9.61% MEM: 1.35% CMDLINE: llc -march=bpf -mcpu=v3 -filetype=asm -o /var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e/bpf_host.asm MEM-EXT: RSS: 53 VMS: 63 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME clang STATUS [running] PID 313 CPU: 13.20% MEM: 1.27% CMDLINE: clang -emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69 -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_lxc.c -o - MEM-EXT: RSS: 50 VMS: 84 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="Launching compiler" args="[-E -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_host.c -o /var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e/bpf_host.c]" subsys=datapath-loader target=clang
level=debug msg="Launching compiler" args="[-emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_host.c -o -]" subsys=datapath-loader target=clang
level=debug msg="UpdateIdentities: Adding a new identity" identity=5939 labels="[k8s:app=local-path-provisioner k8s:io.cilium.k8s.namespace.labels.kubernetes.io/metadata.name=local-path-storage k8s:io.cilium.k8s.policy.cluster=kind-kind k8s:io.cilium.k8s.policy.serviceaccount=local-path-provisioner-service-account k8s:io.kubernetes.pod.namespace=local-path-storage]" subsys=policy
level=debug msg="Regenerating all endpoints" subsys=policy
level=info msg="regenerating all endpoints" reason="one or more identities created or deleted" subsys=endpoint-manager
level=debug msg="Triggering endpoint regeneration due to one or more identities created or deleted" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 endpointState=waiting-to-regenerate identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="Skipped duplicate endpoint regeneration level no-rebuild trigger due to one or more identities created or deleted" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=waiting-to-regenerate identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="UpdateIdentities: Adding a new identity" identity=9324 labels="[k8s:io.cilium.k8s.namespace.labels.kubernetes.io/metadata.name=kube-system k8s:io.cilium.k8s.policy.cluster=kind-kind k8s:io.cilium.k8s.policy.serviceaccount=coredns k8s:io.kubernetes.pod.namespace=kube-system k8s:k8s-app=kube-dns]" subsys=policy
level=debug msg="Upserting IP into ipcache layer" identity="{5939 custom-resource [] false false}" ipAddr=10.244.2.133 k8sNamespace=local-path-storage k8sPodName=local-path-provisioner-684f458cdd-8jrt4 key=0 namedPorts="map[]" subsys=ipcache
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{5939 custom-resource [] false false}" ipAddr="{10.244.2.133 ffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Upserting IP into ipcache layer" identity="{9324 custom-resource [] false false}" ipAddr=10.244.2.141 k8sNamespace=kube-system k8sPodName=coredns-565d847f94-2r5qp key=0 namedPorts="map[dns:{53 17} dns-tcp:{53 6} metrics:{9153 6}]" subsys=ipcache
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{9324 custom-resource [] false false}" ipAddr="{10.244.2.141 ffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Updated ipcache map entry on pod add" hostIP= k8sNamespace=kube-system k8sPodName=coredns-565d847f94-wkwzh podIP= podIPs="[]" subsys=k8s-watcher
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Upserting IP into ipcache layer" identity="{9324 custom-resource [] false false}" ipAddr=10.244.3.29 k8sNamespace=kube-system k8sPodName=coredns-565d847f94-v7fbp key=0 namedPorts="map[dns:{53 17} dns-tcp:{53 6} metrics:{9153 6}]" subsys=ipcache
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{9324 custom-resource [] false false}" ipAddr="{10.244.3.29 ffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Load 1-min: 6.54 5-min: 2.69 15min: 2.09" endpointID=317 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2526 (64.24%) Free: 66 Buffers: 17 Cached: 1322" endpointID=317 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1023 (99.99%) Free: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 3.89% MEM: 1.80% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 70 VMS: 784 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME clang STATUS [running] PID 313 CPU: 19.16% MEM: 1.37% CMDLINE: clang -emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69 -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_lxc.c -o - MEM-EXT: RSS: 53 VMS: 88 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME clang STATUS [running] PID 328 CPU: 8.79% MEM: 1.23% CMDLINE: clang -emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_host.c -o - MEM-EXT: RSS: 48 VMS: 83 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="Load 1-min: 6.54 5-min: 2.69 15min: 2.09" endpointID=767 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2531 (64.35%) Free: 72 Buffers: 15 Cached: 1314" endpointID=767 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1023 (100.00%) Free: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 3.87% MEM: 1.78% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 70 VMS: 784 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME clang STATUS [running] PID 313 CPU: 20.02% MEM: 1.37% CMDLINE: clang -emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69 -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_lxc.c -o - MEM-EXT: RSS: 53 VMS: 88 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME clang STATUS [running] PID 328 CPU: 10.01% MEM: 1.25% CMDLINE: clang -emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_host.c -o - MEM-EXT: RSS: 49 VMS: 84 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="GET /config request" params="{HTTPRequest:0x4001ee4700}" subsys=daemon
level=debug msg="GET /config request" params="{HTTPRequest:0x4001cd8c00}" subsys=daemon
level=debug msg="Allocated random IP" ip=10.244.1.205 owner=kube-system/coredns-565d847f94-wkwzh pool=default subsys=ipam
level=debug msg="Regenerating all endpoints" subsys=policy
level=info msg="regenerating all endpoints" reason="one or more identities created or deleted" subsys=endpoint-manager
level=debug msg="Skipped duplicate endpoint regeneration level no-rebuild trigger due to one or more identities created or deleted" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 endpointState=waiting-to-regenerate identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="Skipped duplicate endpoint regeneration trigger due to one or more identities created or deleted" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=waiting-to-regenerate identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="PUT /endpoint/{id} request" endpoint="{Addressing:0x4000f37180 ContainerID:972758c29d450ddb0adb93b543045fabc922ac9edf0277b57bd2e8ebb86dfcbb ContainerName: DatapathConfiguration:0x4000acfcf0 DatapathMapID:0 DockerEndpointID: DockerNetworkID: HostMac:06:77:61:ba:f7:05 ID:0 InterfaceIndex:9 InterfaceName:lxc102a8ca64051 K8sNamespace:kube-system K8sPodName:coredns-565d847f94-wkwzh Labels:[] Mac:6a:65:b8:f8:d8:38 Pid:0 PolicyEnabled:false State:0x4000acfd00 SyncBuildEndpoint:true}" subsys=daemon
level=debug msg="Processing API request with rate limiter" maxWaitDuration=15s name=endpoint-create parallelRequests=4 rateLimiterSkipped=true subsys=rate uuid=49d0785d-8b2d-47f2-b6ff-bc5f25bba1ca
level=debug msg="API request released by rate limiter" maxWaitDuration=15s name=endpoint-create parallelRequests=4 rateLimiterSkipped=true subsys=rate uuid=49d0785d-8b2d-47f2-b6ff-bc5f25bba1ca waitDurationTotal=0s
level=info msg="Create endpoint request" addressing="&{10.244.1.205 415fa4a8-709c-4c54-bdfd-9b15685f7cb5  }" containerID=972758c29d450ddb0adb93b543045fabc922ac9edf0277b57bd2e8ebb86dfcbb datapathConfiguration="&{false false false false false <nil>}" interface=lxc102a8ca64051 k8sPodName=kube-system/coredns-565d847f94-wkwzh labels="[]" subsys=daemon sync-build=true
level=debug msg="Endpoint creation" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=0 endpointState=waiting-for-identity ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="New create request" containerID= datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=0 ipv4= ipv6= k8sPodName=/ subsys=daemon
level=debug msg="stopped waiting for caches to be synced" kubernetesResource="core/v1::Pods" subsys=k8s
level=debug msg="Connecting to k8s local stores to retrieve labels for pod" k8sNamespace=kube-system k8sPodName=coredns-565d847f94-wkwzh subsys=k8s
level=debug msg="No sidecar.istio.io/status annotation" k8sNamespace=kube-system k8sPodName=coredns-565d847f94-wkwzh subsys=k8s
level=debug msg="Starting new controller" name=endpoint-1197-regeneration-recovery subsys=controller uuid=8ad41e88-742f-451d-9f1b-b8a945514606
level=debug msg="creating new EventQueue" name=endpoint-1197 numBufferedEvents=25 subsys=eventqueue
level=info msg="New endpoint" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=1197 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Starting new controller" name="sync-to-k8s-ciliumendpoint (1197)" subsys=controller uuid=fdcb02e9-f4be-47b4-bc48-d3aa990929bf
level=debug msg="stopped waiting for caches to be synced" kubernetesResource="core/v1::Pods" subsys=k8s
level=debug msg="EventQueue event processing statistics" eventConsumeOffQueueWaitTime="11.667µs" eventEnqueueWaitTime=541ns eventHandlingDuration=30.368709ms eventType="*endpoint.EndpointPolicyVisibilityEvent" name=endpoint-1197 subsys=eventqueue
level=debug msg="stopped waiting for caches to be synced" kubernetesResource="core/v1::Pods" subsys=k8s
level=debug msg="EventQueue event processing statistics" eventConsumeOffQueueWaitTime="1.084µs" eventEnqueueWaitTime=542ns eventHandlingDuration="12.292µs" eventType="*endpoint.EndpointPolicyBandwidthEvent" name=endpoint-1197 subsys=eventqueue
level=debug msg="stopped waiting for caches to be synced" kubernetesResource="core/v1::Pods" subsys=k8s
level=debug msg="EventQueue event processing statistics" eventConsumeOffQueueWaitTime=791ns eventEnqueueWaitTime=459ns eventHandlingDuration="9.458µs" eventType="*endpoint.EndpointNoTrackEvent" name=endpoint-1197 subsys=eventqueue
level=debug msg="Refreshing labels of endpoint" containerID=972758c29d endpointID=1197 identityLabels="k8s:io.cilium.k8s.namespace.labels.kubernetes.io/metadata.name=kube-system,k8s:io.cilium.k8s.policy.cluster=kind-kind,k8s:io.cilium.k8s.policy.serviceaccount=coredns,k8s:io.kubernetes.pod.namespace=kube-system,k8s:k8s-app=kube-dns" infoLabels="k8s:pod-template-hash=565d847f94" subsys=endpoint
level=debug msg="Assigning information label" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=1197 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh obj="{Key:pod-template-hash Value:565d847f94 Source:k8s}" subsys=endpoint
level=debug msg="Assigning security relevant label" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=1197 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh obj="{Key:io.cilium.k8s.namespace.labels.kubernetes.io/metadata.name Value:kube-system Source:k8s}" subsys=endpoint
level=debug msg="Assigning security relevant label" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=1197 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh obj="{Key:io.kubernetes.pod.namespace Value:kube-system Source:k8s}" subsys=endpoint
level=debug msg="Assigning security relevant label" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=1197 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh obj="{Key:io.cilium.k8s.policy.serviceaccount Value:coredns Source:k8s}" subsys=endpoint
level=debug msg="Assigning security relevant label" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=1197 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh obj="{Key:io.cilium.k8s.policy.cluster Value:kind-kind Source:k8s}" subsys=endpoint
level=debug msg="Assigning security relevant label" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=1197 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh obj="{Key:k8s-app Value:kube-dns Source:k8s}" subsys=endpoint
level=info msg="Resolving identity labels (blocking)" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=1197 identityLabels="k8s:io.cilium.k8s.namespace.labels.kubernetes.io/metadata.name=kube-system,k8s:io.cilium.k8s.policy.cluster=kind-kind,k8s:io.cilium.k8s.policy.serviceaccount=coredns,k8s:io.kubernetes.pod.namespace=kube-system,k8s:k8s-app=kube-dns" ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Resolving identity for labels" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=1197 identityLabels="k8s:io.cilium.k8s.namespace.labels.kubernetes.io/metadata.name=kube-system,k8s:io.cilium.k8s.policy.cluster=kind-kind,k8s:io.cilium.k8s.policy.serviceaccount=coredns,k8s:io.kubernetes.pod.namespace=kube-system,k8s:k8s-app=kube-dns" ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Resolving identity" identityLabels="k8s:io.cilium.k8s.namespace.labels.kubernetes.io/metadata.name=kube-system,k8s:io.cilium.k8s.policy.cluster=kind-kind,k8s:io.cilium.k8s.policy.serviceaccount=coredns,k8s:io.kubernetes.pod.namespace=kube-system,k8s:k8s-app=kube-dns" subsys=identity-cache
level=debug msg="Skipping CiliumEndpoint update because security identity is not yet available" containerID=972758c29d controller="sync-to-k8s-ciliumendpoint (1197)" datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=1197 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpointsynchronizer
level=debug msg="Controller func execution time: 30.846584ms" name="sync-to-k8s-ciliumendpoint (1197)" subsys=controller uuid=fdcb02e9-f4be-47b4-bc48-d3aa990929bf
level=debug msg="Allocating key" key="[k8s:io.cilium.k8s.namespace.labels.kubernetes.io/metadata.name=kube-system k8s:io.cilium.k8s.policy.cluster=kind-kind k8s:io.cilium.k8s.policy.serviceaccount=coredns k8s:io.kubernetes.pod.namespace=kube-system k8s:k8s-app=kube-dns]" subsys=allocator
level=debug msg="Reserved new local key" key="k8s:io.cilium.k8s.namespace.labels.kubernetes.io/metadata.name=kube-system;k8s:io.cilium.k8s.policy.cluster=kind-kind;k8s:io.cilium.k8s.policy.serviceaccount=coredns;k8s:io.kubernetes.pod.namespace=kube-system;k8s:k8s-app=kube-dns;" subsys=allocator
level=info msg="Reusing existing global key" key="k8s:io.cilium.k8s.namespace.labels.kubernetes.io/metadata.name=kube-system;k8s:io.cilium.k8s.policy.cluster=kind-kind;k8s:io.cilium.k8s.policy.serviceaccount=coredns;k8s:io.kubernetes.pod.namespace=kube-system;k8s:k8s-app=kube-dns;" subsys=allocator
level=debug msg="Allocated key" id=9324 key="[k8s:io.cilium.k8s.namespace.labels.kubernetes.io/metadata.name=kube-system k8s:io.cilium.k8s.policy.cluster=kind-kind k8s:io.cilium.k8s.policy.serviceaccount=coredns k8s:io.kubernetes.pod.namespace=kube-system k8s:k8s-app=kube-dns]" subsys=allocator
level=debug msg="Resolved identity" identity=9324 identityLabels="k8s:io.cilium.k8s.namespace.labels.kubernetes.io/metadata.name=kube-system,k8s:io.cilium.k8s.policy.cluster=kind-kind,k8s:io.cilium.k8s.policy.serviceaccount=coredns,k8s:io.kubernetes.pod.namespace=kube-system,k8s:k8s-app=kube-dns" isNew=false isNewLocally=true subsys=identity-cache
level=debug msg="Assigned new identity to endpoint" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=1197 identity=9324 identityLabels="k8s:io.cilium.k8s.namespace.labels.kubernetes.io/metadata.name=kube-system,k8s:io.cilium.k8s.policy.cluster=kind-kind,k8s:io.cilium.k8s.policy.serviceaccount=coredns,k8s:io.kubernetes.pod.namespace=kube-system,k8s:k8s-app=kube-dns" ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="removing old and adding new identity" new=9324 old="<nil>" subsys=identitymanager
level=debug msg="Set identity for this endpoint" code=OK containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=1197 endpointState=ready ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=0
level=info msg="Identity of endpoint changed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=1197 identity=9324 identityLabels="k8s:io.cilium.k8s.namespace.labels.kubernetes.io/metadata.name=kube-system,k8s:io.cilium.k8s.policy.cluster=kind-kind,k8s:io.cilium.k8s.policy.serviceaccount=coredns,k8s:io.kubernetes.pod.namespace=kube-system,k8s:k8s-app=kube-dns" ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh oldIdentity="no identity" subsys=endpoint
level=debug msg="Triggering endpoint regeneration due to updated security labels" code=OK containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=1197 endpointState=waiting-to-regenerate identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=0
level=debug msg="Dequeued endpoint from build queue" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Regenerating endpoint" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh reason="updated security labels" startTime="2023-07-12 21:56:47.570203258 +0000 UTC m=+10.934113589" subsys=endpoint
level=debug msg="Regenerating endpoint: updated security labels" code=OK containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=1197 endpointState=regenerating identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=0
level=debug msg="removing directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=0 directory=1197_next endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_policy_01197 subsys=bpf
level=debug msg="Starting policy recalculation..." containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Forced policy recalculation" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Completed endpoint policy recalculation" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 forcedRegeneration=true identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyCalculation="&{{{{{0 0} 0 0 {{} 0} {{} 0}}}} {0 0 <nil>} 23291 0}" subsys=endpoint waitingForIdentityCache="&{{{{{0 0} 0 0 {{} 0} {{} 0}}}} {0 0 <nil>} 0 0}" waitingForPolicyRepository="&{{{{{0 0} 0 0 {{} 0} {{} 0}}}} {0 0 <nil>} 416 0}"
level=debug msg="preparing new cache transaction: upserting 1 entries, deleting 0 entries" subsys=xds xdsCachedVersion=3 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="inserting resource into cache" subsys=xds xdsCachedVersion=3 xdsResourceName=1197 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="committing cache transaction and notifying of new version" subsys=xds xdsCachedVersion=3 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="BPF header file hashed (was: \"\")" bpfHeaderfileHash=7893731b6685475dfe5360e1b8a61cf84c83a2bf5f9ee995962246f1092743d5 containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="writing header file" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 file-path=1197_next/ep_config.h identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="writing header file with DNSRules" DNSRules="map[]" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 file-path=1197_next/ep_config.h identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Preparing to compile BPF" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh regeneration-level=rewrite+load subsys=endpoint
level=debug msg="Load 1-min: 6.54 5-min: 2.69 15min: 2.09" endpointID=1197 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2544 (64.70%) Free: 66 Buffers: 13 Cached: 1309" endpointID=1197 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1023 (100.00%) Free: 0" endpointID=1197 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 3.74% MEM: 1.77% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 69 VMS: 784 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=1197 subsys=endpoint
level=debug msg="NAME clang STATUS [zombie] PID 313 CPU: 19.59% MEM: 0.00% CMDLINE:  MEM-EXT: RSS: 0 VMS: 0 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=1197 subsys=endpoint
level=debug msg="Starting new controller" name=resolve-identity-1197 subsys=controller uuid=3c32187b-e08e-41fe-91aa-efa075404f72
level=debug msg="Getting CEP during an initialization" containerID=972758c29d controller="sync-to-k8s-ciliumendpoint (1197)" datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpointsynchronizer
level=info msg="Waiting for endpoint to be generated" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Endpoint labels unchanged, skipping resolution of identity" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 identityLabels="k8s:io.cilium.k8s.namespace.labels.kubernetes.io/metadata.name=kube-system,k8s:io.cilium.k8s.policy.cluster=kind-kind,k8s:io.cilium.k8s.policy.serviceaccount=coredns,k8s:io.kubernetes.pod.namespace=kube-system,k8s:k8s-app=kube-dns" ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Controller func execution time: 501.791µs" name=resolve-identity-1197 subsys=controller uuid=3c32187b-e08e-41fe-91aa-efa075404f72
level=debug msg="NAME llc STATUS [running] PID 314 CPU: 5.03% MEM: 0.86% CMDLINE: llc -march=bpf -mcpu=v3 -filetype=obj -o /var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69/bpf_lxc.o MEM-EXT: RSS: 33 VMS: 43 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=1197 subsys=endpoint
level=debug msg="NAME clang STATUS [running] PID 328 CPU: 15.88% MEM: 1.37% CMDLINE: clang -emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_host.c -o - MEM-EXT: RSS: 53 VMS: 88 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=1197 subsys=endpoint
level=debug msg="storing CEP UID after create" ciliumEndpointUID=35c8aa83-870c-4d76-9a1d-e252492b6662 containerID=972758c29d controller="sync-to-k8s-ciliumendpoint (1197)" datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpointsynchronizer
level=debug msg="Skipping CiliumEndpoint update because it has not changed" containerID=972758c29d controller="sync-to-k8s-ciliumendpoint (1197)" datapathPolicyRevision=0 desiredPolicyRevision=0 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpointsynchronizer
level=debug msg="Controller func execution time: 37.823458ms" name="sync-to-k8s-ciliumendpoint (1197)" subsys=controller uuid=fdcb02e9-f4be-47b4-bc48-d3aa990929bf
level=debug msg="Upserting IP into ipcache layer" identity="{9324 custom-resource [] false false}" ipAddr=10.244.1.205 k8sNamespace=kube-system k8sPodName=coredns-565d847f94-wkwzh key=0 namedPorts="map[dns:{53 17} dns-tcp:{53 6} metrics:{9153 6}]" subsys=ipcache
level=debug msg="Daemon notified of IP-Identity cache state change" identity="{9324 custom-resource [] false false}" ipAddr="{10.244.1.205 ffffffff}" modification=Upsert subsys=datapath-ipcache
level=debug msg="Controller func execution time: 27.167µs" name=metricsmap-bpf-prom-sync subsys=controller uuid=38a9c0b7-176f-4a35-865f-69a2af221242
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Load 1-min: 6.54 5-min: 2.69 15min: 2.09" endpointID=317 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2523 (64.16%) Free: 104 Buffers: 11 Cached: 1293" endpointID=317 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1023 (100.00%) Free: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 3.74% MEM: 1.78% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 69 VMS: 784 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME clang STATUS [zombie] PID 313 CPU: 18.31% MEM: 0.00% CMDLINE:  MEM-EXT: RSS: 0 VMS: 0 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME llc STATUS [running] PID 314 CPU: 7.06% MEM: 0.94% CMDLINE: llc -march=bpf -mcpu=v3 -filetype=obj -o /var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69/bpf_lxc.o MEM-EXT: RSS: 36 VMS: 46 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME clang STATUS [running] PID 328 CPU: 16.99% MEM: 1.40% CMDLINE: clang -emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_host.c -o - MEM-EXT: RSS: 54 VMS: 90 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="Load 1-min: 6.54 5-min: 2.69 15min: 2.09" endpointID=767 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2537 (64.50%) Free: 90 Buffers: 11 Cached: 1294" endpointID=767 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1023 (100.00%) Free: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 3.72% MEM: 1.78% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 70 VMS: 784 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME clang STATUS [zombie] PID 313 CPU: 17.94% MEM: 0.00% CMDLINE:  MEM-EXT: RSS: 0 VMS: 0 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME llc STATUS [running] PID 314 CPU: 7.69% MEM: 0.94% CMDLINE: llc -march=bpf -mcpu=v3 -filetype=obj -o /var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69/bpf_lxc.o MEM-EXT: RSS: 36 VMS: 46 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME clang STATUS [running] PID 328 CPU: 17.58% MEM: 1.40% CMDLINE: clang -emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_host.c -o - MEM-EXT: RSS: 54 VMS: 90 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=info msg="Compiled new BPF template" BPFCompilationTime=7.143372295s file-path=/var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69/bpf_lxc.o subsys=datapath-loader
level=debug msg="Watching template path" file-path=/var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69/bpf_lxc.o subsys=datapath-loader
level=debug msg="Found variable with offset 107972" subsys=elf symbol=LXC_ID
level=debug msg="Found variable with offset 107968" subsys=elf symbol=LXC_IPV4
level=debug msg="Found variable with offset 107952" subsys=elf symbol=LXC_IP_1
level=debug msg="Found variable with offset 107956" subsys=elf symbol=LXC_IP_2
level=debug msg="Found variable with offset 107960" subsys=elf symbol=LXC_IP_3
level=debug msg="Found variable with offset 107964" subsys=elf symbol=LXC_IP_4
level=debug msg="Found variable with offset 107976" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 107980" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 107992" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 107984" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 107988" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found variable with offset 107972" subsys=elf symbol=LXC_ID
level=debug msg="Found variable with offset 107968" subsys=elf symbol=LXC_IPV4
level=debug msg="Found variable with offset 107952" subsys=elf symbol=LXC_IP_1
level=debug msg="Found variable with offset 107956" subsys=elf symbol=LXC_IP_2
level=debug msg="Found variable with offset 107960" subsys=elf symbol=LXC_IP_3
level=debug msg="Found variable with offset 107964" subsys=elf symbol=LXC_IP_4
level=debug msg="Found variable with offset 107976" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 107980" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 107992" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 107984" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 107988" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 30" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_container" subsys=elf
level=debug msg="Skipping cil_to_container" subsys=elf
level=debug msg="Found symbol with offset 1017016" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1016648" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1020451" subsys=elf symbol=cilium_calls_65535
level=debug msg="Found symbol with offset 1017110" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1017088" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1017209" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1016781" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1017275" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1016842" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1016609" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1021710" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1017366" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1017153" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1016758" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1022539" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1017290" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1017128" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1017314" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1016902" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1017032" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1020852" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1020431" subsys=elf symbol=cilium_policy_65535
level=debug msg="Found symbol with offset 1017174" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1016869" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1017064" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1020827" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping handle_policy" subsys=elf
level=debug msg="Skipping tail_handle_arp" subsys=elf
level=debug msg="Skipping tail_handle_ipv4" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_cont" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_ipv4_ct_egress" subsys=elf
level=debug msg="Skipping tail_ipv4_ct_ingress" subsys=elf
level=debug msg="Skipping tail_ipv4_to_endpoint" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1016705" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1016888" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1016968" subsys=elf symbol=to-container
level=debug msg="Found section with offset 1016985" subsys=elf symbol=from-container
level=debug msg="Found section with offset 1017052" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1017200" subsys=elf symbol=1/0xffff
level=debug msg="Found section with offset 1017246" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1017262" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1017329" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1017427" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1017875" subsys=elf symbol=2/29
level=debug msg="Found section with offset 1018439" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1019240" subsys=elf symbol=2/27
level=debug msg="Found section with offset 1019321" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1019367" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1020020" subsys=elf symbol=2/6
level=debug msg="Found section with offset 1020628" subsys=elf symbol=2/25
level=debug msg="Found section with offset 1022452" subsys=elf symbol=2/13
level=debug msg="Found section with offset 1023900" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=1197_next/bpf_lxc.o subsys=elf template-path=/var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69/bpf_lxc.o
level=debug msg="Found symbol referring to unknown section id 30" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_container" subsys=elf
level=debug msg="Skipping cil_to_container" subsys=elf
level=debug msg="Found symbol with offset 1017016" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1016648" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1020451" subsys=elf symbol=cilium_calls_65535
level=debug msg="Found symbol with offset 1017110" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1017088" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1017209" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1016781" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1017275" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1016842" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1016609" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1021710" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1017366" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1017153" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1016758" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1022539" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1017290" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1017128" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1017314" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1016902" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1017032" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1020852" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1020431" subsys=elf symbol=cilium_policy_65535
level=debug msg="Found symbol with offset 1017174" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1016869" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1017064" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1020827" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping handle_policy" subsys=elf
level=debug msg="Skipping tail_handle_arp" subsys=elf
level=debug msg="Skipping tail_handle_ipv4" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_cont" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_ipv4_ct_egress" subsys=elf
level=debug msg="Skipping tail_ipv4_ct_ingress" subsys=elf
level=debug msg="Skipping tail_ipv4_to_endpoint" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1016705" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1016888" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1016968" subsys=elf symbol=to-container
level=debug msg="Loading CollectionSpec from ELF" device=lxc102a8ca64051 ifindex=9 objPath=1197_next/bpf_lxc.o subsys=datapath-loader
level=debug msg="Found section with offset 1016985" subsys=elf symbol=from-container
level=debug msg="Found section with offset 1017052" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1017200" subsys=elf symbol=1/0xffff
level=debug msg="Found section with offset 1017246" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1017262" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1017329" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1017427" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1017875" subsys=elf symbol=2/29
level=debug msg="Found section with offset 1018439" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1019240" subsys=elf symbol=2/27
level=debug msg="Found section with offset 1019321" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1019367" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1020020" subsys=elf symbol=2/6
level=debug msg="Found section with offset 1020628" subsys=elf symbol=2/25
level=debug msg="Found section with offset 1022452" subsys=elf symbol=2/13
level=debug msg="Found section with offset 1023900" subsys=elf symbol=2/1
level=debug msg="Loading Collection into kernel" device=lxc102a8ca64051 ifindex=9 objPath=1197_next/bpf_lxc.o subsys=datapath-loader
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=767_next/bpf_lxc.o subsys=elf template-path=/var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69/bpf_lxc.o
level=debug msg="Loading CollectionSpec from ELF" device=lxc_health ifindex=7 objPath=767_next/bpf_lxc.o subsys=datapath-loader
level=debug msg="Loading Collection into kernel" device=lxc_health ifindex=7 objPath=767_next/bpf_lxc.o subsys=datapath-loader
Verifier error: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)
Verifier log: load program: permission denied:
	btf_vmlinux is malformed
	R1 type=ctx expected=fp
	; int tail_handle_snat_fwd_ipv4(struct __ctx_buff *ctx)
	0: (bf) r5 = r1
	1: (b4) w7 = 0
	; ctx->cb[off] = data;
	2: (63) *(u32 *)(r5 +52) = r7
	; return (void *)(unsigned long)ctx->data_end;
	3: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	4: (61) r6 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	5: (bf) r2 = r6
	6: (07) r2 += 34
	7: (7b) *(u64 *)(r10 -96) = r5
	; if (data + tot_len > data_end)
	8: (2d) if r2 > r1 goto pc+224
	 R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R10=fp0 fp-96_w=ctx
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	9: (61) r1 = *(u32 *)(r6 +26)
	10: (b7) r9 = 0
	; struct endpoint_key key = {};
	11: (63) *(u32 *)(r10 -32) = r9
	last_idx 11 first_idx 0
	regs=200 stack=0 before 10: (b7) r9 = 0
	12: (63) *(u32 *)(r10 -36) = r9
	13: (63) *(u32 *)(r10 -40) = r9
	14: (63) *(u32 *)(r10 -44) = r9
	; key.ip4 = ip;
	15: (63) *(u32 *)(r10 -48) = r1
	16: (b4) w1 = 1
	; key.family = ENDPOINT_KEY_IPV4;
	17: (73) *(u8 *)(r10 -32) = r1
	18: (bf) r2 = r10
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	19: (07) r2 += -48
	; return map_lookup_elem(&ENDPOINTS_MAP, &key);
	20: (18) r1 = 0xffff700159c9b400
	22: (85) call bpf_map_lookup_elem#1
	23: (bf) r8 = r0
	; remote_ep = lookup_ip4_remote_endpoint(ip4->daddr, 0);
	24: (61) r1 = *(u32 *)(r6 +30)
	; .ip4 = addr,
	25: (7b) *(u64 *)(r10 -32) = r9
	26: (63) *(u32 *)(r10 -36) = r7
	last_idx 26 first_idx 23
	regs=80 stack=0 before 25: (7b) *(u64 *)(r10 -32) = r9
	regs=80 stack=0 before 24: (61) r1 = *(u32 *)(r6 +30)
	regs=80 stack=0 before 23: (bf) r8 = r0
	 R0_rw=map_value_or_null(id=1,off=0,ks=20,vs=48,imm=0) R6_rw=pkt(id=0,off=0,r=34,imm=0) R7_rw=invP0 R9_rw=invP0 R10=fp0 fp-32=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-96_w=ctx
	parent didn't have regs=80 stack=0 marks
	last_idx 22 first_idx 0
	regs=80 stack=0 before 22: (85) call bpf_map_lookup_elem#1
	regs=80 stack=0 before 20: (18) r1 = 0xffff700159c9b400
	regs=80 stack=0 before 19: (07) r2 += -48
	regs=80 stack=0 before 18: (bf) r2 = r10
	regs=80 stack=0 before 17: (73) *(u8 *)(r10 -32) = r1
	regs=80 stack=0 before 16: (b4) w1 = 1
	regs=80 stack=0 before 15: (63) *(u32 *)(r10 -48) = r1
	regs=80 stack=0 before 14: (63) *(u32 *)(r10 -44) = r9
	regs=80 stack=0 before 13: (63) *(u32 *)(r10 -40) = r9
	regs=80 stack=0 before 12: (63) *(u32 *)(r10 -36) = r9
	regs=80 stack=0 before 11: (63) *(u32 *)(r10 -32) = r9
	regs=80 stack=0 before 10: (b7) r9 = 0
	regs=80 stack=0 before 9: (61) r1 = *(u32 *)(r6 +26)
	regs=80 stack=0 before 8: (2d) if r2 > r1 goto pc+224
	regs=80 stack=0 before 7: (7b) *(u64 *)(r10 -96) = r5
	regs=80 stack=0 before 6: (07) r2 += 34
	regs=80 stack=0 before 5: (bf) r2 = r6
	regs=80 stack=0 before 4: (61) r6 = *(u32 *)(r5 +76)
	regs=80 stack=0 before 3: (61) r1 = *(u32 *)(r5 +80)
	regs=80 stack=0 before 2: (63) *(u32 *)(r5 +52) = r7
	regs=80 stack=0 before 1: (b4) w7 = 0
	27: (63) *(u32 *)(r10 -40) = r1
	28: (18) r1 = 0x100000000000040
	; .lpm_key = { IPCACHE_PREFIX_LEN(prefix), {} },
	30: (7b) *(u64 *)(r10 -48) = r1
	31: (bf) r2 = r10
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	32: (07) r2 += -48
	; return map_lookup_elem(map, &key);
	33: (18) r1 = 0xffff700104950c00
	35: (85) call bpf_map_lookup_elem#1
	36: (79) r5 = *(u64 *)(r10 -96)
	; if (local_ep) {
	37: (15) if r8 == 0x0 goto pc+195
	 R0_w=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8_w=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=invP0 R10=fp0 fp-32_w=mmmmmmmm fp-40=mmmmmmmm fp-48_w=mmmmmmmm fp-96=ctx
	; .daddr = ip4->daddr,
	38: (61) r1 = *(u32 *)(r6 +30)
	; struct ipv4_ct_tuple tuple = {
	39: (63) *(u32 *)(r10 -88) = r1
	; .saddr = ip4->saddr
	40: (61) r1 = *(u32 *)(r6 +26)
	; struct ipv4_ct_tuple tuple = {
	41: (63) *(u32 *)(r10 -84) = r1
	42: (b4) w2 = 0
	43: (63) *(u32 *)(r10 -80) = r2
	last_idx 43 first_idx 23
	regs=4 stack=0 before 42: (b4) w2 = 0
	; .nexthdr = ip4->protocol,
	44: (71) r1 = *(u8 *)(r6 +23)
	; struct ipv4_ct_tuple tuple = {
	45: (73) *(u8 *)(r10 -75) = r2
	;
	46: (18) r3 = 0xffff7001044a2800
	48: (16) if w1 == 0x6 goto pc+2
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=invP0 R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0?0000 fp-88=mmmmmmmm fp-96=ctx
	49: (18) r3 = 0xffff7000ef1d5000
	; struct ipv4_ct_tuple tuple = {
	51: (73) *(u8 *)(r10 -76) = r1
	; return ip4->ihl * 4;
	52: (71) r9 = *(u8 *)(r6 +14)
	; return ip4->ihl * 4;
	53: (64) w9 <<= 2
	54: (54) w9 &= 60
	; ct_is_reply4(get_ct_map4(&tuple), ctx, ETH_HLEN +
	55: (04) w9 += 14
	; switch (tuple->nexthdr) {
	56: (16) if w1 == 0x11 goto pc+38
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9_w=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	57: (16) if w1 == 0x6 goto pc+37
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	58: (56) if w1 != 0x1 goto pc+174
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv1 R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	59: (bf) r6 = r3
	60: (b4) w1 = 0
	; __be16 identifier = 0;
	61: (6b) *(u16 *)(r10 -48) = r1
	last_idx 61 first_idx 57
	regs=2 stack=0 before 60: (b4) w1 = 0
	62: (bf) r3 = r10
	;
	63: (07) r3 += -72
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	64: (bf) r1 = r5
	65: (bc) w2 = w9
	66: (b4) w4 = 1
	67: (85) call bpf_skb_load_bytes#26
	last_idx 67 first_idx 57
	regs=10 stack=0 before 66: (b4) w4 = 1
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	68: (c6) if w0 s< 0x0 goto pc+163
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	69: (71) r3 = *(u8 *)(r10 -72)
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	70: (bc) w2 = w3
	71: (44) w2 |= 8
	72: (79) r1 = *(u64 *)(r10 -96)
	73: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=ctx(id=0,off=0,imm=0) R2_w=inv(id=0,umin_value=8,umax_value=255,var_off=(0x8; 0xf7)) R3_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	74: (05) goto pc+8
	; switch (type) {
	83: (b4) w2 = 0
	; tuple->dport = 0;
	84: (63) *(u32 *)(r10 -80) = r2
	last_idx 84 first_idx 68
	regs=4 stack=0 before 83: (b4) w2 = 0
	; switch (type) {
	85: (bf) r2 = r3
	86: (66) if w2 s> 0xa goto pc+46
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=ctx(id=0,off=0,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	87: (bf) r1 = r6
	88: (16) if w2 == 0x0 goto pc+51
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	89: (16) if w2 == 0x3 goto pc+46
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	90: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	91: (05) goto pc+135
	; if (err < 0)
	227: (b4) w2 = 1
	; tuple->flags = TUPLE_F_IN;
	228: (73) *(u8 *)(r10 -75) = r2
	229: (bf) r2 = r10
	;
	230: (07) r2 += -88
	; *is_reply = map_lookup_elem(map, tuple) != NULL;
	231: (85) call bpf_map_lookup_elem#1
	232: (79) r5 = *(u64 *)(r10 -96)
	233: (b7) r1 = 0
	; struct ipv4_ct_tuple tuple = {};
	234: (7b) *(u64 *)(r10 -88) = r1
	last_idx 234 first_idx 232
	regs=2 stack=0 before 233: (b7) r1 = 0
	235: (6b) *(u16 *)(r10 -76) = r7
	236: (63) *(u32 *)(r10 -80) = r7
	; return (void *)(unsigned long)ctx->data_end;
	237: (61) r2 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	238: (61) r8 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	239: (bf) r1 = r8
	240: (07) r1 += 34
	; if (data + tot_len > data_end)
	241: (2d) if r1 > r2 goto pc+251
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=pkt(id=0,off=34,r=34,imm=0) R2_w=pkt_end(id=0,off=0,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??000000 fp-88_w=00000000 fp-96=ctx
	242: (7b) *(u64 *)(r10 -104) = r2
	243: (b4) w7 = -158
	; return ip4->frag_off & bpf_htons(0x1FFF);
	244: (69) r6 = *(u16 *)(r8 +20)
	; tuple->nexthdr = ip4->protocol;
	245: (71) r1 = *(u8 *)(r8 +23)
	; tuple->nexthdr = ip4->protocol;
	246: (73) *(u8 *)(r10 -76) = r1
	; tuple->daddr = ip4->daddr;
	247: (61) r2 = *(u32 *)(r8 +30)
	; tuple->daddr = ip4->daddr;
	248: (63) *(u32 *)(r10 -88) = r2
	; tuple->saddr = ip4->saddr;
	249: (61) r3 = *(u32 *)(r8 +26)
	; tuple->saddr = ip4->saddr;
	250: (63) *(u32 *)(r10 -84) = r3
	; switch (tuple->nexthdr) {
	251: (16) if w1 == 0x1 goto pc+120
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5_w=ctx(id=0,off=0,imm=0) R6_w=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv4294967138 R8_w=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88_w=mmmmmmmm fp-96=ctx fp-104_w=pkt_end
	;
	252: (71) r7 = *(u8 *)(r8 +14)
	; switch (tuple->nexthdr) {
	253: (16) if w1 == 0x11 goto pc+1
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	254: (56) if w1 != 0x6 goto pc+29
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv6 R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; struct ipv4_frag_id frag_id = {
	255: (63) *(u32 *)(r10 -68) = r3
	256: (63) *(u32 *)(r10 -72) = r2
	; .id = ip4->id,
	257: (69) r2 = *(u16 *)(r8 +18)
	258: (b4) w3 = 0
	; struct ipv4_frag_id frag_id = {
	259: (73) *(u8 *)(r10 -61) = r3
	last_idx 259 first_idx 253
	regs=8 stack=0 before 258: (b4) w3 = 0
	260: (73) *(u8 *)(r10 -62) = r1
	261: (6b) *(u16 *)(r10 -64) = r2
	; return ip4->frag_off & bpf_htons(0x3FFF);
	262: (bc) w1 = w6
	263: (54) w1 &= 65343
	; if (unlikely(is_fragment)) {
	264: (16) if w1 == 0x0 goto pc+46
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=65343,var_off=(0x0; 0xff3f)) R2=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R3=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; return ctx->len;
	265: (61) r9 = *(u32 *)(r5 +0)
	266: (b7) r1 = 0
	; struct metrics_value *entry, new_entry = {};
	267: (7b) *(u64 *)(r10 -40) = r1
	last_idx 267 first_idx 264
	regs=2 stack=0 before 266: (b7) r1 = 0
	268: (7b) *(u64 *)(r10 -48) = r1
	269: (b7) r1 = 521
	; struct metrics_key key = {};
	270: (7b) *(u64 *)(r10 -56) = r1
	271: (bf) r2 = r10
	;
	272: (07) r2 += -56
	; entry = map_lookup_elem(&METRICS_MAP, &key);
	273: (18) r1 = 0xffff7000ac846c00
	275: (85) call bpf_map_lookup_elem#1
	; if (entry) {
	276: (15) if r0 == 0x0 goto pc+9
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; entry->count += 1;
	277: (79) r1 = *(u64 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	278: (07) r1 += 1
	279: (7b) *(u64 *)(r0 +0) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; entry->bytes += bytes;
	280: (79) r1 = *(u64 *)(r0 +8)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	281: (0f) r1 += r9
	282: (7b) *(u64 *)(r0 +8) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	283: (05) goto pc+13
	; return ip4->frag_off & bpf_htons(0x1FFF);
	297: (69) r1 = *(u16 *)(r8 +20)
	; return ip4->frag_off & bpf_htons(0x1FFF);
	298: (54) w1 &= 65311
	299: (79) r5 = *(u64 *)(r10 -96)
	; if (likely(not_first_fragment))
	300: (16) if w1 == 0x0 goto pc+10
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0,umax_value=65311,var_off=(0x0; 0xff1f)) R5_w=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	301: (bf) r2 = r10
	;
	302: (07) r2 += -72
	; tmp = map_lookup_elem(&IPV4_FRAG_DATAGRAMS_MAP, frag_id);
	303: (18) r1 = 0xffff7001044a2400
	305: (85) call bpf_map_lookup_elem#1
	; if (!tmp)
	306: (55) if r0 != 0x0 goto pc+637
	
	from 306 to 944: R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; case  4: __it_mob(d, s, 32);
	944: (61) r1 = *(u32 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	945: (63) *(u32 *)(r10 -80) = r1
	946: (05) goto pc-577
	; map_update_elem(&METRICS_MAP, &key, &new_entry, 0);
	370: (79) r5 = *(u64 *)(r10 -96)
	371: (b4) w7 = 0
	372: (54) w6 &= -225
	373: (b4) w1 = 1
	; if (IS_ERR(ret)) goto skip_crab;
	374: (16) if w7 == 0x2 goto pc+1
	last_idx 374 first_idx 306
	regs=80 stack=0 before 373: (b4) w1 = 1
	regs=80 stack=0 before 372: (54) w6 &= -225
	regs=80 stack=0 before 371: (b4) w7 = 0
	375: (b4) w1 = 0
	; return ip4->frag_off & bpf_htons(0x1FFF);
	376: (54) w6 &= 65535
	377: (79) r0 = *(u64 *)(r10 -104)
	; if (IS_ERR(ret)) goto skip_crab;
	378: (56) if w6 != 0x0 goto pc+114
	 R0_w=pkt_end(id=0,off=0,imm=0) R1=inv0 R5=ctx(id=0,off=0,imm=0) R6_w=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	;
	379: (bc) w2 = w7
	380: (74) w2 >>= 31
	381: (4c) w2 |= w1
	; if (IS_ERR(ret)) goto skip_crab;
	382: (56) if w2 != 0x0 goto pc+110
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	383: (71) r1 = *(u8 *)(r8 +23)
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	384: (56) if w1 != 0x6 goto pc+108
	 R0=pkt_end(id=0,off=0,imm=0) R1=inv6 R2=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	385: (07) r8 += 14
	; return ip4->ihl * 4;
	386: (71) r1 = *(u8 *)(r8 +0)
	; return ip4->ihl * 4;
	387: (64) w1 <<= 2
	388: (57) r1 &= 60
	; tcph = (struct tcphdr *)((void*)ip4 + ipv4_hdrlen(ip4));
	389: (0f) r8 += r1
	last_idx 389 first_idx 384
	regs=2 stack=0 before 388: (57) r1 &= 60
	regs=2 stack=0 before 387: (64) w1 <<= 2
	regs=2 stack=0 before 386: (71) r1 = *(u8 *)(r8 +0)
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	390: (bf) r9 = r8
	391: (07) r9 += 20
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	392: (2d) if r9 > r0 goto pc+100
	 R0=pkt_end(id=0,off=0,imm=0) R1_w=invP(id=0,umax_value=60,var_off=(0x0; 0x3c)) R2=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	393: (b4) w2 = 15
	;
	394: (61) r1 = *(u32 *)(r5 +80)
	; offset = tcph->doff * 4;
	395: (69) r3 = *(u16 *)(r8 +12)
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	396: (74) w3 >>= 2
	397: (54) w3 &= 60
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	398: (04) w3 += -20
	399: (05) goto pc+5
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=inv(id=0,umax_value=252,var_off=(0x0; 0xfc)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	last_idx 404 first_idx 464
	regs=4 stack=0 before 403: (04) w2 += -1
	regs=4 stack=0 before 402: (79) r5 = *(u64 *)(r10 -96)
	regs=4 stack=0 before 467: (05) goto pc-66
	regs=4 stack=0 before 466: (1c) w3 -= w4
	regs=4 stack=0 before 465: (0f) r9 += r4
	regs=4 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=8,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_r=pkt(id=8,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 451 first_idx 433
	regs=4 stack=0 before 451: (bd) if r4 <= r1 goto pc+12
	regs=4 stack=0 before 450: (07) r4 += 2
	regs=4 stack=0 before 449: (bf) r4 = r9
	regs=4 stack=0 before 436: (56) if w5 != 0x0 goto pc+12
	regs=4 stack=0 before 435: (16) if w5 == 0x2d goto pc+265
	regs=4 stack=0 before 434: (16) if w5 == 0x1 goto pc-35
	regs=4 stack=0 before 433: (71) r5 = *(u8 *)(r9 +0)
	 R0=pkt_end(id=0,off=0,imm=0) R1_r=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7_r=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9_r=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32_r=mmmmmmmm fp-40=00000000 fp-48_r=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104_r=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 421 first_idx 405
	regs=4 stack=0 before 421: (bd) if r4 <= r1 goto pc+11
	regs=4 stack=0 before 420: (07) r4 += 1
	regs=4 stack=0 before 419: (bf) r4 = r9
	regs=4 stack=0 before 407: (56) if w4 != 0x0 goto pc+11
	regs=4 stack=0 before 406: (54) w4 &= 255
	regs=4 stack=0 before 405: (bc) w4 = w3
	 R0=pkt_end(id=0,off=0,imm=0) R1_rw=pkt_end(id=0,off=0,imm=0) R2_rw=invP15 R3_rw=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R5_r=ctx(id=0,off=0,imm=0) R6=inv0 R7_r=invP0 R8_w=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_rw=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32_r=mmmmmmmm fp-40=00000000 fp-48_r=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104_r=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 399 first_idx 384
	regs=4 stack=0 before 399: (05) goto pc+5
	regs=4 stack=0 before 398: (04) w3 += -20
	regs=4 stack=0 before 397: (54) w3 &= 60
	regs=4 stack=0 before 396: (74) w3 >>= 2
	regs=4 stack=0 before 395: (69) r3 = *(u16 *)(r8 +12)
	regs=4 stack=0 before 394: (61) r1 = *(u32 *)(r5 +80)
	regs=4 stack=0 before 393: (b4) w2 = 15
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=0,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=19,off=36,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 449
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=0,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=36,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 451
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=0,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=36,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=0,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=36,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=0,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=36,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 419
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=0,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP9 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4=pkt(id=24,off=36,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=24,off=34,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=0,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=36,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=0,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=36,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=26,off=34,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=0,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=36,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=0,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=36,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 419
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=0,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP4 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4=pkt(id=29,off=36,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=29,off=34,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=0,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=36,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=0,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=36,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=31,off=34,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=0,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	
	from 435 to 701: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP1 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=inv45 R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	701: (bf) r2 = r9
	702: (07) r2 += 20
	703: (79) r5 = *(u64 *)(r10 -96)
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	704: (2d) if r2 > r0 goto pc-212
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=32,off=54,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	705: (71) r2 = *(u8 *)(r9 +18)
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	706: (56) if w2 != 0x0 goto pc+130
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=inv0 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	707: (b4) w7 = -134
	; return (void *)(unsigned long)ctx->data;
	708: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	709: (bf) r3 = r2
	710: (07) r3 += 34
	; if (data + tot_len > data_end)
	711: (2d) if r3 > r1 goto pc-219
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=pkt(id=0,off=0,r=34,imm=0) R3=pkt(id=0,off=34,r=34,imm=0) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=inv4294967162 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; masquerade_ip = ip4->saddr;
	712: (61) r1 = *(u32 *)(r2 +26)
	; masquerade_ip = ip4->saddr;
	713: (63) *(u32 *)(r10 -72) = r1
	; return ip4->ihl * 4;
	714: (71) r2 = *(u8 *)(r2 +14)
	; return ip4->ihl * 4;
	715: (64) w2 <<= 2
	716: (54) w2 &= 60
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	717: (04) w2 += 44
	718: (bf) r3 = r10
	; masquerade_ip = ip4->saddr;
	719: (07) r3 += -72
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	720: (bf) r1 = r5
	721: (b4) w4 = 4
	722: (b4) w5 = 0
	723: (85) call bpf_skb_store_bytes#9
	last_idx 723 first_idx 711
	regs=10 stack=0 before 722: (b4) w5 = 0
	regs=10 stack=0 before 721: (b4) w4 = 4
	724: (79) r5 = *(u64 *)(r10 -96)
	725: (b4) w7 = -141
	; if (ret < 0) return DROP_WRITE_ERROR;
	726: (c6) if w0 s< 0x0 goto pc-234
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7_w=inv4294967155 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	; return ctx->len;
	727: (61) r1 = *(u32 *)(r5 +0)
	; __u64 cap_len = min_t(__u64, monitor ? : TRACE_PAYLOAD_LEN,
	728: (bf) r3 = r1
	729: (a6) if w1 < 0x80 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=inv(id=34,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=34,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7_w=inv4294967155 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	730: (b7) r3 = 128
	731: (b7) r2 = 0
	; __notify_common_hdr(CILIUM_NOTIFY_TRACE, obs_point),
	732: (61) r4 = *(u32 *)(r5 +68)
	; msg = (typeof(msg)) {
	733: (73) *(u8 *)(r10 -14) = r2
	last_idx 733 first_idx 724
	regs=4 stack=0 before 732: (61) r4 = *(u32 *)(r5 +68)
	regs=4 stack=0 before 731: (b7) r2 = 0
	734: (73) *(u8 *)(r10 -15) = r2
	735: (73) *(u8 *)(r10 -16) = r2
	736: (73) *(u8 *)(r10 -17) = r2
	737: (73) *(u8 *)(r10 -18) = r2
	738: (73) *(u8 *)(r10 -19) = r2
	739: (73) *(u8 *)(r10 -20) = r2
	740: (73) *(u8 *)(r10 -6) = r2
	741: (73) *(u8 *)(r10 -7) = r2
	742: (73) *(u8 *)(r10 -8) = r2
	743: (73) *(u8 *)(r10 -9) = r2
	744: (73) *(u8 *)(r10 -10) = r2
	745: (73) *(u8 *)(r10 -11) = r2
	746: (73) *(u8 *)(r10 -12) = r2
	747: (73) *(u8 *)(r10 -13) = r2
	748: (b4) w2 = 327680
	749: (63) *(u32 *)(r10 -24) = r2
	750: (18) r2 = 0x4
	752: (63) *(u32 *)(r10 -32) = r2
	753: (b4) w2 = 1
	754: (6b) *(u16 *)(r10 -34) = r2
	755: (63) *(u32 *)(r10 -40) = r1
	756: (63) *(u32 *)(r10 -44) = r4
	757: (b4) w1 = 1284
	758: (6b) *(u16 *)(r10 -48) = r1
	759: (6b) *(u16 *)(r10 -36) = r3
	760: (b4) w6 = 0
	761: (73) *(u8 *)(r10 -2) = r6
	last_idx 761 first_idx 724
	regs=40 stack=0 before 760: (b4) w6 = 0
	762: (73) *(u8 *)(r10 -3) = r6
	763: (73) *(u8 *)(r10 -4) = r6
	764: (73) *(u8 *)(r10 -5) = r6
	765: (63) *(u32 *)(r10 -28) = r6
	766: (18) r7 = 0x2ff
	768: (6b) *(u16 *)(r10 -46) = r7
	769: (73) *(u8 *)(r10 -1) = r6
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	770: (67) r3 <<= 32
	771: (18) r1 = 0xffffffff
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	773: (4f) r3 |= r1
	774: (bf) r4 = r10
	;
	775: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP,
	776: (bf) r1 = r5
	777: (18) r2 = 0xffff7000722cc800
	779: (b4) w5 = 48
	780: (85) call bpf_perf_event_output#25
	last_idx 780 first_idx 724
	regs=20 stack=0 before 779: (b4) w5 = 48
	781: (b4) w1 = 2
	; struct debug_msg msg = {
	782: (6b) *(u16 *)(r10 -48) = r1
	783: (6b) *(u16 *)(r10 -46) = r7
	784: (b4) w1 = 50
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	785: (79) r2 = *(u64 *)(r10 -96)
	786: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	787: (63) *(u32 *)(r10 -32) = r1
	788: (18) r1 = 0x3200000032
	790: (7b) *(u64 *)(r10 -40) = r1
	791: (63) *(u32 *)(r10 -44) = r2
	792: (bf) r4 = r10
	;
	793: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	794: (79) r1 = *(u64 *)(r10 -96)
	795: (18) r2 = 0xffff7000722cc800
	797: (18) r3 = 0xffffffff
	799: (b4) w5 = 20
	800: (85) call bpf_perf_event_output#25
	last_idx 800 first_idx 781
	regs=20 stack=0 before 799: (b4) w5 = 20
	; cilium_dbg3(ctx, DBG_CT_LOOKUP4_1, masquerade_ip, masquerade_ip,
	801: (61) r1 = *(u32 *)(r10 -72)
	; struct debug_msg msg = {
	802: (6b) *(u16 *)(r10 -46) = r7
	803: (b4) w2 = 12290
	804: (6b) *(u16 *)(r10 -48) = r2
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	805: (79) r2 = *(u64 *)(r10 -96)
	806: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	807: (63) *(u32 *)(r10 -32) = r6
	808: (63) *(u32 *)(r10 -36) = r1
	809: (63) *(u32 *)(r10 -40) = r1
	810: (63) *(u32 *)(r10 -44) = r2
	811: (bf) r4 = r10
	;
	812: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	813: (79) r1 = *(u64 *)(r10 -96)
	814: (18) r2 = 0xffff7000722cc800
	816: (18) r3 = 0xffffffff
	818: (b4) w5 = 20
	819: (85) call bpf_perf_event_output#25
	last_idx 819 first_idx 781
	regs=20 stack=0 before 818: (b4) w5 = 20
	820: (79) r5 = *(u64 *)(r10 -96)
	; return (void *)(unsigned long)ctx->data_end;
	821: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	822: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	823: (07) r2 += 34
	824: (b4) w7 = -134
	; if (data + tot_len > data_end)
	825: (2d) if r2 > r1 goto pc-333
	 R0=inv(id=0) R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=invP0 R7_w=inv4294967162 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmmmmmm fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	; &redir_opt->ip1, 4, 0);
	826: (07) r9 += 2
	; ret = ctx_store_bytes(ctx, ETH_HLEN + offsetof(struct iphdr, saddr),
	827: (bf) r1 = r5
	828: (b4) w2 = 26
	829: (bf) r3 = r9
	830: (b4) w4 = 4
	831: (b4) w5 = 0
	832: (85) call bpf_skb_store_bytes#9
	R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf
	processed 1623 insns (limit 1000000) max_states_per_insn 3 total_states 55 peak_states 55 mark_read 27
level=warning msg="JoinEP: Failed to attach program(s)" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" file-path=767_next/bpf_lxc.o identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=datapath-loader veth=lxc_health
level=error msg="Error while rewriting endpoint BPF program" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting endpoint changes after BPF regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting proxy redirect removals" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting proxy redirect removals" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting xDS network policy update" subsys=envoy-manager
level=debug msg="preparing new cache transaction: upserting 0 entries, deleting 1 entries" subsys=xds xdsCachedVersion=4 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="deleting resource from cache" subsys=xds xdsCachedVersion=4 xdsResourceName=767 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="committing cache transaction and notifying of new version" subsys=xds xdsCachedVersion=4 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="Finished reverting xDS network policy update" subsys=envoy-manager
level=debug msg="Reverting proxy redirect additions" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting proxy redirect additions" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting endpoint changes after BPF regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=info msg="Wrote verifier log to endpoint directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 file-path=767_next/verifier.log identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=info msg="generating BPF for endpoint failed, keeping stale directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" file-path=767_next_fail identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=767_next_fail endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=767_next endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=warning msg="Regeneration of endpoint failed" bpfCompilation=7.143372295s bpfLoadProg=101.573292ms bpfWaitForELF=7.143624378s bpfWriteELF=18.012ms containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ mapSync="65.458µs" policyCalculation="44.375µs" prepareBuild="257.625µs" proxyConfiguration="5.457µs" proxyPolicyCalculation="132.209µs" proxyWaitForAck=0s reason="updated security labels" subsys=endpoint total=7.281918504s waitingForCTClean="419.75µs" waitingForLock=834ns
level=debug msg="Error regenerating endpoint: loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" code=Failure containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 endpointState=waiting-to-regenerate identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=200
level=error msg="endpoint regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="received signal that regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Skipped duplicate endpoint regeneration level rewrite+load trigger due to retrying regeneration" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 endpointState=waiting-to-regenerate identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="Controller func execution time: 7.282421962s" name=endpoint-767-regeneration-recovery subsys=controller uuid=6cb9c30c-f567-4e71-8177-fde97a90f07e
level=debug msg="Controller run succeeded; waiting for next controller update or stop" name=endpoint-767-regeneration-recovery subsys=controller uuid=6cb9c30c-f567-4e71-8177-fde97a90f07e
level=debug msg="EventQueue event processing statistics" eventConsumeOffQueueWaitTime="63.459µs" eventEnqueueWaitTime=333ns eventHandlingDuration=7.282102128s eventType="*endpoint.EndpointRegenerationEvent" name=endpoint-767 subsys=eventqueue
level=debug msg="Dequeued endpoint from build queue" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Regenerating endpoint" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ reason="one or more identities created or deleted" startTime="2023-07-12 21:56:48.143121008 +0000 UTC m=+11.507031381" subsys=endpoint
level=debug msg="Regenerating endpoint: one or more identities created or deleted" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 endpointState=regenerating identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=767_next endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Starting policy recalculation..." containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Skipping unnecessary endpoint policy recalculation" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ policyChanged=true policyRevision.next=1 policyRevision.repo=1 subsys=endpoint
level=debug msg="preparing new cache transaction: upserting 1 entries, deleting 0 entries" subsys=xds xdsCachedVersion=5 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="inserting resource into cache" subsys=xds xdsCachedVersion=5 xdsResourceName=767 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="committing cache transaction and notifying of new version" subsys=xds xdsCachedVersion=5 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="BPF header file hashed (was: \"\")" bpfHeaderfileHash=2a437131a8ba594ff149f7ab853c9324d465690aa6484f4397955fe717dd97f4 containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="writing header file" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 file-path=767_next/ep_config.h identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="writing header file with DNSRules" DNSRules="map[]" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 file-path=767_next/ep_config.h identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Preparing to compile BPF" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ regeneration-level=rewrite+load subsys=endpoint
level=debug msg="Load 1-min: 6.54 5-min: 2.69 15min: 2.09" endpointID=767 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2551 (64.86%) Free: 72 Buffers: 11 Cached: 1298" endpointID=767 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1023 (100.00%) Free: 0" endpointID=767 subsys=endpoint
level=debug msg="Found variable with offset 107972" subsys=elf symbol=LXC_ID
level=debug msg="Found variable with offset 107968" subsys=elf symbol=LXC_IPV4
level=debug msg="Found variable with offset 107952" subsys=elf symbol=LXC_IP_1
level=debug msg="Found variable with offset 107956" subsys=elf symbol=LXC_IP_2
level=debug msg="Found variable with offset 107960" subsys=elf symbol=LXC_IP_3
level=debug msg="Found variable with offset 107964" subsys=elf symbol=LXC_IP_4
level=debug msg="Found variable with offset 107976" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 107980" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 107992" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 107984" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 107988" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 30" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_container" subsys=elf
level=debug msg="Skipping cil_to_container" subsys=elf
level=debug msg="Found symbol with offset 1017016" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1016648" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1020451" subsys=elf symbol=cilium_calls_65535
level=debug msg="Found symbol with offset 1017110" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1017088" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1017209" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1016781" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1017275" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1016842" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1016609" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1021710" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1017366" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1017153" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 4.34% MEM: 2.02% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 79 VMS: 784 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="NAME clang STATUS [running] PID 328 CPU: 20.02% MEM: 1.47% CMDLINE: clang -emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_host.c -o - MEM-EXT: RSS: 57 VMS: 92 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=767 subsys=endpoint
level=debug msg="Found symbol with offset 1016758" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1022539" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1017290" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1017128" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1017314" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1016902" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1017032" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1020852" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1020431" subsys=elf symbol=cilium_policy_65535
level=debug msg="Found symbol with offset 1017174" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1016869" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1017064" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1020827" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping handle_policy" subsys=elf
level=debug msg="Skipping tail_handle_arp" subsys=elf
level=debug msg="Skipping tail_handle_ipv4" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_cont" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_ipv4_ct_egress" subsys=elf
level=debug msg="Skipping tail_ipv4_ct_ingress" subsys=elf
level=debug msg="Skipping tail_ipv4_to_endpoint" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1016705" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1016888" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1016968" subsys=elf symbol=to-container
level=debug msg="Found section with offset 1016985" subsys=elf symbol=from-container
level=debug msg="Found section with offset 1017052" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1017200" subsys=elf symbol=1/0xffff
level=debug msg="Found section with offset 1017246" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1017262" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1017329" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1017427" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1017875" subsys=elf symbol=2/29
level=debug msg="Found section with offset 1018439" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1019240" subsys=elf symbol=2/27
level=debug msg="Found section with offset 1019321" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1019367" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1020020" subsys=elf symbol=2/6
level=debug msg="Found section with offset 1020628" subsys=elf symbol=2/25
level=debug msg="Found section with offset 1022452" subsys=elf symbol=2/13
level=debug msg="Found section with offset 1023900" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=767_next/bpf_lxc.o subsys=elf template-path=/var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69/bpf_lxc.o
level=debug msg="Loading CollectionSpec from ELF" device=lxc_health ifindex=7 objPath=767_next/bpf_lxc.o subsys=datapath-loader
level=debug msg="Loading Collection into kernel" device=lxc_health ifindex=7 objPath=767_next/bpf_lxc.o subsys=datapath-loader
Verifier error: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)
Verifier log: load program: permission denied:
	btf_vmlinux is malformed
	R1 type=ctx expected=fp
	; int tail_handle_snat_fwd_ipv4(struct __ctx_buff *ctx)
	0: (bf) r5 = r1
	1: (b4) w7 = 0
	; ctx->cb[off] = data;
	2: (63) *(u32 *)(r5 +52) = r7
	; return (void *)(unsigned long)ctx->data_end;
	3: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	4: (61) r6 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	5: (bf) r2 = r6
	6: (07) r2 += 34
	7: (7b) *(u64 *)(r10 -96) = r5
	; if (data + tot_len > data_end)
	8: (2d) if r2 > r1 goto pc+224
	 R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R10=fp0 fp-96_w=ctx
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	9: (61) r1 = *(u32 *)(r6 +26)
	10: (b7) r9 = 0
	; struct endpoint_key key = {};
	11: (63) *(u32 *)(r10 -32) = r9
	last_idx 11 first_idx 0
	regs=200 stack=0 before 10: (b7) r9 = 0
	12: (63) *(u32 *)(r10 -36) = r9
	13: (63) *(u32 *)(r10 -40) = r9
	14: (63) *(u32 *)(r10 -44) = r9
	; key.ip4 = ip;
	15: (63) *(u32 *)(r10 -48) = r1
	16: (b4) w1 = 1
	; key.family = ENDPOINT_KEY_IPV4;
	17: (73) *(u8 *)(r10 -32) = r1
	18: (bf) r2 = r10
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	19: (07) r2 += -48
	; return map_lookup_elem(&ENDPOINTS_MAP, &key);
	20: (18) r1 = 0xffff700159c9b400
	22: (85) call bpf_map_lookup_elem#1
	23: (bf) r8 = r0
	; remote_ep = lookup_ip4_remote_endpoint(ip4->daddr, 0);
	24: (61) r1 = *(u32 *)(r6 +30)
	; .ip4 = addr,
	25: (7b) *(u64 *)(r10 -32) = r9
	26: (63) *(u32 *)(r10 -36) = r7
	last_idx 26 first_idx 23
	regs=80 stack=0 before 25: (7b) *(u64 *)(r10 -32) = r9
	regs=80 stack=0 before 24: (61) r1 = *(u32 *)(r6 +30)
	regs=80 stack=0 before 23: (bf) r8 = r0
	 R0_rw=map_value_or_null(id=1,off=0,ks=20,vs=48,imm=0) R6_rw=pkt(id=0,off=0,r=34,imm=0) R7_rw=invP0 R9_rw=invP0 R10=fp0 fp-32=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-96_w=ctx
	parent didn't have regs=80 stack=0 marks
	last_idx 22 first_idx 0
	regs=80 stack=0 before 22: (85) call bpf_map_lookup_elem#1
	regs=80 stack=0 before 20: (18) r1 = 0xffff700159c9b400
	regs=80 stack=0 before 19: (07) r2 += -48
	regs=80 stack=0 before 18: (bf) r2 = r10
	regs=80 stack=0 before 17: (73) *(u8 *)(r10 -32) = r1
	regs=80 stack=0 before 16: (b4) w1 = 1
	regs=80 stack=0 before 15: (63) *(u32 *)(r10 -48) = r1
	regs=80 stack=0 before 14: (63) *(u32 *)(r10 -44) = r9
	regs=80 stack=0 before 13: (63) *(u32 *)(r10 -40) = r9
	regs=80 stack=0 before 12: (63) *(u32 *)(r10 -36) = r9
	regs=80 stack=0 before 11: (63) *(u32 *)(r10 -32) = r9
	regs=80 stack=0 before 10: (b7) r9 = 0
	regs=80 stack=0 before 9: (61) r1 = *(u32 *)(r6 +26)
	regs=80 stack=0 before 8: (2d) if r2 > r1 goto pc+224
	regs=80 stack=0 before 7: (7b) *(u64 *)(r10 -96) = r5
	regs=80 stack=0 before 6: (07) r2 += 34
	regs=80 stack=0 before 5: (bf) r2 = r6
	regs=80 stack=0 before 4: (61) r6 = *(u32 *)(r5 +76)
	regs=80 stack=0 before 3: (61) r1 = *(u32 *)(r5 +80)
	regs=80 stack=0 before 2: (63) *(u32 *)(r5 +52) = r7
	regs=80 stack=0 before 1: (b4) w7 = 0
	27: (63) *(u32 *)(r10 -40) = r1
	28: (18) r1 = 0x100000000000040
	; .lpm_key = { IPCACHE_PREFIX_LEN(prefix), {} },
	30: (7b) *(u64 *)(r10 -48) = r1
	31: (bf) r2 = r10
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	32: (07) r2 += -48
	; return map_lookup_elem(map, &key);
	33: (18) r1 = 0xffff700104950c00
	35: (85) call bpf_map_lookup_elem#1
	36: (79) r5 = *(u64 *)(r10 -96)
	; if (local_ep) {
	37: (15) if r8 == 0x0 goto pc+195
	 R0_w=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8_w=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=invP0 R10=fp0 fp-32_w=mmmmmmmm fp-40=mmmmmmmm fp-48_w=mmmmmmmm fp-96=ctx
	; .daddr = ip4->daddr,
	38: (61) r1 = *(u32 *)(r6 +30)
	; struct ipv4_ct_tuple tuple = {
	39: (63) *(u32 *)(r10 -88) = r1
	; .saddr = ip4->saddr
	40: (61) r1 = *(u32 *)(r6 +26)
	; struct ipv4_ct_tuple tuple = {
	41: (63) *(u32 *)(r10 -84) = r1
	42: (b4) w2 = 0
	43: (63) *(u32 *)(r10 -80) = r2
	last_idx 43 first_idx 23
	regs=4 stack=0 before 42: (b4) w2 = 0
	; .nexthdr = ip4->protocol,
	44: (71) r1 = *(u8 *)(r6 +23)
	; struct ipv4_ct_tuple tuple = {
	45: (73) *(u8 *)(r10 -75) = r2
	;
	46: (18) r3 = 0xffff7001044a2800
	48: (16) if w1 == 0x6 goto pc+2
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=invP0 R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0?0000 fp-88=mmmmmmmm fp-96=ctx
	49: (18) r3 = 0xffff7000ef1d5000
	; struct ipv4_ct_tuple tuple = {
	51: (73) *(u8 *)(r10 -76) = r1
	; return ip4->ihl * 4;
	52: (71) r9 = *(u8 *)(r6 +14)
	; return ip4->ihl * 4;
	53: (64) w9 <<= 2
	54: (54) w9 &= 60
	; ct_is_reply4(get_ct_map4(&tuple), ctx, ETH_HLEN +
	55: (04) w9 += 14
	; switch (tuple->nexthdr) {
	56: (16) if w1 == 0x11 goto pc+38
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9_w=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	57: (16) if w1 == 0x6 goto pc+37
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	58: (56) if w1 != 0x1 goto pc+174
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv1 R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	59: (bf) r6 = r3
	60: (b4) w1 = 0
	; __be16 identifier = 0;
	61: (6b) *(u16 *)(r10 -48) = r1
	last_idx 61 first_idx 57
	regs=2 stack=0 before 60: (b4) w1 = 0
	62: (bf) r3 = r10
	;
	63: (07) r3 += -72
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	64: (bf) r1 = r5
	65: (bc) w2 = w9
	66: (b4) w4 = 1
	67: (85) call bpf_skb_load_bytes#26
	last_idx 67 first_idx 57
	regs=10 stack=0 before 66: (b4) w4 = 1
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	68: (c6) if w0 s< 0x0 goto pc+163
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	69: (71) r3 = *(u8 *)(r10 -72)
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	70: (bc) w2 = w3
	71: (44) w2 |= 8
	72: (79) r1 = *(u64 *)(r10 -96)
	73: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=ctx(id=0,off=0,imm=0) R2_w=inv(id=0,umin_value=8,umax_value=255,var_off=(0x8; 0xf7)) R3_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	74: (05) goto pc+8
	; switch (type) {
	83: (b4) w2 = 0
	; tuple->dport = 0;
	84: (63) *(u32 *)(r10 -80) = r2
	last_idx 84 first_idx 68
	regs=4 stack=0 before 83: (b4) w2 = 0
	; switch (type) {
	85: (bf) r2 = r3
	86: (66) if w2 s> 0xa goto pc+46
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=ctx(id=0,off=0,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	87: (bf) r1 = r6
	88: (16) if w2 == 0x0 goto pc+51
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	89: (16) if w2 == 0x3 goto pc+46
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	90: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	91: (05) goto pc+135
	; if (err < 0)
	227: (b4) w2 = 1
	; tuple->flags = TUPLE_F_IN;
	228: (73) *(u8 *)(r10 -75) = r2
	229: (bf) r2 = r10
	;
	230: (07) r2 += -88
	; *is_reply = map_lookup_elem(map, tuple) != NULL;
	231: (85) call bpf_map_lookup_elem#1
	232: (79) r5 = *(u64 *)(r10 -96)
	233: (b7) r1 = 0
	; struct ipv4_ct_tuple tuple = {};
	234: (7b) *(u64 *)(r10 -88) = r1
	last_idx 234 first_idx 232
	regs=2 stack=0 before 233: (b7) r1 = 0
	235: (6b) *(u16 *)(r10 -76) = r7
	236: (63) *(u32 *)(r10 -80) = r7
	; return (void *)(unsigned long)ctx->data_end;
	237: (61) r2 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	238: (61) r8 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	239: (bf) r1 = r8
	240: (07) r1 += 34
	; if (data + tot_len > data_end)
	241: (2d) if r1 > r2 goto pc+251
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=pkt(id=0,off=34,r=34,imm=0) R2_w=pkt_end(id=0,off=0,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??000000 fp-88_w=00000000 fp-96=ctx
	242: (7b) *(u64 *)(r10 -104) = r2
	243: (b4) w7 = -158
	; return ip4->frag_off & bpf_htons(0x1FFF);
	244: (69) r6 = *(u16 *)(r8 +20)
	; tuple->nexthdr = ip4->protocol;
	245: (71) r1 = *(u8 *)(r8 +23)
	; tuple->nexthdr = ip4->protocol;
	246: (73) *(u8 *)(r10 -76) = r1
	; tuple->daddr = ip4->daddr;
	247: (61) r2 = *(u32 *)(r8 +30)
	; tuple->daddr = ip4->daddr;
	248: (63) *(u32 *)(r10 -88) = r2
	; tuple->saddr = ip4->saddr;
	249: (61) r3 = *(u32 *)(r8 +26)
	; tuple->saddr = ip4->saddr;
	250: (63) *(u32 *)(r10 -84) = r3
	; switch (tuple->nexthdr) {
	251: (16) if w1 == 0x1 goto pc+120
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5_w=ctx(id=0,off=0,imm=0) R6_w=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv4294967138 R8_w=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88_w=mmmmmmmm fp-96=ctx fp-104_w=pkt_end
	;
	252: (71) r7 = *(u8 *)(r8 +14)
	; switch (tuple->nexthdr) {
	253: (16) if w1 == 0x11 goto pc+1
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	254: (56) if w1 != 0x6 goto pc+29
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv6 R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; struct ipv4_frag_id frag_id = {
	255: (63) *(u32 *)(r10 -68) = r3
	256: (63) *(u32 *)(r10 -72) = r2
	; .id = ip4->id,
	257: (69) r2 = *(u16 *)(r8 +18)
	258: (b4) w3 = 0
	; struct ipv4_frag_id frag_id = {
	259: (73) *(u8 *)(r10 -61) = r3
	last_idx 259 first_idx 253
	regs=8 stack=0 before 258: (b4) w3 = 0
	260: (73) *(u8 *)(r10 -62) = r1
	261: (6b) *(u16 *)(r10 -64) = r2
	; return ip4->frag_off & bpf_htons(0x3FFF);
	262: (bc) w1 = w6
	263: (54) w1 &= 65343
	; if (unlikely(is_fragment)) {
	264: (16) if w1 == 0x0 goto pc+46
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=65343,var_off=(0x0; 0xff3f)) R2=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R3=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; return ctx->len;
	265: (61) r9 = *(u32 *)(r5 +0)
	266: (b7) r1 = 0
	; struct metrics_value *entry, new_entry = {};
	267: (7b) *(u64 *)(r10 -40) = r1
	last_idx 267 first_idx 264
	regs=2 stack=0 before 266: (b7) r1 = 0
	268: (7b) *(u64 *)(r10 -48) = r1
	269: (b7) r1 = 521
	; struct metrics_key key = {};
	270: (7b) *(u64 *)(r10 -56) = r1
	271: (bf) r2 = r10
	;
	272: (07) r2 += -56
	; entry = map_lookup_elem(&METRICS_MAP, &key);
	273: (18) r1 = 0xffff7000ac846c00
	275: (85) call bpf_map_lookup_elem#1
	; if (entry) {
	276: (15) if r0 == 0x0 goto pc+9
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; entry->count += 1;
	277: (79) r1 = *(u64 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	278: (07) r1 += 1
	279: (7b) *(u64 *)(r0 +0) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; entry->bytes += bytes;
	280: (79) r1 = *(u64 *)(r0 +8)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	281: (0f) r1 += r9
	282: (7b) *(u64 *)(r0 +8) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	283: (05) goto pc+13
	; return ip4->frag_off & bpf_htons(0x1FFF);
	297: (69) r1 = *(u16 *)(r8 +20)
	; return ip4->frag_off & bpf_htons(0x1FFF);
	298: (54) w1 &= 65311
	299: (79) r5 = *(u64 *)(r10 -96)
	; if (likely(not_first_fragment))
	300: (16) if w1 == 0x0 goto pc+10
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0,umax_value=65311,var_off=(0x0; 0xff1f)) R5_w=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	301: (bf) r2 = r10
	;
	302: (07) r2 += -72
	; tmp = map_lookup_elem(&IPV4_FRAG_DATAGRAMS_MAP, frag_id);
	303: (18) r1 = 0xffff7001044a2400
	305: (85) call bpf_map_lookup_elem#1
	; if (!tmp)
	306: (55) if r0 != 0x0 goto pc+637
	
	from 306 to 944: R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; case  4: __it_mob(d, s, 32);
	944: (61) r1 = *(u32 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	945: (63) *(u32 *)(r10 -80) = r1
	946: (05) goto pc-577
	; map_update_elem(&METRICS_MAP, &key, &new_entry, 0);
	370: (79) r5 = *(u64 *)(r10 -96)
	371: (b4) w7 = 0
	372: (54) w6 &= -225
	373: (b4) w1 = 1
	; if (IS_ERR(ret)) goto skip_crab;
	374: (16) if w7 == 0x2 goto pc+1
	last_idx 374 first_idx 306
	regs=80 stack=0 before 373: (b4) w1 = 1
	regs=80 stack=0 before 372: (54) w6 &= -225
	regs=80 stack=0 before 371: (b4) w7 = 0
	375: (b4) w1 = 0
	; return ip4->frag_off & bpf_htons(0x1FFF);
	376: (54) w6 &= 65535
	377: (79) r0 = *(u64 *)(r10 -104)
	; if (IS_ERR(ret)) goto skip_crab;
	378: (56) if w6 != 0x0 goto pc+114
	 R0_w=pkt_end(id=0,off=0,imm=0) R1=inv0 R5=ctx(id=0,off=0,imm=0) R6_w=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	;
	379: (bc) w2 = w7
	380: (74) w2 >>= 31
	381: (4c) w2 |= w1
	; if (IS_ERR(ret)) goto skip_crab;
	382: (56) if w2 != 0x0 goto pc+110
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	383: (71) r1 = *(u8 *)(r8 +23)
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	384: (56) if w1 != 0x6 goto pc+108
	 R0=pkt_end(id=0,off=0,imm=0) R1=inv6 R2=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	385: (07) r8 += 14
	; return ip4->ihl * 4;
	386: (71) r1 = *(u8 *)(r8 +0)
	; return ip4->ihl * 4;
	387: (64) w1 <<= 2
	388: (57) r1 &= 60
	; tcph = (struct tcphdr *)((void*)ip4 + ipv4_hdrlen(ip4));
	389: (0f) r8 += r1
	last_idx 389 first_idx 384
	regs=2 stack=0 before 388: (57) r1 &= 60
	regs=2 stack=0 before 387: (64) w1 <<= 2
	regs=2 stack=0 before 386: (71) r1 = *(u8 *)(r8 +0)
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	390: (bf) r9 = r8
	391: (07) r9 += 20
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	392: (2d) if r9 > r0 goto pc+100
	 R0=pkt_end(id=0,off=0,imm=0) R1_w=invP(id=0,umax_value=60,var_off=(0x0; 0x3c)) R2=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	393: (b4) w2 = 15
	;
	394: (61) r1 = *(u32 *)(r5 +80)
	; offset = tcph->doff * 4;
	395: (69) r3 = *(u16 *)(r8 +12)
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	396: (74) w3 >>= 2
	397: (54) w3 &= 60
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	398: (04) w3 += -20
	399: (05) goto pc+5
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=inv(id=0,umax_value=252,var_off=(0x0; 0xfc)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	last_idx 404 first_idx 464
	regs=4 stack=0 before 403: (04) w2 += -1
	regs=4 stack=0 before 402: (79) r5 = *(u64 *)(r10 -96)
	regs=4 stack=0 before 467: (05) goto pc-66
	regs=4 stack=0 before 466: (1c) w3 -= w4
	regs=4 stack=0 before 465: (0f) r9 += r4
	regs=4 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=8,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_r=pkt(id=8,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 451 first_idx 433
	regs=4 stack=0 before 451: (bd) if r4 <= r1 goto pc+12
	regs=4 stack=0 before 450: (07) r4 += 2
	regs=4 stack=0 before 449: (bf) r4 = r9
	regs=4 stack=0 before 436: (56) if w5 != 0x0 goto pc+12
	regs=4 stack=0 before 435: (16) if w5 == 0x2d goto pc+265
	regs=4 stack=0 before 434: (16) if w5 == 0x1 goto pc-35
	regs=4 stack=0 before 433: (71) r5 = *(u8 *)(r9 +0)
	 R0=pkt_end(id=0,off=0,imm=0) R1_r=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7_r=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9_r=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32_r=mmmmmmmm fp-40=00000000 fp-48_r=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104_r=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 421 first_idx 405
	regs=4 stack=0 before 421: (bd) if r4 <= r1 goto pc+11
	regs=4 stack=0 before 420: (07) r4 += 1
	regs=4 stack=0 before 419: (bf) r4 = r9
	regs=4 stack=0 before 407: (56) if w4 != 0x0 goto pc+11
	regs=4 stack=0 before 406: (54) w4 &= 255
	regs=4 stack=0 before 405: (bc) w4 = w3
	 R0=pkt_end(id=0,off=0,imm=0) R1_rw=pkt_end(id=0,off=0,imm=0) R2_rw=invP15 R3_rw=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R5_r=ctx(id=0,off=0,imm=0) R6=inv0 R7_r=invP0 R8_w=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_rw=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32_r=mmmmmmmm fp-40=00000000 fp-48_r=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104_r=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 399 first_idx 384
	regs=4 stack=0 before 399: (05) goto pc+5
	regs=4 stack=0 before 398: (04) w3 += -20
	regs=4 stack=0 before 397: (54) w3 &= 60
	regs=4 stack=0 before 396: (74) w3 >>= 2
	regs=4 stack=0 before 395: (69) r3 = *(u16 *)(r8 +12)
	regs=4 stack=0 before 394: (61) r1 = *(u32 *)(r5 +80)
	regs=4 stack=0 before 393: (b4) w2 = 15
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=0,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=19,off=36,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 449
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=0,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=36,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 451
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=0,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=36,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=0,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=36,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=0,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=36,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 419
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=0,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP9 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4=pkt(id=24,off=36,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=24,off=34,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=0,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=36,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=0,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=36,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=26,off=34,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=0,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=36,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=0,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=36,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 419
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=0,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP4 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4=pkt(id=29,off=36,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=29,off=34,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=0,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=36,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=0,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=36,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=31,off=34,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=0,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	
	from 435 to 701: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP1 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=inv45 R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	701: (bf) r2 = r9
	702: (07) r2 += 20
	703: (79) r5 = *(u64 *)(r10 -96)
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	704: (2d) if r2 > r0 goto pc-212
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=32,off=54,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	705: (71) r2 = *(u8 *)(r9 +18)
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	706: (56) if w2 != 0x0 goto pc+130
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=inv0 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	707: (b4) w7 = -134
	; return (void *)(unsigned long)ctx->data;
	708: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	709: (bf) r3 = r2
	710: (07) r3 += 34
	; if (data + tot_len > data_end)
	711: (2d) if r3 > r1 goto pc-219
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=pkt(id=0,off=0,r=34,imm=0) R3=pkt(id=0,off=34,r=34,imm=0) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=inv4294967162 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; masquerade_ip = ip4->saddr;
	712: (61) r1 = *(u32 *)(r2 +26)
	; masquerade_ip = ip4->saddr;
	713: (63) *(u32 *)(r10 -72) = r1
	; return ip4->ihl * 4;
	714: (71) r2 = *(u8 *)(r2 +14)
	; return ip4->ihl * 4;
	715: (64) w2 <<= 2
	716: (54) w2 &= 60
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	717: (04) w2 += 44
	718: (bf) r3 = r10
	; masquerade_ip = ip4->saddr;
	719: (07) r3 += -72
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	720: (bf) r1 = r5
	721: (b4) w4 = 4
	722: (b4) w5 = 0
	723: (85) call bpf_skb_store_bytes#9
	last_idx 723 first_idx 711
	regs=10 stack=0 before 722: (b4) w5 = 0
	regs=10 stack=0 before 721: (b4) w4 = 4
	724: (79) r5 = *(u64 *)(r10 -96)
	725: (b4) w7 = -141
	; if (ret < 0) return DROP_WRITE_ERROR;
	726: (c6) if w0 s< 0x0 goto pc-234
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7_w=inv4294967155 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	; return ctx->len;
	727: (61) r1 = *(u32 *)(r5 +0)
	; __u64 cap_len = min_t(__u64, monitor ? : TRACE_PAYLOAD_LEN,
	728: (bf) r3 = r1
	729: (a6) if w1 < 0x80 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=inv(id=34,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=34,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7_w=inv4294967155 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	730: (b7) r3 = 128
	731: (b7) r2 = 0
	; __notify_common_hdr(CILIUM_NOTIFY_TRACE, obs_point),
	732: (61) r4 = *(u32 *)(r5 +68)
	; msg = (typeof(msg)) {
	733: (73) *(u8 *)(r10 -14) = r2
	last_idx 733 first_idx 724
	regs=4 stack=0 before 732: (61) r4 = *(u32 *)(r5 +68)
	regs=4 stack=0 before 731: (b7) r2 = 0
	734: (73) *(u8 *)(r10 -15) = r2
	735: (73) *(u8 *)(r10 -16) = r2
	736: (73) *(u8 *)(r10 -17) = r2
	737: (73) *(u8 *)(r10 -18) = r2
	738: (73) *(u8 *)(r10 -19) = r2
	739: (73) *(u8 *)(r10 -20) = r2
	740: (73) *(u8 *)(r10 -6) = r2
	741: (73) *(u8 *)(r10 -7) = r2
	742: (73) *(u8 *)(r10 -8) = r2
	743: (73) *(u8 *)(r10 -9) = r2
	744: (73) *(u8 *)(r10 -10) = r2
	745: (73) *(u8 *)(r10 -11) = r2
	746: (73) *(u8 *)(r10 -12) = r2
	747: (73) *(u8 *)(r10 -13) = r2
	748: (b4) w2 = 327680
	749: (63) *(u32 *)(r10 -24) = r2
	750: (18) r2 = 0x4
	752: (63) *(u32 *)(r10 -32) = r2
	753: (b4) w2 = 1
	754: (6b) *(u16 *)(r10 -34) = r2
	755: (63) *(u32 *)(r10 -40) = r1
	756: (63) *(u32 *)(r10 -44) = r4
	757: (b4) w1 = 1284
	758: (6b) *(u16 *)(r10 -48) = r1
	759: (6b) *(u16 *)(r10 -36) = r3
	760: (b4) w6 = 0
	761: (73) *(u8 *)(r10 -2) = r6
	last_idx 761 first_idx 724
	regs=40 stack=0 before 760: (b4) w6 = 0
	762: (73) *(u8 *)(r10 -3) = r6
	763: (73) *(u8 *)(r10 -4) = r6
	764: (73) *(u8 *)(r10 -5) = r6
	765: (63) *(u32 *)(r10 -28) = r6
	766: (18) r7 = 0x2ff
	768: (6b) *(u16 *)(r10 -46) = r7
	769: (73) *(u8 *)(r10 -1) = r6
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	770: (67) r3 <<= 32
	771: (18) r1 = 0xffffffff
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	773: (4f) r3 |= r1
	774: (bf) r4 = r10
	;
	775: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP,
	776: (bf) r1 = r5
	777: (18) r2 = 0xffff7000722cc800
	779: (b4) w5 = 48
	780: (85) call bpf_perf_event_output#25
	last_idx 780 first_idx 724
	regs=20 stack=0 before 779: (b4) w5 = 48
	781: (b4) w1 = 2
	; struct debug_msg msg = {
	782: (6b) *(u16 *)(r10 -48) = r1
	783: (6b) *(u16 *)(r10 -46) = r7
	784: (b4) w1 = 50
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	785: (79) r2 = *(u64 *)(r10 -96)
	786: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	787: (63) *(u32 *)(r10 -32) = r1
	788: (18) r1 = 0x3200000032
	790: (7b) *(u64 *)(r10 -40) = r1
	791: (63) *(u32 *)(r10 -44) = r2
	792: (bf) r4 = r10
	;
	793: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	794: (79) r1 = *(u64 *)(r10 -96)
	795: (18) r2 = 0xffff7000722cc800
	797: (18) r3 = 0xffffffff
	799: (b4) w5 = 20
	800: (85) call bpf_perf_event_output#25
	last_idx 800 first_idx 781
	regs=20 stack=0 before 799: (b4) w5 = 20
	; cilium_dbg3(ctx, DBG_CT_LOOKUP4_1, masquerade_ip, masquerade_ip,
	801: (61) r1 = *(u32 *)(r10 -72)
	; struct debug_msg msg = {
	802: (6b) *(u16 *)(r10 -46) = r7
	803: (b4) w2 = 12290
	804: (6b) *(u16 *)(r10 -48) = r2
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	805: (79) r2 = *(u64 *)(r10 -96)
	806: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	807: (63) *(u32 *)(r10 -32) = r6
	808: (63) *(u32 *)(r10 -36) = r1
	809: (63) *(u32 *)(r10 -40) = r1
	810: (63) *(u32 *)(r10 -44) = r2
	811: (bf) r4 = r10
	;
	812: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	813: (79) r1 = *(u64 *)(r10 -96)
	814: (18) r2 = 0xffff7000722cc800
	816: (18) r3 = 0xffffffff
	818: (b4) w5 = 20
	819: (85) call bpf_perf_event_output#25
	last_idx 819 first_idx 781
	regs=20 stack=0 before 818: (b4) w5 = 20
	820: (79) r5 = *(u64 *)(r10 -96)
	; return (void *)(unsigned long)ctx->data_end;
	821: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	822: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	823: (07) r2 += 34
	824: (b4) w7 = -134
	; if (data + tot_len > data_end)
	825: (2d) if r2 > r1 goto pc-333
	 R0=inv(id=0) R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=invP0 R7_w=inv4294967162 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmmmmmm fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	; &redir_opt->ip1, 4, 0);
	826: (07) r9 += 2
	; ret = ctx_store_bytes(ctx, ETH_HLEN + offsetof(struct iphdr, saddr),
	827: (bf) r1 = r5
	828: (b4) w2 = 26
	829: (bf) r3 = r9
	830: (b4) w4 = 4
	831: (b4) w5 = 0
	832: (85) call bpf_skb_store_bytes#9
	R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf
	processed 1623 insns (limit 1000000) max_states_per_insn 3 total_states 55 peak_states 55 mark_read 27
level=warning msg="JoinEP: Failed to attach program(s)" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" file-path=767_next/bpf_lxc.o identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=datapath-loader veth=lxc_health
level=error msg="Error while rewriting endpoint BPF program" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting endpoint changes after BPF regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting proxy redirect removals" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting proxy redirect removals" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting xDS network policy update" subsys=envoy-manager
level=debug msg="preparing new cache transaction: upserting 0 entries, deleting 1 entries" subsys=xds xdsCachedVersion=6 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="deleting resource from cache" subsys=xds xdsCachedVersion=6 xdsResourceName=767 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="committing cache transaction and notifying of new version" subsys=xds xdsCachedVersion=6 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="Finished reverting xDS network policy update" subsys=envoy-manager
level=debug msg="Reverting proxy redirect additions" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting proxy redirect additions" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting endpoint changes after BPF regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=info msg="Wrote verifier log to endpoint directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 file-path=767_next/verifier.log identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=info msg="generating BPF for endpoint failed, keeping stale directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" file-path=767_next_fail identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=767_next_fail endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=767_next endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Completed endpoint regeneration with no pending regeneration requests" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 endpointState=ready identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=warning msg="Regeneration of endpoint failed" bpfCompilation=0s bpfLoadProg=75.963459ms bpfWaitForELF="2.666µs" bpfWriteELF="821.75µs" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ mapSync="11.375µs" policyCalculation="109.916µs" prepareBuild="303.916µs" proxyConfiguration="6.083µs" proxyPolicyCalculation="102.875µs" proxyWaitForAck=0s reason="one or more identities created or deleted" subsys=endpoint total=82.650875ms waitingForCTClean="702µs" waitingForLock=751ns
level=debug msg="Error regenerating endpoint: loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" code=Failure containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 endpointState=ready identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=200
level=debug msg="EventQueue event processing statistics" eventConsumeOffQueueWaitTime=1.655307751s eventEnqueueWaitTime="1.083µs" eventHandlingDuration=82.760833ms eventType="*endpoint.EndpointRegenerationEvent" name=endpoint-767 subsys=eventqueue
level=error msg="endpoint regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpoint
Verifier error: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)
Verifier log: load program: permission denied:
	btf_vmlinux is malformed
	R1 type=ctx expected=fp
	; int tail_handle_snat_fwd_ipv4(struct __ctx_buff *ctx)
	0: (bf) r5 = r1
	1: (b4) w7 = 0
	; ctx->cb[off] = data;
	2: (63) *(u32 *)(r5 +52) = r7
	; return (void *)(unsigned long)ctx->data_end;
	3: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	4: (61) r6 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	5: (bf) r2 = r6
	6: (07) r2 += 34
	7: (7b) *(u64 *)(r10 -96) = r5
	; if (data + tot_len > data_end)
	8: (2d) if r2 > r1 goto pc+224
	 R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R10=fp0 fp-96_w=ctx
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	9: (61) r1 = *(u32 *)(r6 +26)
	10: (b7) r9 = 0
	; struct endpoint_key key = {};
	11: (63) *(u32 *)(r10 -32) = r9
	last_idx 11 first_idx 0
	regs=200 stack=0 before 10: (b7) r9 = 0
	12: (63) *(u32 *)(r10 -36) = r9
	13: (63) *(u32 *)(r10 -40) = r9
	14: (63) *(u32 *)(r10 -44) = r9
	; key.ip4 = ip;
	15: (63) *(u32 *)(r10 -48) = r1
	16: (b4) w1 = 1
	; key.family = ENDPOINT_KEY_IPV4;
	17: (73) *(u8 *)(r10 -32) = r1
	18: (bf) r2 = r10
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	19: (07) r2 += -48
	; return map_lookup_elem(&ENDPOINTS_MAP, &key);
	20: (18) r1 = 0xffff700159c9b400
	22: (85) call bpf_map_lookup_elem#1
	23: (bf) r8 = r0
	; remote_ep = lookup_ip4_remote_endpoint(ip4->daddr, 0);
	24: (61) r1 = *(u32 *)(r6 +30)
	; .ip4 = addr,
	25: (7b) *(u64 *)(r10 -32) = r9
	26: (63) *(u32 *)(r10 -36) = r7
	last_idx 26 first_idx 23
	regs=80 stack=0 before 25: (7b) *(u64 *)(r10 -32) = r9
	regs=80 stack=0 before 24: (61) r1 = *(u32 *)(r6 +30)
	regs=80 stack=0 before 23: (bf) r8 = r0
	 R0_rw=map_value_or_null(id=1,off=0,ks=20,vs=48,imm=0) R6_rw=pkt(id=0,off=0,r=34,imm=0) R7_rw=invP0 R9_rw=invP0 R10=fp0 fp-32=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-96_w=ctx
	parent didn't have regs=80 stack=0 marks
	last_idx 22 first_idx 0
	regs=80 stack=0 before 22: (85) call bpf_map_lookup_elem#1
	regs=80 stack=0 before 20: (18) r1 = 0xffff700159c9b400
	regs=80 stack=0 before 19: (07) r2 += -48
	regs=80 stack=0 before 18: (bf) r2 = r10
	regs=80 stack=0 before 17: (73) *(u8 *)(r10 -32) = r1
	regs=80 stack=0 before 16: (b4) w1 = 1
	regs=80 stack=0 before 15: (63) *(u32 *)(r10 -48) = r1
	regs=80 stack=0 before 14: (63) *(u32 *)(r10 -44) = r9
	regs=80 stack=0 before 13: (63) *(u32 *)(r10 -40) = r9
	regs=80 stack=0 before 12: (63) *(u32 *)(r10 -36) = r9
	regs=80 stack=0 before 11: (63) *(u32 *)(r10 -32) = r9
	regs=80 stack=0 before 10: (b7) r9 = 0
	regs=80 stack=0 before 9: (61) r1 = *(u32 *)(r6 +26)
	regs=80 stack=0 before 8: (2d) if r2 > r1 goto pc+224
	regs=80 stack=0 before 7: (7b) *(u64 *)(r10 -96) = r5
	regs=80 stack=0 before 6: (07) r2 += 34
	regs=80 stack=0 before 5: (bf) r2 = r6
	regs=80 stack=0 before 4: (61) r6 = *(u32 *)(r5 +76)
	regs=80 stack=0 before 3: (61) r1 = *(u32 *)(r5 +80)
	regs=80 stack=0 before 2: (63) *(u32 *)(r5 +52) = r7
	regs=80 stack=0 before 1: (b4) w7 = 0
	27: (63) *(u32 *)(r10 -40) = r1
	28: (18) r1 = 0x100000000000040
	; .lpm_key = { IPCACHE_PREFIX_LEN(prefix), {} },
	30: (7b) *(u64 *)(r10 -48) = r1
	31: (bf) r2 = r10
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	32: (07) r2 += -48
	; return map_lookup_elem(map, &key);
	33: (18) r1 = 0xffff700104950c00
	35: (85) call bpf_map_lookup_elem#1
	36: (79) r5 = *(u64 *)(r10 -96)
	; if (local_ep) {
	37: (15) if r8 == 0x0 goto pc+195
	 R0_w=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8_w=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=invP0 R10=fp0 fp-32_w=mmmmmmmm fp-40=mmmmmmmm fp-48_w=mmmmmmmm fp-96=ctx
	; .daddr = ip4->daddr,
	38: (61) r1 = *(u32 *)(r6 +30)
	; struct ipv4_ct_tuple tuple = {
	39: (63) *(u32 *)(r10 -88) = r1
	; .saddr = ip4->saddr
	40: (61) r1 = *(u32 *)(r6 +26)
	; struct ipv4_ct_tuple tuple = {
	41: (63) *(u32 *)(r10 -84) = r1
	42: (b4) w2 = 0
	43: (63) *(u32 *)(r10 -80) = r2
	last_idx 43 first_idx 23
	regs=4 stack=0 before 42: (b4) w2 = 0
	; .nexthdr = ip4->protocol,
	44: (71) r1 = *(u8 *)(r6 +23)
	; struct ipv4_ct_tuple tuple = {
	45: (73) *(u8 *)(r10 -75) = r2
	;
	46: (18) r3 = 0xffff7001044a2800
	48: (16) if w1 == 0x6 goto pc+2
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=invP0 R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0?0000 fp-88=mmmmmmmm fp-96=ctx
	49: (18) r3 = 0xffff7000ef1d5000
	; struct ipv4_ct_tuple tuple = {
	51: (73) *(u8 *)(r10 -76) = r1
	; return ip4->ihl * 4;
	52: (71) r9 = *(u8 *)(r6 +14)
	; return ip4->ihl * 4;
	53: (64) w9 <<= 2
	54: (54) w9 &= 60
	; ct_is_reply4(get_ct_map4(&tuple), ctx, ETH_HLEN +
	55: (04) w9 += 14
	; switch (tuple->nexthdr) {
	56: (16) if w1 == 0x11 goto pc+38
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9_w=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	57: (16) if w1 == 0x6 goto pc+37
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	58: (56) if w1 != 0x1 goto pc+174
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv1 R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	59: (bf) r6 = r3
	60: (b4) w1 = 0
	; __be16 identifier = 0;
	61: (6b) *(u16 *)(r10 -48) = r1
	last_idx 61 first_idx 57
	regs=2 stack=0 before 60: (b4) w1 = 0
	62: (bf) r3 = r10
	;
	63: (07) r3 += -72
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	64: (bf) r1 = r5
	65: (bc) w2 = w9
	66: (b4) w4 = 1
	67: (85) call bpf_skb_load_bytes#26
	last_idx 67 first_idx 57
	regs=10 stack=0 before 66: (b4) w4 = 1
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	68: (c6) if w0 s< 0x0 goto pc+163
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	69: (71) r3 = *(u8 *)(r10 -72)
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	70: (bc) w2 = w3
	71: (44) w2 |= 8
	72: (79) r1 = *(u64 *)(r10 -96)
	73: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=ctx(id=0,off=0,imm=0) R2_w=inv(id=0,umin_value=8,umax_value=255,var_off=(0x8; 0xf7)) R3_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	74: (05) goto pc+8
	; switch (type) {
	83: (b4) w2 = 0
	; tuple->dport = 0;
	84: (63) *(u32 *)(r10 -80) = r2
	last_idx 84 first_idx 68
	regs=4 stack=0 before 83: (b4) w2 = 0
	; switch (type) {
	85: (bf) r2 = r3
	86: (66) if w2 s> 0xa goto pc+46
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=ctx(id=0,off=0,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	87: (bf) r1 = r6
	88: (16) if w2 == 0x0 goto pc+51
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	89: (16) if w2 == 0x3 goto pc+46
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	90: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	91: (05) goto pc+135
	; if (err < 0)
	227: (b4) w2 = 1
	; tuple->flags = TUPLE_F_IN;
	228: (73) *(u8 *)(r10 -75) = r2
	229: (bf) r2 = r10
	;
	230: (07) r2 += -88
	; *is_reply = map_lookup_elem(map, tuple) != NULL;
	231: (85) call bpf_map_lookup_elem#1
	232: (79) r5 = *(u64 *)(r10 -96)
	233: (b7) r1 = 0
	; struct ipv4_ct_tuple tuple = {};
	234: (7b) *(u64 *)(r10 -88) = r1
	last_idx 234 first_idx 232
	regs=2 stack=0 before 233: (b7) r1 = 0
	235: (6b) *(u16 *)(r10 -76) = r7
	236: (63) *(u32 *)(r10 -80) = r7
	; return (void *)(unsigned long)ctx->data_end;
	237: (61) r2 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	238: (61) r8 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	239: (bf) r1 = r8
	240: (07) r1 += 34
	; if (data + tot_len > data_end)
	241: (2d) if r1 > r2 goto pc+251
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=pkt(id=0,off=34,r=34,imm=0) R2_w=pkt_end(id=0,off=0,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??000000 fp-88_w=00000000 fp-96=ctx
	242: (7b) *(u64 *)(r10 -104) = r2
	243: (b4) w7 = -158
	; return ip4->frag_off & bpf_htons(0x1FFF);
	244: (69) r6 = *(u16 *)(r8 +20)
	; tuple->nexthdr = ip4->protocol;
	245: (71) r1 = *(u8 *)(r8 +23)
	; tuple->nexthdr = ip4->protocol;
	246: (73) *(u8 *)(r10 -76) = r1
	; tuple->daddr = ip4->daddr;
	247: (61) r2 = *(u32 *)(r8 +30)
	; tuple->daddr = ip4->daddr;
	248: (63) *(u32 *)(r10 -88) = r2
	; tuple->saddr = ip4->saddr;
	249: (61) r3 = *(u32 *)(r8 +26)
	; tuple->saddr = ip4->saddr;
	250: (63) *(u32 *)(r10 -84) = r3
	; switch (tuple->nexthdr) {
	251: (16) if w1 == 0x1 goto pc+120
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5_w=ctx(id=0,off=0,imm=0) R6_w=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv4294967138 R8_w=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88_w=mmmmmmmm fp-96=ctx fp-104_w=pkt_end
	;
	252: (71) r7 = *(u8 *)(r8 +14)
	; switch (tuple->nexthdr) {
	253: (16) if w1 == 0x11 goto pc+1
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	254: (56) if w1 != 0x6 goto pc+29
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv6 R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; struct ipv4_frag_id frag_id = {
	255: (63) *(u32 *)(r10 -68) = r3
	256: (63) *(u32 *)(r10 -72) = r2
	; .id = ip4->id,
	257: (69) r2 = *(u16 *)(r8 +18)
	258: (b4) w3 = 0
	; struct ipv4_frag_id frag_id = {
	259: (73) *(u8 *)(r10 -61) = r3
	last_idx 259 first_idx 253
	regs=8 stack=0 before 258: (b4) w3 = 0
	260: (73) *(u8 *)(r10 -62) = r1
	261: (6b) *(u16 *)(r10 -64) = r2
	; return ip4->frag_off & bpf_htons(0x3FFF);
	262: (bc) w1 = w6
	263: (54) w1 &= 65343
	; if (unlikely(is_fragment)) {
	264: (16) if w1 == 0x0 goto pc+46
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=65343,var_off=(0x0; 0xff3f)) R2=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R3=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; return ctx->len;
	265: (61) r9 = *(u32 *)(r5 +0)
	266: (b7) r1 = 0
	; struct metrics_value *entry, new_entry = {};
	267: (7b) *(u64 *)(r10 -40) = r1
	last_idx 267 first_idx 264
	regs=2 stack=0 before 266: (b7) r1 = 0
	268: (7b) *(u64 *)(r10 -48) = r1
	269: (b7) r1 = 521
	; struct metrics_key key = {};
	270: (7b) *(u64 *)(r10 -56) = r1
	271: (bf) r2 = r10
	;
	272: (07) r2 += -56
	; entry = map_lookup_elem(&METRICS_MAP, &key);
	273: (18) r1 = 0xffff7000ac846c00
	275: (85) call bpf_map_lookup_elem#1
	; if (entry) {
	276: (15) if r0 == 0x0 goto pc+9
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; entry->count += 1;
	277: (79) r1 = *(u64 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	278: (07) r1 += 1
	279: (7b) *(u64 *)(r0 +0) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; entry->bytes += bytes;
	280: (79) r1 = *(u64 *)(r0 +8)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	281: (0f) r1 += r9
	282: (7b) *(u64 *)(r0 +8) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	283: (05) goto pc+13
	; return ip4->frag_off & bpf_htons(0x1FFF);
	297: (69) r1 = *(u16 *)(r8 +20)
	; return ip4->frag_off & bpf_htons(0x1FFF);
	298: (54) w1 &= 65311
	299: (79) r5 = *(u64 *)(r10 -96)
	; if (likely(not_first_fragment))
	300: (16) if w1 == 0x0 goto pc+10
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0,umax_value=65311,var_off=(0x0; 0xff1f)) R5_w=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	301: (bf) r2 = r10
	;
	302: (07) r2 += -72
	; tmp = map_lookup_elem(&IPV4_FRAG_DATAGRAMS_MAP, frag_id);
	303: (18) r1 = 0xffff7001044a2400
	305: (85) call bpf_map_lookup_elem#1
	; if (!tmp)
	306: (55) if r0 != 0x0 goto pc+637
	
	from 306 to 944: R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; case  4: __it_mob(d, s, 32);
	944: (61) r1 = *(u32 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	945: (63) *(u32 *)(r10 -80) = r1
	946: (05) goto pc-577
	; map_update_elem(&METRICS_MAP, &key, &new_entry, 0);
	370: (79) r5 = *(u64 *)(r10 -96)
	371: (b4) w7 = 0
	372: (54) w6 &= -225
	373: (b4) w1 = 1
	; if (IS_ERR(ret)) goto skip_crab;
	374: (16) if w7 == 0x2 goto pc+1
	last_idx 374 first_idx 306
	regs=80 stack=0 before 373: (b4) w1 = 1
	regs=80 stack=0 before 372: (54) w6 &= -225
	regs=80 stack=0 before 371: (b4) w7 = 0
	375: (b4) w1 = 0
	; return ip4->frag_off & bpf_htons(0x1FFF);
	376: (54) w6 &= 65535
	377: (79) r0 = *(u64 *)(r10 -104)
	; if (IS_ERR(ret)) goto skip_crab;
	378: (56) if w6 != 0x0 goto pc+114
	 R0_w=pkt_end(id=0,off=0,imm=0) R1=inv0 R5=ctx(id=0,off=0,imm=0) R6_w=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	;
	379: (bc) w2 = w7
	380: (74) w2 >>= 31
	381: (4c) w2 |= w1
	; if (IS_ERR(ret)) goto skip_crab;
	382: (56) if w2 != 0x0 goto pc+110
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	383: (71) r1 = *(u8 *)(r8 +23)
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	384: (56) if w1 != 0x6 goto pc+108
	 R0=pkt_end(id=0,off=0,imm=0) R1=inv6 R2=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	385: (07) r8 += 14
	; return ip4->ihl * 4;
	386: (71) r1 = *(u8 *)(r8 +0)
	; return ip4->ihl * 4;
	387: (64) w1 <<= 2
	388: (57) r1 &= 60
	; tcph = (struct tcphdr *)((void*)ip4 + ipv4_hdrlen(ip4));
	389: (0f) r8 += r1
	last_idx 389 first_idx 384
	regs=2 stack=0 before 388: (57) r1 &= 60
	regs=2 stack=0 before 387: (64) w1 <<= 2
	regs=2 stack=0 before 386: (71) r1 = *(u8 *)(r8 +0)
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	390: (bf) r9 = r8
	391: (07) r9 += 20
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	392: (2d) if r9 > r0 goto pc+100
	 R0=pkt_end(id=0,off=0,imm=0) R1_w=invP(id=0,umax_value=60,var_off=(0x0; 0x3c)) R2=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	393: (b4) w2 = 15
	;
	394: (61) r1 = *(u32 *)(r5 +80)
	; offset = tcph->doff * 4;
	395: (69) r3 = *(u16 *)(r8 +12)
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	396: (74) w3 >>= 2
	397: (54) w3 &= 60
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	398: (04) w3 += -20
	399: (05) goto pc+5
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=inv(id=0,umax_value=252,var_off=(0x0; 0xfc)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	last_idx 404 first_idx 464
	regs=4 stack=0 before 403: (04) w2 += -1
	regs=4 stack=0 before 402: (79) r5 = *(u64 *)(r10 -96)
	regs=4 stack=0 before 467: (05) goto pc-66
	regs=4 stack=0 before 466: (1c) w3 -= w4
	regs=4 stack=0 before 465: (0f) r9 += r4
	regs=4 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=8,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_r=pkt(id=8,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 451 first_idx 433
	regs=4 stack=0 before 451: (bd) if r4 <= r1 goto pc+12
	regs=4 stack=0 before 450: (07) r4 += 2
	regs=4 stack=0 before 449: (bf) r4 = r9
	regs=4 stack=0 before 436: (56) if w5 != 0x0 goto pc+12
	regs=4 stack=0 before 435: (16) if w5 == 0x2d goto pc+265
	regs=4 stack=0 before 434: (16) if w5 == 0x1 goto pc-35
	regs=4 stack=0 before 433: (71) r5 = *(u8 *)(r9 +0)
	 R0=pkt_end(id=0,off=0,imm=0) R1_r=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7_r=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9_r=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32_r=mmmmmmmm fp-40=00000000 fp-48_r=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104_r=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 421 first_idx 405
	regs=4 stack=0 before 421: (bd) if r4 <= r1 goto pc+11
	regs=4 stack=0 before 420: (07) r4 += 1
	regs=4 stack=0 before 419: (bf) r4 = r9
	regs=4 stack=0 before 407: (56) if w4 != 0x0 goto pc+11
	regs=4 stack=0 before 406: (54) w4 &= 255
	regs=4 stack=0 before 405: (bc) w4 = w3
	 R0=pkt_end(id=0,off=0,imm=0) R1_rw=pkt_end(id=0,off=0,imm=0) R2_rw=invP15 R3_rw=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R5_r=ctx(id=0,off=0,imm=0) R6=inv0 R7_r=invP0 R8_w=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_rw=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32_r=mmmmmmmm fp-40=00000000 fp-48_r=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104_r=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 399 first_idx 384
	regs=4 stack=0 before 399: (05) goto pc+5
	regs=4 stack=0 before 398: (04) w3 += -20
	regs=4 stack=0 before 397: (54) w3 &= 60
	regs=4 stack=0 before 396: (74) w3 >>= 2
	regs=4 stack=0 before 395: (69) r3 = *(u16 *)(r8 +12)
	regs=4 stack=0 before 394: (61) r1 = *(u32 *)(r5 +80)
	regs=4 stack=0 before 393: (b4) w2 = 15
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=0,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=19,off=36,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 449
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=0,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=36,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 451
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=0,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=36,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=0,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=36,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=0,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=36,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 419
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=0,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP9 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4=pkt(id=24,off=36,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=24,off=34,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=0,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=36,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=0,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=36,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=26,off=34,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=0,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=36,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=0,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=36,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 419
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=0,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP4 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4=pkt(id=29,off=36,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=29,off=34,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=0,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=36,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=0,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=36,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=31,off=34,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=0,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	
	from 435 to 701: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP1 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=inv45 R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	701: (bf) r2 = r9
	702: (07) r2 += 20
	703: (79) r5 = *(u64 *)(r10 -96)
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	704: (2d) if r2 > r0 goto pc-212
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=32,off=54,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	705: (71) r2 = *(u8 *)(r9 +18)
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	706: (56) if w2 != 0x0 goto pc+130
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=inv0 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	707: (b4) w7 = -134
	; return (void *)(unsigned long)ctx->data;
	708: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	709: (bf) r3 = r2
	710: (07) r3 += 34
	; if (data + tot_len > data_end)
	711: (2d) if r3 > r1 goto pc-219
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=pkt(id=0,off=0,r=34,imm=0) R3=pkt(id=0,off=34,r=34,imm=0) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=inv4294967162 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; masquerade_ip = ip4->saddr;
	712: (61) r1 = *(u32 *)(r2 +26)
	; masquerade_ip = ip4->saddr;
	713: (63) *(u32 *)(r10 -72) = r1
	; return ip4->ihl * 4;
	714: (71) r2 = *(u8 *)(r2 +14)
	; return ip4->ihl * 4;
	715: (64) w2 <<= 2
	716: (54) w2 &= 60
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	717: (04) w2 += 44
	718: (bf) r3 = r10
	; masquerade_ip = ip4->saddr;
	719: (07) r3 += -72
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	720: (bf) r1 = r5
	721: (b4) w4 = 4
	722: (b4) w5 = 0
	723: (85) call bpf_skb_store_bytes#9
	last_idx 723 first_idx 711
	regs=10 stack=0 before 722: (b4) w5 = 0
	regs=10 stack=0 before 721: (b4) w4 = 4
	724: (79) r5 = *(u64 *)(r10 -96)
	725: (b4) w7 = -141
	; if (ret < 0) return DROP_WRITE_ERROR;
	726: (c6) if w0 s< 0x0 goto pc-234
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7_w=inv4294967155 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	; return ctx->len;
	727: (61) r1 = *(u32 *)(r5 +0)
	; __u64 cap_len = min_t(__u64, monitor ? : TRACE_PAYLOAD_LEN,
	728: (bf) r3 = r1
	729: (a6) if w1 < 0x80 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=inv(id=34,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=34,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7_w=inv4294967155 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	730: (b7) r3 = 128
	731: (b7) r2 = 0
	; __notify_common_hdr(CILIUM_NOTIFY_TRACE, obs_point),
	732: (61) r4 = *(u32 *)(r5 +68)
	; msg = (typeof(msg)) {
	733: (73) *(u8 *)(r10 -14) = r2
	last_idx 733 first_idx 724
	regs=4 stack=0 before 732: (61) r4 = *(u32 *)(r5 +68)
	regs=4 stack=0 before 731: (b7) r2 = 0
	734: (73) *(u8 *)(r10 -15) = r2
	735: (73) *(u8 *)(r10 -16) = r2
	736: (73) *(u8 *)(r10 -17) = r2
	737: (73) *(u8 *)(r10 -18) = r2
	738: (73) *(u8 *)(r10 -19) = r2
	739: (73) *(u8 *)(r10 -20) = r2
	740: (73) *(u8 *)(r10 -6) = r2
	741: (73) *(u8 *)(r10 -7) = r2
	742: (73) *(u8 *)(r10 -8) = r2
	743: (73) *(u8 *)(r10 -9) = r2
	744: (73) *(u8 *)(r10 -10) = r2
	745: (73) *(u8 *)(r10 -11) = r2
	746: (73) *(u8 *)(r10 -12) = r2
	747: (73) *(u8 *)(r10 -13) = r2
	748: (b4) w2 = 327680
	749: (63) *(u32 *)(r10 -24) = r2
	750: (18) r2 = 0x246c
	752: (63) *(u32 *)(r10 -32) = r2
	753: (b4) w2 = 1
	754: (6b) *(u16 *)(r10 -34) = r2
	755: (63) *(u32 *)(r10 -40) = r1
	756: (63) *(u32 *)(r10 -44) = r4
	757: (b4) w1 = 1284
	758: (6b) *(u16 *)(r10 -48) = r1
	759: (6b) *(u16 *)(r10 -36) = r3
	760: (b4) w6 = 0
	761: (73) *(u8 *)(r10 -2) = r6
	last_idx 761 first_idx 724
	regs=40 stack=0 before 760: (b4) w6 = 0
	762: (73) *(u8 *)(r10 -3) = r6
	763: (73) *(u8 *)(r10 -4) = r6
	764: (73) *(u8 *)(r10 -5) = r6
	765: (63) *(u32 *)(r10 -28) = r6
	766: (18) r7 = 0x4ad
	768: (6b) *(u16 *)(r10 -46) = r7
	769: (73) *(u8 *)(r10 -1) = r6
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	770: (67) r3 <<= 32
	771: (18) r1 = 0xffffffff
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	773: (4f) r3 |= r1
	774: (bf) r4 = r10
	;
	775: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP,
	776: (bf) r1 = r5
	777: (18) r2 = 0xffff7000722cc800
	779: (b4) w5 = 48
	780: (85) call bpf_perf_event_output#25
	last_idx 780 first_idx 724
	regs=20 stack=0 before 779: (b4) w5 = 48
	781: (b4) w1 = 2
	; struct debug_msg msg = {
	782: (6b) *(u16 *)(r10 -48) = r1
	783: (6b) *(u16 *)(r10 -46) = r7
	784: (b4) w1 = 50
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	785: (79) r2 = *(u64 *)(r10 -96)
	786: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	787: (63) *(u32 *)(r10 -32) = r1
	788: (18) r1 = 0x3200000032
	790: (7b) *(u64 *)(r10 -40) = r1
	791: (63) *(u32 *)(r10 -44) = r2
	792: (bf) r4 = r10
	;
	793: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	794: (79) r1 = *(u64 *)(r10 -96)
	795: (18) r2 = 0xffff7000722cc800
	797: (18) r3 = 0xffffffff
	799: (b4) w5 = 20
	800: (85) call bpf_perf_event_output#25
	last_idx 800 first_idx 781
	regs=20 stack=0 before 799: (b4) w5 = 20
	; cilium_dbg3(ctx, DBG_CT_LOOKUP4_1, masquerade_ip, masquerade_ip,
	801: (61) r1 = *(u32 *)(r10 -72)
	; struct debug_msg msg = {
	802: (6b) *(u16 *)(r10 -46) = r7
	803: (b4) w2 = 12290
	804: (6b) *(u16 *)(r10 -48) = r2
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	805: (79) r2 = *(u64 *)(r10 -96)
	806: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	807: (63) *(u32 *)(r10 -32) = r6
	808: (63) *(u32 *)(r10 -36) = r1
	809: (63) *(u32 *)(r10 -40) = r1
	810: (63) *(u32 *)(r10 -44) = r2
	811: (bf) r4 = r10
	;
	812: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	813: (79) r1 = *(u64 *)(r10 -96)
	814: (18) r2 = 0xffff7000722cc800
	816: (18) r3 = 0xffffffff
	818: (b4) w5 = 20
	819: (85) call bpf_perf_event_output#25
	last_idx 819 first_idx 781
	regs=20 stack=0 before 818: (b4) w5 = 20
	820: (79) r5 = *(u64 *)(r10 -96)
	; return (void *)(unsigned long)ctx->data_end;
	821: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	822: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	823: (07) r2 += 34
	824: (b4) w7 = -134
	; if (data + tot_len > data_end)
	825: (2d) if r2 > r1 goto pc-333
	 R0=inv(id=0) R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=invP0 R7_w=inv4294967162 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmmmmmm fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	; &redir_opt->ip1, 4, 0);
	826: (07) r9 += 2
	; ret = ctx_store_bytes(ctx, ETH_HLEN + offsetof(struct iphdr, saddr),
	827: (bf) r1 = r5
	828: (b4) w2 = 26
	829: (bf) r3 = r9
	830: (b4) w4 = 4
	831: (b4) w5 = 0
	832: (85) call bpf_skb_store_bytes#9
	R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf
	processed 1623 insns (limit 1000000) max_states_per_insn 3 total_states 55 peak_states 55 mark_read 27
level=warning msg="JoinEP: Failed to attach program(s)" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" file-path=1197_next/bpf_lxc.o identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=datapath-loader veth=lxc102a8ca64051
level=error msg="Error while rewriting endpoint BPF program" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Reverting endpoint changes after BPF regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Reverting proxy redirect removals" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Finished reverting proxy redirect removals" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Reverting xDS network policy update" subsys=envoy-manager
level=debug msg="preparing new cache transaction: upserting 0 entries, deleting 1 entries" subsys=xds xdsCachedVersion=7 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="deleting resource from cache" subsys=xds xdsCachedVersion=7 xdsResourceName=1197 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="committing cache transaction and notifying of new version" subsys=xds xdsCachedVersion=7 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="Finished reverting xDS network policy update" subsys=envoy-manager
level=debug msg="Reverting proxy redirect additions" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Finished reverting proxy redirect additions" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Finished reverting endpoint changes after BPF regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=info msg="Wrote verifier log to endpoint directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 file-path=1197_next/verifier.log identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=info msg="generating BPF for endpoint failed, keeping stale directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" file-path=1197_next_fail identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="removing directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 directory=1197_next_fail endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="removing directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 directory=1197_next endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Completed endpoint regeneration with no pending regeneration requests" code=OK containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=ready identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=0
level=warning msg="Regeneration of endpoint failed" bpfCompilation=0s bpfLoadProg=225.592584ms bpfWaitForELF=433.280542ms bpfWriteELF=2.204875ms containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh mapSync="66.417µs" policyCalculation="152.292µs" prepareBuild="370.042µs" proxyConfiguration="7.125µs" proxyPolicyCalculation="105.584µs" proxyWaitForAck=0s reason="updated security labels" subsys=endpoint total=667.54825ms waitingForCTClean="681.458µs" waitingForLock=875ns
level=debug msg="Error regenerating endpoint: loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" code=Failure containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=ready identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=200
level=debug msg="EventQueue event processing statistics" eventConsumeOffQueueWaitTime="59.292µs" eventEnqueueWaitTime=791ns eventHandlingDuration=667.957958ms eventType="*endpoint.EndpointRegenerationEvent" name=endpoint-1197 subsys=eventqueue
level=error msg="endpoint regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="received signal that regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Triggering endpoint regeneration due to retrying regeneration" code=OK containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=waiting-to-regenerate identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=0
level=debug msg="Dequeued endpoint from build queue" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Regenerating endpoint" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh reason="retrying regeneration" startTime="2023-07-12 21:56:48.238416633 +0000 UTC m=+11.602327006" subsys=endpoint
level=debug msg="Regenerating endpoint: retrying regeneration" code=OK containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=regenerating identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=0
level=debug msg="removing directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 directory=1197_next endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Starting policy recalculation..." containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Skipping unnecessary endpoint policy recalculation" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyChanged=true policyRevision.next=1 policyRevision.repo=1 subsys=endpoint
level=debug msg="preparing new cache transaction: upserting 1 entries, deleting 0 entries" subsys=xds xdsCachedVersion=8 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="inserting resource into cache" subsys=xds xdsCachedVersion=8 xdsResourceName=1197 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="committing cache transaction and notifying of new version" subsys=xds xdsCachedVersion=8 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="BPF header file hashed (was: \"\")" bpfHeaderfileHash=7893731b6685475dfe5360e1b8a61cf84c83a2bf5f9ee995962246f1092743d5 containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="writing header file" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 file-path=1197_next/ep_config.h identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="writing header file with DNSRules" DNSRules="map[]" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 file-path=1197_next/ep_config.h identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Preparing to compile BPF" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh regeneration-level=rewrite+load subsys=endpoint
level=debug msg="Load 1-min: 6.54 5-min: 2.69 15min: 2.09" endpointID=1197 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2543 (64.66%) Free: 72 Buffers: 11 Cached: 1305" endpointID=1197 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1023 (100.00%) Free: 0" endpointID=1197 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 4.83% MEM: 2.15% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 84 VMS: 785 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=1197 subsys=endpoint
level=debug msg="NAME clang STATUS [running] PID 328 CPU: 20.37% MEM: 1.47% CMDLINE: clang -emit-llvm -g -O2 -target bpf -std=gnu89 -nostdinc -D__NR_CPUS__=5 -Wall -Wextra -Werror -Wshadow -Wno-address-of-packed-member -Wno-unknown-warning-option -Wno-gnu-variable-sized-type-not-at-end -Wdeclaration-after-statement -Wimplicit-int-conversion -Wenum-conversion -I/var/run/cilium/state/globals -I/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e -I/var/lib/cilium/bpf -I/var/lib/cilium/bpf/include -c /var/lib/cilium/bpf/bpf_host.c -o - MEM-EXT: RSS: 57 VMS: 92 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=1197 subsys=endpoint
level=debug msg="Found variable with offset 107972" subsys=elf symbol=LXC_ID
level=debug msg="Found variable with offset 107968" subsys=elf symbol=LXC_IPV4
level=debug msg="Found variable with offset 107952" subsys=elf symbol=LXC_IP_1
level=debug msg="Found variable with offset 107956" subsys=elf symbol=LXC_IP_2
level=debug msg="Found variable with offset 107960" subsys=elf symbol=LXC_IP_3
level=debug msg="Found variable with offset 107964" subsys=elf symbol=LXC_IP_4
level=debug msg="Found variable with offset 107976" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 107980" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 107992" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 107984" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 107988" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 30" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_container" subsys=elf
level=debug msg="Skipping cil_to_container" subsys=elf
level=debug msg="Found symbol with offset 1017016" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1016648" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1020451" subsys=elf symbol=cilium_calls_65535
level=debug msg="Found symbol with offset 1017110" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1017088" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1017209" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1016781" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1017275" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1016842" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1016609" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1021710" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1017366" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1017153" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1016758" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1022539" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1017290" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1017128" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1017314" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1016902" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1017032" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1020852" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1020431" subsys=elf symbol=cilium_policy_65535
level=debug msg="Found symbol with offset 1017174" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1016869" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1017064" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1020827" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping handle_policy" subsys=elf
level=debug msg="Skipping tail_handle_arp" subsys=elf
level=debug msg="Skipping tail_handle_ipv4" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_cont" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_ipv4_ct_egress" subsys=elf
level=debug msg="Skipping tail_ipv4_ct_ingress" subsys=elf
level=debug msg="Skipping tail_ipv4_to_endpoint" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1016705" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1016888" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1016968" subsys=elf symbol=to-container
level=debug msg="Found section with offset 1016985" subsys=elf symbol=from-container
level=debug msg="Found section with offset 1017052" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1017200" subsys=elf symbol=1/0xffff
level=debug msg="Found section with offset 1017246" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1017262" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1017329" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1017427" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1017875" subsys=elf symbol=2/29
level=debug msg="Found section with offset 1018439" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1019240" subsys=elf symbol=2/27
level=debug msg="Found section with offset 1019321" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1019367" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1020020" subsys=elf symbol=2/6
level=debug msg="Found section with offset 1020628" subsys=elf symbol=2/25
level=debug msg="Found section with offset 1022452" subsys=elf symbol=2/13
level=debug msg="Found section with offset 1023900" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=1197_next/bpf_lxc.o subsys=elf template-path=/var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69/bpf_lxc.o
level=debug msg="Loading CollectionSpec from ELF" device=lxc102a8ca64051 ifindex=9 objPath=1197_next/bpf_lxc.o subsys=datapath-loader
level=debug msg="Loading Collection into kernel" device=lxc102a8ca64051 ifindex=9 objPath=1197_next/bpf_lxc.o subsys=datapath-loader
Verifier error: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)
Verifier log: load program: permission denied:
	btf_vmlinux is malformed
	R1 type=ctx expected=fp
	; int tail_handle_snat_fwd_ipv4(struct __ctx_buff *ctx)
	0: (bf) r5 = r1
	1: (b4) w7 = 0
	; ctx->cb[off] = data;
	2: (63) *(u32 *)(r5 +52) = r7
	; return (void *)(unsigned long)ctx->data_end;
	3: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	4: (61) r6 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	5: (bf) r2 = r6
	6: (07) r2 += 34
	7: (7b) *(u64 *)(r10 -96) = r5
	; if (data + tot_len > data_end)
	8: (2d) if r2 > r1 goto pc+224
	 R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R10=fp0 fp-96_w=ctx
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	9: (61) r1 = *(u32 *)(r6 +26)
	10: (b7) r9 = 0
	; struct endpoint_key key = {};
	11: (63) *(u32 *)(r10 -32) = r9
	last_idx 11 first_idx 0
	regs=200 stack=0 before 10: (b7) r9 = 0
	12: (63) *(u32 *)(r10 -36) = r9
	13: (63) *(u32 *)(r10 -40) = r9
	14: (63) *(u32 *)(r10 -44) = r9
	; key.ip4 = ip;
	15: (63) *(u32 *)(r10 -48) = r1
	16: (b4) w1 = 1
	; key.family = ENDPOINT_KEY_IPV4;
	17: (73) *(u8 *)(r10 -32) = r1
	18: (bf) r2 = r10
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	19: (07) r2 += -48
	; return map_lookup_elem(&ENDPOINTS_MAP, &key);
	20: (18) r1 = 0xffff700159c9b400
	22: (85) call bpf_map_lookup_elem#1
	23: (bf) r8 = r0
	; remote_ep = lookup_ip4_remote_endpoint(ip4->daddr, 0);
	24: (61) r1 = *(u32 *)(r6 +30)
	; .ip4 = addr,
	25: (7b) *(u64 *)(r10 -32) = r9
	26: (63) *(u32 *)(r10 -36) = r7
	last_idx 26 first_idx 23
	regs=80 stack=0 before 25: (7b) *(u64 *)(r10 -32) = r9
	regs=80 stack=0 before 24: (61) r1 = *(u32 *)(r6 +30)
	regs=80 stack=0 before 23: (bf) r8 = r0
	 R0_rw=map_value_or_null(id=1,off=0,ks=20,vs=48,imm=0) R6_rw=pkt(id=0,off=0,r=34,imm=0) R7_rw=invP0 R9_rw=invP0 R10=fp0 fp-32=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-96_w=ctx
	parent didn't have regs=80 stack=0 marks
	last_idx 22 first_idx 0
	regs=80 stack=0 before 22: (85) call bpf_map_lookup_elem#1
	regs=80 stack=0 before 20: (18) r1 = 0xffff700159c9b400
	regs=80 stack=0 before 19: (07) r2 += -48
	regs=80 stack=0 before 18: (bf) r2 = r10
	regs=80 stack=0 before 17: (73) *(u8 *)(r10 -32) = r1
	regs=80 stack=0 before 16: (b4) w1 = 1
	regs=80 stack=0 before 15: (63) *(u32 *)(r10 -48) = r1
	regs=80 stack=0 before 14: (63) *(u32 *)(r10 -44) = r9
	regs=80 stack=0 before 13: (63) *(u32 *)(r10 -40) = r9
	regs=80 stack=0 before 12: (63) *(u32 *)(r10 -36) = r9
	regs=80 stack=0 before 11: (63) *(u32 *)(r10 -32) = r9
	regs=80 stack=0 before 10: (b7) r9 = 0
	regs=80 stack=0 before 9: (61) r1 = *(u32 *)(r6 +26)
	regs=80 stack=0 before 8: (2d) if r2 > r1 goto pc+224
	regs=80 stack=0 before 7: (7b) *(u64 *)(r10 -96) = r5
	regs=80 stack=0 before 6: (07) r2 += 34
	regs=80 stack=0 before 5: (bf) r2 = r6
	regs=80 stack=0 before 4: (61) r6 = *(u32 *)(r5 +76)
	regs=80 stack=0 before 3: (61) r1 = *(u32 *)(r5 +80)
	regs=80 stack=0 before 2: (63) *(u32 *)(r5 +52) = r7
	regs=80 stack=0 before 1: (b4) w7 = 0
	27: (63) *(u32 *)(r10 -40) = r1
	28: (18) r1 = 0x100000000000040
	; .lpm_key = { IPCACHE_PREFIX_LEN(prefix), {} },
	30: (7b) *(u64 *)(r10 -48) = r1
	31: (bf) r2 = r10
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	32: (07) r2 += -48
	; return map_lookup_elem(map, &key);
	33: (18) r1 = 0xffff700104950c00
	35: (85) call bpf_map_lookup_elem#1
	36: (79) r5 = *(u64 *)(r10 -96)
	; if (local_ep) {
	37: (15) if r8 == 0x0 goto pc+195
	 R0_w=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8_w=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=invP0 R10=fp0 fp-32_w=mmmmmmmm fp-40=mmmmmmmm fp-48_w=mmmmmmmm fp-96=ctx
	; .daddr = ip4->daddr,
	38: (61) r1 = *(u32 *)(r6 +30)
	; struct ipv4_ct_tuple tuple = {
	39: (63) *(u32 *)(r10 -88) = r1
	; .saddr = ip4->saddr
	40: (61) r1 = *(u32 *)(r6 +26)
	; struct ipv4_ct_tuple tuple = {
	41: (63) *(u32 *)(r10 -84) = r1
	42: (b4) w2 = 0
	43: (63) *(u32 *)(r10 -80) = r2
	last_idx 43 first_idx 23
	regs=4 stack=0 before 42: (b4) w2 = 0
	; .nexthdr = ip4->protocol,
	44: (71) r1 = *(u8 *)(r6 +23)
	; struct ipv4_ct_tuple tuple = {
	45: (73) *(u8 *)(r10 -75) = r2
	;
	46: (18) r3 = 0xffff7001044a2800
	48: (16) if w1 == 0x6 goto pc+2
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=invP0 R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0?0000 fp-88=mmmmmmmm fp-96=ctx
	49: (18) r3 = 0xffff7000ef1d5000
	; struct ipv4_ct_tuple tuple = {
	51: (73) *(u8 *)(r10 -76) = r1
	; return ip4->ihl * 4;
	52: (71) r9 = *(u8 *)(r6 +14)
	; return ip4->ihl * 4;
	53: (64) w9 <<= 2
	54: (54) w9 &= 60
	; ct_is_reply4(get_ct_map4(&tuple), ctx, ETH_HLEN +
	55: (04) w9 += 14
	; switch (tuple->nexthdr) {
	56: (16) if w1 == 0x11 goto pc+38
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9_w=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	57: (16) if w1 == 0x6 goto pc+37
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	58: (56) if w1 != 0x1 goto pc+174
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv1 R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	59: (bf) r6 = r3
	60: (b4) w1 = 0
	; __be16 identifier = 0;
	61: (6b) *(u16 *)(r10 -48) = r1
	last_idx 61 first_idx 57
	regs=2 stack=0 before 60: (b4) w1 = 0
	62: (bf) r3 = r10
	;
	63: (07) r3 += -72
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	64: (bf) r1 = r5
	65: (bc) w2 = w9
	66: (b4) w4 = 1
	67: (85) call bpf_skb_load_bytes#26
	last_idx 67 first_idx 57
	regs=10 stack=0 before 66: (b4) w4 = 1
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	68: (c6) if w0 s< 0x0 goto pc+163
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	69: (71) r3 = *(u8 *)(r10 -72)
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	70: (bc) w2 = w3
	71: (44) w2 |= 8
	72: (79) r1 = *(u64 *)(r10 -96)
	73: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=ctx(id=0,off=0,imm=0) R2_w=inv(id=0,umin_value=8,umax_value=255,var_off=(0x8; 0xf7)) R3_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	74: (05) goto pc+8
	; switch (type) {
	83: (b4) w2 = 0
	; tuple->dport = 0;
	84: (63) *(u32 *)(r10 -80) = r2
	last_idx 84 first_idx 68
	regs=4 stack=0 before 83: (b4) w2 = 0
	; switch (type) {
	85: (bf) r2 = r3
	86: (66) if w2 s> 0xa goto pc+46
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=ctx(id=0,off=0,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	87: (bf) r1 = r6
	88: (16) if w2 == 0x0 goto pc+51
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	89: (16) if w2 == 0x3 goto pc+46
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	90: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	91: (05) goto pc+135
	; if (err < 0)
	227: (b4) w2 = 1
	; tuple->flags = TUPLE_F_IN;
	228: (73) *(u8 *)(r10 -75) = r2
	229: (bf) r2 = r10
	;
	230: (07) r2 += -88
	; *is_reply = map_lookup_elem(map, tuple) != NULL;
	231: (85) call bpf_map_lookup_elem#1
	232: (79) r5 = *(u64 *)(r10 -96)
	233: (b7) r1 = 0
	; struct ipv4_ct_tuple tuple = {};
	234: (7b) *(u64 *)(r10 -88) = r1
	last_idx 234 first_idx 232
	regs=2 stack=0 before 233: (b7) r1 = 0
	235: (6b) *(u16 *)(r10 -76) = r7
	236: (63) *(u32 *)(r10 -80) = r7
	; return (void *)(unsigned long)ctx->data_end;
	237: (61) r2 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	238: (61) r8 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	239: (bf) r1 = r8
	240: (07) r1 += 34
	; if (data + tot_len > data_end)
	241: (2d) if r1 > r2 goto pc+251
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=pkt(id=0,off=34,r=34,imm=0) R2_w=pkt_end(id=0,off=0,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??000000 fp-88_w=00000000 fp-96=ctx
	242: (7b) *(u64 *)(r10 -104) = r2
	243: (b4) w7 = -158
	; return ip4->frag_off & bpf_htons(0x1FFF);
	244: (69) r6 = *(u16 *)(r8 +20)
	; tuple->nexthdr = ip4->protocol;
	245: (71) r1 = *(u8 *)(r8 +23)
	; tuple->nexthdr = ip4->protocol;
	246: (73) *(u8 *)(r10 -76) = r1
	; tuple->daddr = ip4->daddr;
	247: (61) r2 = *(u32 *)(r8 +30)
	; tuple->daddr = ip4->daddr;
	248: (63) *(u32 *)(r10 -88) = r2
	; tuple->saddr = ip4->saddr;
	249: (61) r3 = *(u32 *)(r8 +26)
	; tuple->saddr = ip4->saddr;
	250: (63) *(u32 *)(r10 -84) = r3
	; switch (tuple->nexthdr) {
	251: (16) if w1 == 0x1 goto pc+120
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5_w=ctx(id=0,off=0,imm=0) R6_w=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv4294967138 R8_w=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88_w=mmmmmmmm fp-96=ctx fp-104_w=pkt_end
	;
	252: (71) r7 = *(u8 *)(r8 +14)
	; switch (tuple->nexthdr) {
	253: (16) if w1 == 0x11 goto pc+1
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	254: (56) if w1 != 0x6 goto pc+29
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv6 R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; struct ipv4_frag_id frag_id = {
	255: (63) *(u32 *)(r10 -68) = r3
	256: (63) *(u32 *)(r10 -72) = r2
	; .id = ip4->id,
	257: (69) r2 = *(u16 *)(r8 +18)
	258: (b4) w3 = 0
	; struct ipv4_frag_id frag_id = {
	259: (73) *(u8 *)(r10 -61) = r3
	last_idx 259 first_idx 253
	regs=8 stack=0 before 258: (b4) w3 = 0
	260: (73) *(u8 *)(r10 -62) = r1
	261: (6b) *(u16 *)(r10 -64) = r2
	; return ip4->frag_off & bpf_htons(0x3FFF);
	262: (bc) w1 = w6
	263: (54) w1 &= 65343
	; if (unlikely(is_fragment)) {
	264: (16) if w1 == 0x0 goto pc+46
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=65343,var_off=(0x0; 0xff3f)) R2=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R3=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; return ctx->len;
	265: (61) r9 = *(u32 *)(r5 +0)
	266: (b7) r1 = 0
	; struct metrics_value *entry, new_entry = {};
	267: (7b) *(u64 *)(r10 -40) = r1
	last_idx 267 first_idx 264
	regs=2 stack=0 before 266: (b7) r1 = 0
	268: (7b) *(u64 *)(r10 -48) = r1
	269: (b7) r1 = 521
	; struct metrics_key key = {};
	270: (7b) *(u64 *)(r10 -56) = r1
	271: (bf) r2 = r10
	;
	272: (07) r2 += -56
	; entry = map_lookup_elem(&METRICS_MAP, &key);
	273: (18) r1 = 0xffff7000ac846c00
	275: (85) call bpf_map_lookup_elem#1
	; if (entry) {
	276: (15) if r0 == 0x0 goto pc+9
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; entry->count += 1;
	277: (79) r1 = *(u64 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	278: (07) r1 += 1
	279: (7b) *(u64 *)(r0 +0) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; entry->bytes += bytes;
	280: (79) r1 = *(u64 *)(r0 +8)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	281: (0f) r1 += r9
	282: (7b) *(u64 *)(r0 +8) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	283: (05) goto pc+13
	; return ip4->frag_off & bpf_htons(0x1FFF);
	297: (69) r1 = *(u16 *)(r8 +20)
	; return ip4->frag_off & bpf_htons(0x1FFF);
	298: (54) w1 &= 65311
	299: (79) r5 = *(u64 *)(r10 -96)
	; if (likely(not_first_fragment))
	300: (16) if w1 == 0x0 goto pc+10
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0,umax_value=65311,var_off=(0x0; 0xff1f)) R5_w=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	301: (bf) r2 = r10
	;
	302: (07) r2 += -72
	; tmp = map_lookup_elem(&IPV4_FRAG_DATAGRAMS_MAP, frag_id);
	303: (18) r1 = 0xffff7001044a2400
	305: (85) call bpf_map_lookup_elem#1
	; if (!tmp)
	306: (55) if r0 != 0x0 goto pc+637
	
	from 306 to 944: R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; case  4: __it_mob(d, s, 32);
	944: (61) r1 = *(u32 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	945: (63) *(u32 *)(r10 -80) = r1
	946: (05) goto pc-577
	; map_update_elem(&METRICS_MAP, &key, &new_entry, 0);
	370: (79) r5 = *(u64 *)(r10 -96)
	371: (b4) w7 = 0
	372: (54) w6 &= -225
	373: (b4) w1 = 1
	; if (IS_ERR(ret)) goto skip_crab;
	374: (16) if w7 == 0x2 goto pc+1
	last_idx 374 first_idx 306
	regs=80 stack=0 before 373: (b4) w1 = 1
	regs=80 stack=0 before 372: (54) w6 &= -225
	regs=80 stack=0 before 371: (b4) w7 = 0
	375: (b4) w1 = 0
	; return ip4->frag_off & bpf_htons(0x1FFF);
	376: (54) w6 &= 65535
	377: (79) r0 = *(u64 *)(r10 -104)
	; if (IS_ERR(ret)) goto skip_crab;
	378: (56) if w6 != 0x0 goto pc+114
	 R0_w=pkt_end(id=0,off=0,imm=0) R1=inv0 R5=ctx(id=0,off=0,imm=0) R6_w=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	;
	379: (bc) w2 = w7
	380: (74) w2 >>= 31
	381: (4c) w2 |= w1
	; if (IS_ERR(ret)) goto skip_crab;
	382: (56) if w2 != 0x0 goto pc+110
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	383: (71) r1 = *(u8 *)(r8 +23)
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	384: (56) if w1 != 0x6 goto pc+108
	 R0=pkt_end(id=0,off=0,imm=0) R1=inv6 R2=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	385: (07) r8 += 14
	; return ip4->ihl * 4;
	386: (71) r1 = *(u8 *)(r8 +0)
	; return ip4->ihl * 4;
	387: (64) w1 <<= 2
	388: (57) r1 &= 60
	; tcph = (struct tcphdr *)((void*)ip4 + ipv4_hdrlen(ip4));
	389: (0f) r8 += r1
	last_idx 389 first_idx 384
	regs=2 stack=0 before 388: (57) r1 &= 60
	regs=2 stack=0 before 387: (64) w1 <<= 2
	regs=2 stack=0 before 386: (71) r1 = *(u8 *)(r8 +0)
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	390: (bf) r9 = r8
	391: (07) r9 += 20
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	392: (2d) if r9 > r0 goto pc+100
	 R0=pkt_end(id=0,off=0,imm=0) R1_w=invP(id=0,umax_value=60,var_off=(0x0; 0x3c)) R2=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	393: (b4) w2 = 15
	;
	394: (61) r1 = *(u32 *)(r5 +80)
	; offset = tcph->doff * 4;
	395: (69) r3 = *(u16 *)(r8 +12)
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	396: (74) w3 >>= 2
	397: (54) w3 &= 60
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	398: (04) w3 += -20
	399: (05) goto pc+5
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=inv(id=0,umax_value=252,var_off=(0x0; 0xfc)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	last_idx 404 first_idx 464
	regs=4 stack=0 before 403: (04) w2 += -1
	regs=4 stack=0 before 402: (79) r5 = *(u64 *)(r10 -96)
	regs=4 stack=0 before 467: (05) goto pc-66
	regs=4 stack=0 before 466: (1c) w3 -= w4
	regs=4 stack=0 before 465: (0f) r9 += r4
	regs=4 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=8,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_r=pkt(id=8,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 451 first_idx 433
	regs=4 stack=0 before 451: (bd) if r4 <= r1 goto pc+12
	regs=4 stack=0 before 450: (07) r4 += 2
	regs=4 stack=0 before 449: (bf) r4 = r9
	regs=4 stack=0 before 436: (56) if w5 != 0x0 goto pc+12
	regs=4 stack=0 before 435: (16) if w5 == 0x2d goto pc+265
	regs=4 stack=0 before 434: (16) if w5 == 0x1 goto pc-35
	regs=4 stack=0 before 433: (71) r5 = *(u8 *)(r9 +0)
	 R0=pkt_end(id=0,off=0,imm=0) R1_r=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7_r=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9_r=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32_r=mmmmmmmm fp-40=00000000 fp-48_r=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104_r=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 421 first_idx 405
	regs=4 stack=0 before 421: (bd) if r4 <= r1 goto pc+11
	regs=4 stack=0 before 420: (07) r4 += 1
	regs=4 stack=0 before 419: (bf) r4 = r9
	regs=4 stack=0 before 407: (56) if w4 != 0x0 goto pc+11
	regs=4 stack=0 before 406: (54) w4 &= 255
	regs=4 stack=0 before 405: (bc) w4 = w3
	 R0=pkt_end(id=0,off=0,imm=0) R1_rw=pkt_end(id=0,off=0,imm=0) R2_rw=invP15 R3_rw=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R5_r=ctx(id=0,off=0,imm=0) R6=inv0 R7_r=invP0 R8_w=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_rw=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32_r=mmmmmmmm fp-40=00000000 fp-48_r=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104_r=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 399 first_idx 384
	regs=4 stack=0 before 399: (05) goto pc+5
	regs=4 stack=0 before 398: (04) w3 += -20
	regs=4 stack=0 before 397: (54) w3 &= 60
	regs=4 stack=0 before 396: (74) w3 >>= 2
	regs=4 stack=0 before 395: (69) r3 = *(u16 *)(r8 +12)
	regs=4 stack=0 before 394: (61) r1 = *(u32 *)(r5 +80)
	regs=4 stack=0 before 393: (b4) w2 = 15
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=0,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=19,off=36,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 449
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=0,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=36,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 451
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=0,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=36,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=0,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=36,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=0,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=36,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 419
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=0,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP9 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4=pkt(id=24,off=36,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=24,off=34,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=0,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=36,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=0,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=36,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=26,off=34,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=0,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=36,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=0,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=36,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 419
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=0,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP4 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4=pkt(id=29,off=36,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=29,off=34,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=0,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=36,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=0,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=36,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=31,off=34,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=0,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	
	from 435 to 701: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP1 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=inv45 R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	701: (bf) r2 = r9
	702: (07) r2 += 20
	703: (79) r5 = *(u64 *)(r10 -96)
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	704: (2d) if r2 > r0 goto pc-212
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=32,off=54,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	705: (71) r2 = *(u8 *)(r9 +18)
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	706: (56) if w2 != 0x0 goto pc+130
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=inv0 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	707: (b4) w7 = -134
	; return (void *)(unsigned long)ctx->data;
	708: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	709: (bf) r3 = r2
	710: (07) r3 += 34
	; if (data + tot_len > data_end)
	711: (2d) if r3 > r1 goto pc-219
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=pkt(id=0,off=0,r=34,imm=0) R3=pkt(id=0,off=34,r=34,imm=0) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=inv4294967162 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; masquerade_ip = ip4->saddr;
	712: (61) r1 = *(u32 *)(r2 +26)
	; masquerade_ip = ip4->saddr;
	713: (63) *(u32 *)(r10 -72) = r1
	; return ip4->ihl * 4;
	714: (71) r2 = *(u8 *)(r2 +14)
	; return ip4->ihl * 4;
	715: (64) w2 <<= 2
	716: (54) w2 &= 60
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	717: (04) w2 += 44
	718: (bf) r3 = r10
	; masquerade_ip = ip4->saddr;
	719: (07) r3 += -72
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	720: (bf) r1 = r5
	721: (b4) w4 = 4
	722: (b4) w5 = 0
	723: (85) call bpf_skb_store_bytes#9
	last_idx 723 first_idx 711
	regs=10 stack=0 before 722: (b4) w5 = 0
	regs=10 stack=0 before 721: (b4) w4 = 4
	724: (79) r5 = *(u64 *)(r10 -96)
	725: (b4) w7 = -141
	; if (ret < 0) return DROP_WRITE_ERROR;
	726: (c6) if w0 s< 0x0 goto pc-234
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7_w=inv4294967155 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	; return ctx->len;
	727: (61) r1 = *(u32 *)(r5 +0)
	; __u64 cap_len = min_t(__u64, monitor ? : TRACE_PAYLOAD_LEN,
	728: (bf) r3 = r1
	729: (a6) if w1 < 0x80 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=inv(id=34,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=34,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7_w=inv4294967155 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	730: (b7) r3 = 128
	731: (b7) r2 = 0
	; __notify_common_hdr(CILIUM_NOTIFY_TRACE, obs_point),
	732: (61) r4 = *(u32 *)(r5 +68)
	; msg = (typeof(msg)) {
	733: (73) *(u8 *)(r10 -14) = r2
	last_idx 733 first_idx 724
	regs=4 stack=0 before 732: (61) r4 = *(u32 *)(r5 +68)
	regs=4 stack=0 before 731: (b7) r2 = 0
	734: (73) *(u8 *)(r10 -15) = r2
	735: (73) *(u8 *)(r10 -16) = r2
	736: (73) *(u8 *)(r10 -17) = r2
	737: (73) *(u8 *)(r10 -18) = r2
	738: (73) *(u8 *)(r10 -19) = r2
	739: (73) *(u8 *)(r10 -20) = r2
	740: (73) *(u8 *)(r10 -6) = r2
	741: (73) *(u8 *)(r10 -7) = r2
	742: (73) *(u8 *)(r10 -8) = r2
	743: (73) *(u8 *)(r10 -9) = r2
	744: (73) *(u8 *)(r10 -10) = r2
	745: (73) *(u8 *)(r10 -11) = r2
	746: (73) *(u8 *)(r10 -12) = r2
	747: (73) *(u8 *)(r10 -13) = r2
	748: (b4) w2 = 327680
	749: (63) *(u32 *)(r10 -24) = r2
	750: (18) r2 = 0x246c
	752: (63) *(u32 *)(r10 -32) = r2
	753: (b4) w2 = 1
	754: (6b) *(u16 *)(r10 -34) = r2
	755: (63) *(u32 *)(r10 -40) = r1
	756: (63) *(u32 *)(r10 -44) = r4
	757: (b4) w1 = 1284
	758: (6b) *(u16 *)(r10 -48) = r1
	759: (6b) *(u16 *)(r10 -36) = r3
	760: (b4) w6 = 0
	761: (73) *(u8 *)(r10 -2) = r6
	last_idx 761 first_idx 724
	regs=40 stack=0 before 760: (b4) w6 = 0
	762: (73) *(u8 *)(r10 -3) = r6
	763: (73) *(u8 *)(r10 -4) = r6
	764: (73) *(u8 *)(r10 -5) = r6
	765: (63) *(u32 *)(r10 -28) = r6
	766: (18) r7 = 0x4ad
	768: (6b) *(u16 *)(r10 -46) = r7
	769: (73) *(u8 *)(r10 -1) = r6
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	770: (67) r3 <<= 32
	771: (18) r1 = 0xffffffff
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	773: (4f) r3 |= r1
	774: (bf) r4 = r10
	;
	775: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP,
	776: (bf) r1 = r5
	777: (18) r2 = 0xffff7000722cc800
	779: (b4) w5 = 48
	780: (85) call bpf_perf_event_output#25
	last_idx 780 first_idx 724
	regs=20 stack=0 before 779: (b4) w5 = 48
	781: (b4) w1 = 2
	; struct debug_msg msg = {
	782: (6b) *(u16 *)(r10 -48) = r1
	783: (6b) *(u16 *)(r10 -46) = r7
	784: (b4) w1 = 50
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	785: (79) r2 = *(u64 *)(r10 -96)
	786: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	787: (63) *(u32 *)(r10 -32) = r1
	788: (18) r1 = 0x3200000032
	790: (7b) *(u64 *)(r10 -40) = r1
	791: (63) *(u32 *)(r10 -44) = r2
	792: (bf) r4 = r10
	;
	793: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	794: (79) r1 = *(u64 *)(r10 -96)
	795: (18) r2 = 0xffff7000722cc800
	797: (18) r3 = 0xffffffff
	799: (b4) w5 = 20
	800: (85) call bpf_perf_event_output#25
	last_idx 800 first_idx 781
	regs=20 stack=0 before 799: (b4) w5 = 20
	; cilium_dbg3(ctx, DBG_CT_LOOKUP4_1, masquerade_ip, masquerade_ip,
	801: (61) r1 = *(u32 *)(r10 -72)
	; struct debug_msg msg = {
	802: (6b) *(u16 *)(r10 -46) = r7
	803: (b4) w2 = 12290
	804: (6b) *(u16 *)(r10 -48) = r2
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	805: (79) r2 = *(u64 *)(r10 -96)
	806: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	807: (63) *(u32 *)(r10 -32) = r6
	808: (63) *(u32 *)(r10 -36) = r1
	809: (63) *(u32 *)(r10 -40) = r1
	810: (63) *(u32 *)(r10 -44) = r2
	811: (bf) r4 = r10
	;
	812: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	813: (79) r1 = *(u64 *)(r10 -96)
	814: (18) r2 = 0xffff7000722cc800
	816: (18) r3 = 0xffffffff
	818: (b4) w5 = 20
	819: (85) call bpf_perf_event_output#25
	last_idx 819 first_idx 781
	regs=20 stack=0 before 818: (b4) w5 = 20
	820: (79) r5 = *(u64 *)(r10 -96)
	; return (void *)(unsigned long)ctx->data_end;
	821: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	822: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	823: (07) r2 += 34
	824: (b4) w7 = -134
	; if (data + tot_len > data_end)
	825: (2d) if r2 > r1 goto pc-333
	 R0=inv(id=0) R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=invP0 R7_w=inv4294967162 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmmmmmm fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	; &redir_opt->ip1, 4, 0);
	826: (07) r9 += 2
	; ret = ctx_store_bytes(ctx, ETH_HLEN + offsetof(struct iphdr, saddr),
	827: (bf) r1 = r5
	828: (b4) w2 = 26
	829: (bf) r3 = r9
	830: (b4) w4 = 4
	831: (b4) w5 = 0
	832: (85) call bpf_skb_store_bytes#9
	R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf
	processed 1623 insns (limit 1000000) max_states_per_insn 3 total_states 55 peak_states 55 mark_read 27
level=warning msg="JoinEP: Failed to attach program(s)" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" file-path=1197_next/bpf_lxc.o identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=datapath-loader veth=lxc102a8ca64051
level=error msg="Error while rewriting endpoint BPF program" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Reverting endpoint changes after BPF regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Reverting proxy redirect removals" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Finished reverting proxy redirect removals" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Reverting xDS network policy update" subsys=envoy-manager
level=debug msg="preparing new cache transaction: upserting 0 entries, deleting 1 entries" subsys=xds xdsCachedVersion=9 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="deleting resource from cache" subsys=xds xdsCachedVersion=9 xdsResourceName=1197 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="committing cache transaction and notifying of new version" subsys=xds xdsCachedVersion=9 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="Finished reverting xDS network policy update" subsys=envoy-manager
level=debug msg="Reverting proxy redirect additions" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Finished reverting proxy redirect additions" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Finished reverting endpoint changes after BPF regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=info msg="Wrote verifier log to endpoint directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 file-path=1197_next/verifier.log identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=info msg="generating BPF for endpoint failed, keeping stale directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" file-path=1197_next_fail identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="removing directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 directory=1197_next_fail endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="removing directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 directory=1197_next endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Completed endpoint regeneration with no pending regeneration requests" code=OK containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=ready identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=0
level=warning msg="Regeneration of endpoint failed" bpfCompilation=0s bpfLoadProg=38.170375ms bpfWaitForELF="3.292µs" bpfWriteELF="769.667µs" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh mapSync="11.75µs" policyCalculation="110.625µs" prepareBuild="406.208µs" proxyConfiguration="5.375µs" proxyPolicyCalculation="120.208µs" proxyWaitForAck=0s reason="retrying regeneration" subsys=endpoint total=46.173167ms waitingForCTClean="725.791µs" waitingForLock="1µs"
level=debug msg="Error regenerating endpoint: loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" code=Failure containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=ready identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=200
level=debug msg="EventQueue event processing statistics" eventConsumeOffQueueWaitTime="6.875µs" eventEnqueueWaitTime="4.541µs" eventHandlingDuration=46.363667ms eventType="*endpoint.EndpointRegenerationEvent" name=endpoint-1197 subsys=eventqueue
level=error msg="endpoint regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Controller func execution time: 768.293375ms" name=endpoint-1197-regeneration-recovery subsys=controller uuid=8ad41e88-742f-451d-9f1b-b8a945514606
level=debug msg="Controller run failed" consecutiveErrors=1 error="regeneration recovery failed" name=endpoint-1197-regeneration-recovery subsys=controller uuid=8ad41e88-742f-451d-9f1b-b8a945514606
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Load 1-min: 6.54 5-min: 2.69 15min: 2.09" endpointID=317 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2463 (62.62%) Free: 162 Buffers: 10 Cached: 1297" endpointID=317 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1023 (100.00%) Free: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 4.92% MEM: 2.14% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 84 VMS: 785 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME clang STATUS [zombie] PID 328 CPU: 27.44% MEM: 0.00% CMDLINE:  MEM-EXT: RSS: 0 VMS: 0 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME llc STATUS [running] PID 329 CPU: 2.35% MEM: 0.73% CMDLINE: llc -march=bpf -mcpu=v3 -filetype=obj -o /var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e/bpf_host.o MEM-EXT: RSS: 28 VMS: 38 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=info msg="Compiled new BPF template" BPFCompilationTime=9.495353379s file-path=/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e/bpf_host.o subsys=datapath-loader
level=debug msg="Watching template path" file-path=/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e/bpf_host.o subsys=datapath-loader
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_65535
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_65535
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_host.o subsys=elf template-path=/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e/bpf_host.o
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_00317
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_00317
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_host_cilium_net.o subsys=elf template-path=317_next/bpf_host.o
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_00317
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_00317
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_netdev_eth0.o subsys=elf template-path=317_next/bpf_host.o
level=debug msg="Loading CollectionSpec from ELF" device=cilium_host ifindex=5 objPath=317_next/bpf_host.o subsys=datapath-loader
level=debug msg="Loading Collection into kernel" device=cilium_host ifindex=5 objPath=317_next/bpf_host.o subsys=datapath-loader
Verifier error: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)
Verifier log: load program: permission denied:
	btf_vmlinux is malformed
	R1 type=ctx expected=fp
	; int tail_handle_snat_fwd_ipv4(struct __ctx_buff *ctx)
	0: (bf) r5 = r1
	1: (b4) w9 = 0
	; ctx->cb[off] = data;
	2: (63) *(u32 *)(r5 +52) = r9
	; return (void *)(unsigned long)ctx->data_end;
	3: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	4: (61) r6 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	5: (bf) r2 = r6
	6: (07) r2 += 34
	; __s8 ext_err = 0;
	7: (b4) w7 = 0
	8: (b4) w4 = 0
	9: (7b) *(u64 *)(r10 -152) = r5
	; if (data + tot_len > data_end)
	10: (2d) if r2 > r1 goto pc+7173
	 R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	;
	11: (61) r1 = *(u32 *)(r6 +26)
	; if (DIRECT_ROUTING_DEV_IFINDEX == NATIVE_DEV_IFINDEX &&
	12: (56) if w1 != 0x20015ac goto pc+3
	 R1_w=inv33559980 R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	13: (18) r2 = 0x0
	15: (16) if w2 == 0x41 goto pc+85
	last_idx 15 first_idx 15
	 R1_w=inv33559980 R2_rw=invP0 R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	parent didn't have regs=4 stack=0 marks
	last_idx 13 first_idx 0
	regs=4 stack=0 before 13: (18) r2 = 0x0
	; key.ip4 = ip;
	16: (63) *(u32 *)(r10 -64) = r1
	17: (b7) r7 = 0
	; struct endpoint_key key = {};
	18: (63) *(u32 *)(r10 -48) = r7
	last_idx 18 first_idx 15
	regs=80 stack=0 before 17: (b7) r7 = 0
	19: (63) *(u32 *)(r10 -52) = r7
	20: (63) *(u32 *)(r10 -56) = r7
	21: (63) *(u32 *)(r10 -60) = r7
	22: (b4) w1 = 1
	; key.family = ENDPOINT_KEY_IPV4;
	23: (73) *(u8 *)(r10 -48) = r1
	24: (bf) r2 = r10
	;
	25: (07) r2 += -64
	; return map_lookup_elem(&ENDPOINTS_MAP, &key);
	26: (18) r1 = 0xffff700159c9b400
	28: (85) call bpf_map_lookup_elem#1
	29: (bf) r8 = r0
	; remote_ep = lookup_ip4_remote_endpoint(ip4->daddr, 0);
	30: (61) r1 = *(u32 *)(r6 +30)
	; .ip4 = addr,
	31: (7b) *(u64 *)(r10 -48) = r7
	32: (63) *(u32 *)(r10 -56) = r1
	33: (18) r1 = 0x100000000000040
	; .lpm_key = { IPCACHE_PREFIX_LEN(prefix), {} },
	35: (7b) *(u64 *)(r10 -64) = r1
	36: (b4) w7 = 0
	; .ip4 = addr,
	37: (63) *(u32 *)(r10 -52) = r7
	last_idx 37 first_idx 29
	regs=80 stack=0 before 36: (b4) w7 = 0
	38: (bf) r2 = r10
	;
	39: (07) r2 += -64
	; return map_lookup_elem(map, &key);
	40: (18) r1 = 0xffff700104950c00
	42: (85) call bpf_map_lookup_elem#1
	43: (79) r5 = *(u64 *)(r10 -152)
	44: (b4) w4 = 0
	; if (local_ep) {
	45: (15) if r8 == 0x0 goto pc+7138
	 R0_w=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=invP0 R8_w=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv0 R10=fp0 fp-48_w=mmmmmmmm fp-56=mmmmmmmm fp-64_w=mmmmmmmm fp-152=ctx
	; .daddr = ip4->daddr,
	46: (61) r1 = *(u32 *)(r6 +30)
	; struct ipv4_ct_tuple tuple = {
	47: (63) *(u32 *)(r10 -128) = r1
	; .saddr = ip4->saddr
	48: (61) r1 = *(u32 *)(r6 +26)
	; struct ipv4_ct_tuple tuple = {
	49: (63) *(u32 *)(r10 -124) = r1
	50: (b4) w2 = 0
	51: (63) *(u32 *)(r10 -120) = r2
	last_idx 51 first_idx 29
	regs=4 stack=0 before 50: (b4) w2 = 0
	; .nexthdr = ip4->protocol,
	52: (71) r1 = *(u8 *)(r6 +23)
	; struct ipv4_ct_tuple tuple = {
	53: (73) *(u8 *)(r10 -115) = r2
	;
	54: (18) r7 = 0xffff7001044a2800
	56: (16) if w1 == 0x6 goto pc+2
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0?0000 fp-128=mmmmmmmm fp-152=ctx
	57: (18) r7 = 0xffff7000ef1d5000
	; struct ipv4_ct_tuple tuple = {
	59: (73) *(u8 *)(r10 -116) = r1
	; return ip4->ihl * 4;
	60: (71) r8 = *(u8 *)(r6 +14)
	; return ip4->ihl * 4;
	61: (64) w8 <<= 2
	62: (54) w8 &= 60
	; ct_is_reply4(get_ct_map4(&tuple), ctx, ETH_HLEN +
	63: (04) w8 += 14
	; switch (tuple->nexthdr) {
	64: (16) if w1 == 0x11 goto pc+114
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8_w=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	65: (16) if w1 == 0x6 goto pc+113
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	66: (56) if w1 != 0x1 goto pc+6938
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv1 R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	67: (b4) w1 = 0
	; __be16 identifier = 0;
	68: (6b) *(u16 *)(r10 -64) = r1
	last_idx 68 first_idx 65
	regs=2 stack=0 before 67: (b4) w1 = 0
	69: (bf) r3 = r10
	;
	70: (07) r3 += -80
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	71: (bf) r1 = r5
	72: (bc) w2 = w8
	73: (b4) w4 = 1
	74: (85) call bpf_skb_load_bytes#26
	last_idx 74 first_idx 65
	regs=10 stack=0 before 73: (b4) w4 = 1
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	75: (c6) if w0 s< 0x0 goto pc+6928
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	76: (71) r3 = *(u8 *)(r10 -80)
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	77: (bc) w2 = w3
	78: (44) w2 |= 8
	79: (79) r1 = *(u64 *)(r10 -152)
	80: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=ctx(id=0,off=0,imm=0) R2_w=inv(id=0,umin_value=8,umax_value=255,var_off=(0x8; 0xf7)) R3_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	81: (05) goto pc+8
	; switch (type) {
	90: (b4) w2 = 0
	; tuple->dport = 0;
	91: (63) *(u32 *)(r10 -120) = r2
	last_idx 91 first_idx 75
	regs=4 stack=0 before 90: (b4) w2 = 0
	; switch (type) {
	92: (bf) r1 = r3
	93: (66) if w1 s> 0xa goto pc+6400
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	94: (16) if w1 == 0x0 goto pc+6512
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	95: (16) if w1 == 0x3 goto pc+6400
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	96: (16) if w1 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	97: (05) goto pc+6900
	; if (err < 0)
	6998: (b4) w1 = 1
	; tuple->flags = TUPLE_F_IN;
	6999: (73) *(u8 *)(r10 -115) = r1
	7000: (bf) r2 = r10
	;
	7001: (07) r2 += -128
	; *is_reply = map_lookup_elem(map, tuple) != NULL;
	7002: (bf) r1 = r7
	7003: (85) call bpf_map_lookup_elem#1
	7004: (79) r5 = *(u64 *)(r10 -152)
	7005: (b4) w7 = 0
	7006: (b4) w4 = 0
	7007: (05) goto pc+175
	; if (ret == NAT_PUNT_TO_STACK)
	7183: (b4) w9 = 0
	; struct ipv4_ct_tuple tuple = {};
	7184: (6b) *(u16 *)(r10 -116) = r9
	last_idx 7184 first_idx 7004
	regs=200 stack=0 before 7183: (b4) w9 = 0
	7185: (63) *(u32 *)(r10 -120) = r9
	7186: (b7) r1 = 0
	7187: (7b) *(u64 *)(r10 -128) = r1
	last_idx 7187 first_idx 7004
	regs=2 stack=0 before 7186: (b7) r1 = 0
	; return (void *)(unsigned long)ctx->data_end;
	7188: (61) r2 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	7189: (61) r8 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	7190: (bf) r1 = r8
	7191: (07) r1 += 34
	; if (data + tot_len > data_end)
	7192: (2d) if r1 > r2 goto pc+854
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=pkt(id=0,off=34,r=34,imm=0) R2_w=pkt_end(id=0,off=0,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9_w=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??000000 fp-128_w=00000000 fp-152=ctx
	7193: (7b) *(u64 *)(r10 -160) = r2
	7194: (b4) w4 = -158
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7195: (69) r6 = *(u16 *)(r8 +20)
	; tuple->nexthdr = ip4->protocol;
	7196: (71) r1 = *(u8 *)(r8 +23)
	; tuple->nexthdr = ip4->protocol;
	7197: (73) *(u8 *)(r10 -116) = r1
	; tuple->daddr = ip4->daddr;
	7198: (61) r2 = *(u32 *)(r8 +30)
	; tuple->daddr = ip4->daddr;
	7199: (63) *(u32 *)(r10 -128) = r2
	; tuple->saddr = ip4->saddr;
	7200: (61) r3 = *(u32 *)(r8 +26)
	; tuple->saddr = ip4->saddr;
	7201: (63) *(u32 *)(r10 -124) = r3
	; switch (tuple->nexthdr) {
	7202: (16) if w1 == 0x1 goto pc+732
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv0 R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end
	7203: (63) *(u32 *)(r10 -168) = r7
	last_idx 7203 first_idx 7202
	regs=80 stack=0 before 7202: (16) if w1 == 0x1 goto pc+732
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_rw=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4_w=inv4294967138 R5_w=ctx(id=0,off=0,imm=0) R6_w=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_rw=invP0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9_w=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128_w=mmmmmmmm fp-152=ctx fp-160_w=pkt_end
	parent didn't have regs=80 stack=0 marks
	last_idx 7201 first_idx 7004
	regs=80 stack=0 before 7201: (63) *(u32 *)(r10 -124) = r3
	regs=80 stack=0 before 7200: (61) r3 = *(u32 *)(r8 +26)
	regs=80 stack=0 before 7199: (63) *(u32 *)(r10 -128) = r2
	regs=80 stack=0 before 7198: (61) r2 = *(u32 *)(r8 +30)
	regs=80 stack=0 before 7197: (73) *(u8 *)(r10 -116) = r1
	regs=80 stack=0 before 7196: (71) r1 = *(u8 *)(r8 +23)
	regs=80 stack=0 before 7195: (69) r6 = *(u16 *)(r8 +20)
	regs=80 stack=0 before 7194: (b4) w4 = -158
	regs=80 stack=0 before 7193: (7b) *(u64 *)(r10 -160) = r2
	regs=80 stack=0 before 7192: (2d) if r1 > r2 goto pc+854
	regs=80 stack=0 before 7191: (07) r1 += 34
	regs=80 stack=0 before 7190: (bf) r1 = r8
	regs=80 stack=0 before 7189: (61) r8 = *(u32 *)(r5 +76)
	regs=80 stack=0 before 7188: (61) r2 = *(u32 *)(r5 +80)
	regs=80 stack=0 before 7187: (7b) *(u64 *)(r10 -128) = r1
	regs=80 stack=0 before 7186: (b7) r1 = 0
	regs=80 stack=0 before 7185: (63) *(u32 *)(r10 -120) = r9
	regs=80 stack=0 before 7184: (6b) *(u16 *)(r10 -116) = r9
	regs=80 stack=0 before 7183: (b4) w9 = 0
	regs=80 stack=0 before 7007: (05) goto pc+175
	regs=80 stack=0 before 7006: (b4) w4 = 0
	regs=80 stack=0 before 7005: (b4) w7 = 0
	;
	7204: (71) r7 = *(u8 *)(r8 +14)
	; switch (tuple->nexthdr) {
	7205: (16) if w1 == 0x11 goto pc+1
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7206: (56) if w1 != 0x6 goto pc+29
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv6 R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; struct ipv4_frag_id frag_id = {
	7207: (63) *(u32 *)(r10 -76) = r3
	7208: (63) *(u32 *)(r10 -80) = r2
	; .id = ip4->id,
	7209: (69) r2 = *(u16 *)(r8 +18)
	7210: (b4) w3 = 0
	; struct ipv4_frag_id frag_id = {
	7211: (73) *(u8 *)(r10 -69) = r3
	last_idx 7211 first_idx 7202
	regs=8 stack=0 before 7210: (b4) w3 = 0
	7212: (73) *(u8 *)(r10 -70) = r1
	7213: (6b) *(u16 *)(r10 -72) = r2
	; return ip4->frag_off & bpf_htons(0x3FFF);
	7214: (bc) w1 = w6
	7215: (54) w1 &= 65343
	; if (unlikely(is_fragment)) {
	7216: (16) if w1 == 0x0 goto pc+654
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=65343,var_off=(0x0; 0xff3f)) R2=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R3=invP0 R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; return ctx->len;
	7217: (61) r9 = *(u32 *)(r5 +0)
	7218: (b7) r1 = 0
	; struct metrics_value *entry, new_entry = {};
	7219: (7b) *(u64 *)(r10 -56) = r1
	last_idx 7219 first_idx 7216
	regs=2 stack=0 before 7218: (b7) r1 = 0
	7220: (7b) *(u64 *)(r10 -64) = r1
	7221: (b7) r1 = 521
	; struct metrics_key key = {};
	7222: (7b) *(u64 *)(r10 -144) = r1
	7223: (bf) r2 = r10
	;
	7224: (07) r2 += -144
	; entry = map_lookup_elem(&METRICS_MAP, &key);
	7225: (18) r1 = 0xffff7000ac846c00
	7227: (85) call bpf_map_lookup_elem#1
	; if (entry) {
	7228: (15) if r0 == 0x0 goto pc+616
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; entry->count += 1;
	7229: (79) r1 = *(u64 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7230: (07) r1 += 1
	7231: (7b) *(u64 *)(r0 +0) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; entry->bytes += bytes;
	7232: (79) r1 = *(u64 *)(r0 +8)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7233: (0f) r1 += r9
	7234: (7b) *(u64 *)(r0 +8) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7235: (05) goto pc+620
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7856: (69) r1 = *(u16 *)(r8 +20)
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7857: (54) w1 &= 65311
	7858: (79) r5 = *(u64 *)(r10 -152)
	; if (likely(not_first_fragment))
	7859: (16) if w1 == 0x0 goto pc+11
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0,umax_value=65311,var_off=(0x0; 0xff1f)) R5_w=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7860: (bf) r2 = r10
	;
	7861: (07) r2 += -80
	; tmp = map_lookup_elem(&IPV4_FRAG_DATAGRAMS_MAP, frag_id);
	7862: (18) r1 = 0xffff7001044a2400
	7864: (85) call bpf_map_lookup_elem#1
	; if (!tmp)
	7865: (55) if r0 != 0x0 goto pc+548
	
	from 7865 to 8414: R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; case  4: __it_mob(d, s, 32);
	8414: (61) r1 = *(u32 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	8415: (63) *(u32 *)(r10 -120) = r1
	8416: (05) goto pc-485
	; map_update_elem(&METRICS_MAP, &key, &new_entry, 0);
	7932: (79) r5 = *(u64 *)(r10 -152)
	7933: (61) r7 = *(u32 *)(r10 -168)
	7934: (b4) w4 = 0
	7935: (54) w6 &= -225
	7936: (b4) w1 = 1
	; if (IS_ERR(ret)) goto skip_crab;
	7937: (16) if w4 == 0x2 goto pc+1
	last_idx 7937 first_idx 8414
	regs=10 stack=0 before 7936: (b4) w1 = 1
	regs=10 stack=0 before 7935: (54) w6 &= -225
	regs=10 stack=0 before 7934: (b4) w4 = 0
	7938: (b4) w1 = 0
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7939: (54) w6 &= 65535
	7940: (79) r0 = *(u64 *)(r10 -160)
	; if (IS_ERR(ret)) goto skip_crab;
	7941: (56) if w6 != 0x0 goto pc+105
	 R0_w=pkt_end(id=0,off=0,imm=0) R1=inv0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6_w=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	;
	7942: (bc) w2 = w4
	7943: (74) w2 >>= 31
	7944: (4c) w2 |= w1
	; if (IS_ERR(ret)) goto skip_crab;
	7945: (56) if w2 != 0x0 goto pc+101
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	7946: (71) r1 = *(u8 *)(r8 +23)
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	7947: (56) if w1 != 0x6 goto pc+99
	 R0=pkt_end(id=0,off=0,imm=0) R1=inv6 R2=invP0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7948: (07) r8 += 14
	; return ip4->ihl * 4;
	7949: (71) r1 = *(u8 *)(r8 +0)
	; return ip4->ihl * 4;
	7950: (64) w1 <<= 2
	7951: (57) r1 &= 60
	; tcph = (struct tcphdr *)((void*)ip4 + ipv4_hdrlen(ip4));
	7952: (0f) r8 += r1
	last_idx 7952 first_idx 7947
	regs=2 stack=0 before 7951: (57) r1 &= 60
	regs=2 stack=0 before 7950: (64) w1 <<= 2
	regs=2 stack=0 before 7949: (71) r1 = *(u8 *)(r8 +0)
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	7953: (bf) r9 = r8
	7954: (07) r9 += 20
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	7955: (2d) if r9 > r0 goto pc+91
	 R0=pkt_end(id=0,off=0,imm=0) R1_w=invP(id=0,umax_value=60,var_off=(0x0; 0x3c)) R2=invP0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=9,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7956: (b4) w2 = 15
	;
	7957: (61) r1 = *(u32 *)(r5 +80)
	; offset = tcph->doff * 4;
	7958: (69) r3 = *(u16 *)(r8 +12)
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	7959: (74) w3 >>= 2
	7960: (54) w3 &= 60
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	7961: (04) w3 += -20
	7962: (05) goto pc+6
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=inv(id=0,umax_value=252,var_off=(0x0; 0xfc)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	last_idx 7968 first_idx 8017
	regs=4 stack=0 before 7967: (bc) w4 = w8
	regs=4 stack=0 before 7966: (04) w2 += -1
	regs=4 stack=0 before 7965: (79) r5 = *(u64 *)(r10 -152)
	regs=4 stack=0 before 8020: (05) goto pc-56
	regs=4 stack=0 before 8019: (1c) w3 -= w4
	regs=4 stack=0 before 8018: (0f) r9 += r4
	regs=4 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=9,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_r=invP0 R9_r=pkt(id=9,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 8007 first_idx 7992
	regs=4 stack=0 before 8007: (bd) if r4 <= r1 goto pc+9
	regs=4 stack=0 before 8006: (07) r4 += 2
	regs=4 stack=0 before 8005: (bf) r4 = r9
	regs=4 stack=0 before 7995: (56) if w5 != 0x0 goto pc+9
	regs=4 stack=0 before 7994: (16) if w5 == 0x2d goto pc+218
	regs=4 stack=0 before 7993: (16) if w5 == 0x1 goto pc-31
	regs=4 stack=0 before 7992: (71) r5 = *(u8 *)(r9 +0)
	 R0=pkt_end(id=0,off=0,imm=0) R1_r=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_rw=invP0 R9_r=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48_r=mmmmmmmm fp-56=00000000 fp-64_r=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160_r=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 7983 first_idx 7969
	regs=4 stack=0 before 7983: (bd) if r4 <= r1 goto pc+8
	regs=4 stack=0 before 7982: (07) r4 += 1
	regs=4 stack=0 before 7981: (bf) r4 = r9
	regs=4 stack=0 before 7972: (56) if w4 != 0x0 goto pc+8
	regs=4 stack=0 before 7971: (54) w4 &= 255
	regs=4 stack=0 before 7970: (bc) w4 = w3
	regs=4 stack=0 before 7969: (bc) w8 = w4
	 R0=pkt_end(id=0,off=0,imm=0) R1_rw=pkt_end(id=0,off=0,imm=0) R2_rw=invP15 R3_rw=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_r=invP0 R5_r=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=9,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_rw=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48_r=mmmmmmmm fp-56=00000000 fp-64_r=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160_r=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 7962 first_idx 7947
	regs=4 stack=0 before 7962: (05) goto pc+6
	regs=4 stack=0 before 7961: (04) w3 += -20
	regs=4 stack=0 before 7960: (54) w3 &= 60
	regs=4 stack=0 before 7959: (74) w3 >>= 2
	regs=4 stack=0 before 7958: (69) r3 = *(u16 *)(r8 +12)
	regs=4 stack=0 before 7957: (61) r1 = *(u32 *)(r5 +80)
	regs=4 stack=0 before 7956: (b4) w2 = 15
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=0,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=20,off=36,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8005
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=21,off=34,r=0,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=36,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8007
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=0,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=36,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=22,off=34,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=0,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=36,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=0,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=36,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7981
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=0,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP9 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4=pkt(id=25,off=36,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=25,off=34,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=0,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=36,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=0,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=36,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=27,off=34,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=0,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=36,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=0,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=36,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7981
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=0,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP4 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4=pkt(id=30,off=36,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=30,off=34,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=0,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=36,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=0,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=36,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=32,off=34,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=0,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	
	from 7994 to 8213: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP1 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=inv45 R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	8213: (bf) r2 = r9
	8214: (07) r2 += 20
	8215: (79) r5 = *(u64 *)(r10 -152)
	8216: (bc) w4 = w8
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	8217: (2d) if r2 > r0 goto pc-171
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=33,off=54,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=invP0 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	8218: (71) r2 = *(u8 *)(r9 +18)
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	8219: (56) if w2 != 0x0 goto pc+107
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=inv0 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=invP0 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	8220: (b4) w4 = -134
	; return (void *)(unsigned long)ctx->data;
	8221: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	8222: (bf) r3 = r2
	8223: (07) r3 += 34
	; if (data + tot_len > data_end)
	8224: (2d) if r3 > r1 goto pc-178
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=pkt(id=0,off=0,r=34,imm=0) R3=pkt(id=0,off=34,r=34,imm=0) R4=inv4294967162 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; masquerade_ip = ip4->saddr;
	8225: (61) r1 = *(u32 *)(r2 +26)
	; masquerade_ip = ip4->saddr;
	8226: (63) *(u32 *)(r10 -80) = r1
	; return ip4->ihl * 4;
	8227: (71) r2 = *(u8 *)(r2 +14)
	; return ip4->ihl * 4;
	8228: (64) w2 <<= 2
	8229: (54) w2 &= 60
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	8230: (04) w2 += 44
	8231: (bf) r3 = r10
	; masquerade_ip = ip4->saddr;
	8232: (07) r3 += -80
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	8233: (bf) r1 = r5
	8234: (b4) w4 = 4
	8235: (b4) w5 = 0
	8236: (85) call bpf_skb_store_bytes#9
	last_idx 8236 first_idx 8224
	regs=10 stack=0 before 8235: (b4) w5 = 0
	regs=10 stack=0 before 8234: (b4) w4 = 4
	8237: (79) r5 = *(u64 *)(r10 -152)
	8238: (b4) w4 = -141
	; if (ret < 0) return DROP_WRITE_ERROR;
	8239: (c6) if w0 s< 0x0 goto pc-193
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R4_w=inv4294967155 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	; return ctx->len;
	8240: (61) r1 = *(u32 *)(r5 +0)
	; __u64 cap_len = min_t(__u64, monitor ? : TRACE_PAYLOAD_LEN,
	8241: (bf) r3 = r1
	8242: (a6) if w1 < 0x80 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=inv(id=35,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=35,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4_w=inv4294967155 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	8243: (b7) r3 = 128
	; __notify_common_hdr(CILIUM_NOTIFY_TRACE, obs_point),
	8244: (61) r2 = *(u32 *)(r5 +68)
	8245: (b7) r4 = 327680
	; msg = (typeof(msg)) {
	8246: (7b) *(u64 *)(r10 -40) = r4
	8247: (18) r4 = 0x1
	8249: (63) *(u32 *)(r10 -48) = r4
	8250: (b4) w4 = 1
	8251: (6b) *(u16 *)(r10 -50) = r4
	8252: (63) *(u32 *)(r10 -56) = r1
	8253: (63) *(u32 *)(r10 -60) = r2
	8254: (b4) w1 = 20776196
	8255: (63) *(u32 *)(r10 -64) = r1
	8256: (b7) r1 = 0
	; case  8: jmp_8:  __it_set(d, 64);
	8257: (7b) *(u64 *)(r10 -32) = r1
	last_idx 8257 first_idx 8237
	regs=2 stack=0 before 8256: (b7) r1 = 0
	8258: (7b) *(u64 *)(r10 -24) = r1
	; msg = (typeof(msg)) {
	8259: (6b) *(u16 *)(r10 -52) = r3
	8260: (b4) w6 = 0
	8261: (63) *(u32 *)(r10 -44) = r6
	last_idx 8261 first_idx 8237
	regs=40 stack=0 before 8260: (b4) w6 = 0
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	8262: (67) r3 <<= 32
	8263: (18) r1 = 0xffffffff
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	8265: (4f) r3 |= r1
	8266: (bf) r4 = r10
	;
	8267: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP,
	8268: (bf) r1 = r5
	8269: (18) r2 = 0xffff7000722cc800
	8271: (b4) w5 = 48
	8272: (85) call bpf_perf_event_output#25
	last_idx 8272 first_idx 8237
	regs=20 stack=0 before 8271: (b4) w5 = 48
	8273: (b4) w1 = 20774914
	; struct debug_msg msg = {
	8274: (63) *(u32 *)(r10 -64) = r1
	8275: (b4) w1 = 50
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	8276: (79) r2 = *(u64 *)(r10 -152)
	8277: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	8278: (63) *(u32 *)(r10 -48) = r1
	8279: (18) r1 = 0x3200000032
	8281: (7b) *(u64 *)(r10 -56) = r1
	8282: (63) *(u32 *)(r10 -60) = r2
	8283: (bf) r4 = r10
	;
	8284: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	8285: (79) r1 = *(u64 *)(r10 -152)
	8286: (18) r2 = 0xffff7000722cc800
	8288: (18) r3 = 0xffffffff
	8290: (b4) w5 = 20
	8291: (85) call bpf_perf_event_output#25
	last_idx 8291 first_idx 8273
	regs=20 stack=0 before 8290: (b4) w5 = 20
	; cilium_dbg3(ctx, DBG_CT_LOOKUP4_1, masquerade_ip, masquerade_ip,
	8292: (61) r1 = *(u32 *)(r10 -80)
	8293: (b4) w2 = 20787202
	; struct debug_msg msg = {
	8294: (63) *(u32 *)(r10 -64) = r2
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	8295: (79) r2 = *(u64 *)(r10 -152)
	8296: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	8297: (63) *(u32 *)(r10 -56) = r1
	8298: (63) *(u32 *)(r10 -52) = r1
	8299: (63) *(u32 *)(r10 -48) = r6
	8300: (63) *(u32 *)(r10 -60) = r2
	8301: (bf) r4 = r10
	;
	8302: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	8303: (79) r1 = *(u64 *)(r10 -152)
	8304: (18) r2 = 0xffff7000722cc800
	8306: (18) r3 = 0xffffffff
	8308: (b4) w5 = 20
	8309: (85) call bpf_perf_event_output#25
	last_idx 8309 first_idx 8273
	regs=20 stack=0 before 8308: (b4) w5 = 20
	8310: (79) r5 = *(u64 *)(r10 -152)
	; return (void *)(unsigned long)ctx->data_end;
	8311: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	8312: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	8313: (07) r2 += 34
	8314: (b4) w4 = -134
	; if (data + tot_len > data_end)
	8315: (2d) if r2 > r1 goto pc-269
	 R0=inv(id=0) R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv4294967162 R5_w=ctx(id=0,off=0,imm=0) R6=invP0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-24=mmmmmmmm fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	; &redir_opt->ip1, 4, 0);
	8316: (07) r9 += 2
	; ret = ctx_store_bytes(ctx, ETH_HLEN + offsetof(struct iphdr, saddr),
	8317: (bf) r1 = r5
	8318: (b4) w2 = 26
	8319: (bf) r3 = r9
	8320: (b4) w4 = 4
	8321: (b4) w5 = 0
	8322: (85) call bpf_skb_store_bytes#9
	R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf
	processed 1463 insns (limit 1000000) max_states_per_insn 3 total_states 58 peak_states 58 mark_read 28
level=warning msg="JoinEP: Failed to load program for host endpoint (cil_to_host)" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" file-path=317_next/bpf_host.o identity=1 ipv4= ipv6= k8sPodName=/ subsys=datapath-loader veth=cilium_host
level=error msg="Error while rewriting endpoint BPF program" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting endpoint changes after BPF regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting proxy redirect removals" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting proxy redirect removals" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting proxy redirect additions" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting proxy redirect additions" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting endpoint changes after BPF regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=info msg="Wrote verifier log to endpoint directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/verifier.log identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=info msg="generating BPF for endpoint failed, keeping stale directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" file-path=317_next_fail identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=317_next_fail endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=317_next endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=warning msg="Regeneration of endpoint failed" bpfCompilation=9.495353379s bpfLoadProg=35.864958ms bpfWaitForELF=9.496041754s bpfWriteELF=1.059875ms containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ mapSync="852.042µs" policyCalculation="116.75µs" prepareBuild=8.694209ms proxyConfiguration="21.667µs" proxyPolicyCalculation="12.25µs" proxyWaitForAck=0s reason="updated security labels" subsys=endpoint total=9.546628922s waitingForCTClean=2.186916ms waitingForLock="1.04µs"
level=debug msg="Error regenerating endpoint: loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" code=Failure containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=waiting-to-regenerate identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=200
level=debug msg="EventQueue event processing statistics" eventConsumeOffQueueWaitTime=1.57075ms eventEnqueueWaitTime=417ns eventHandlingDuration=9.546770129s eventType="*endpoint.EndpointRegenerationEvent" name=endpoint-317 subsys=eventqueue
level=debug msg="Dequeued endpoint from build queue" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Regenerating endpoint" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ reason="one or more identities created or deleted" startTime="2023-07-12 21:56:49.325592384 +0000 UTC m=+12.689502757" subsys=endpoint
level=debug msg="Regenerating endpoint: one or more identities created or deleted" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=regenerating identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=317_next endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Starting policy recalculation..." containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Skipping unnecessary endpoint policy recalculation" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ policyChanged=true policyRevision.next=1 policyRevision.repo=1 subsys=endpoint
level=debug msg="Endpoint has no IP addresses" endpointID=317 subsys=envoy-manager
level=error msg="endpoint regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="received signal that regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="BPF header file hashed (was: \"\")" bpfHeaderfileHash=0f5fa9a0ac774df439d9f3dc0bdbff52d824f5c229dffe9c8ab4b3a39b7c2977 containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="writing header file" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/ep_config.h identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="writing header file with DNSRules" DNSRules="map[]" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/ep_config.h identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Triggering endpoint regeneration due to retrying regeneration" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=waiting-to-regenerate identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Preparing to compile BPF" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ regeneration-level=rewrite+load subsys=endpoint
level=debug msg="Load 1-min: 6.54 5-min: 2.69 15min: 2.09" endpointID=317 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2458 (62.51%) Free: 156 Buffers: 10 Cached: 1307" endpointID=317 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1023 (100.00%) Free: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 5.03% MEM: 2.31% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 90 VMS: 850 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_65535
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_65535
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_host.o subsys=elf template-path=/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e/bpf_host.o
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_00317
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_00317
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_host_cilium_net.o subsys=elf template-path=317_next/bpf_host.o
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_00317
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_00317
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_netdev_eth0.o subsys=elf template-path=317_next/bpf_host.o
level=debug msg="Loading CollectionSpec from ELF" device=cilium_host ifindex=5 objPath=317_next/bpf_host.o subsys=datapath-loader
level=debug msg="Loading Collection into kernel" device=cilium_host ifindex=5 objPath=317_next/bpf_host.o subsys=datapath-loader
Verifier error: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)
Verifier log: load program: permission denied:
	btf_vmlinux is malformed
	R1 type=ctx expected=fp
	; int tail_handle_snat_fwd_ipv4(struct __ctx_buff *ctx)
	0: (bf) r5 = r1
	1: (b4) w9 = 0
	; ctx->cb[off] = data;
	2: (63) *(u32 *)(r5 +52) = r9
	; return (void *)(unsigned long)ctx->data_end;
	3: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	4: (61) r6 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	5: (bf) r2 = r6
	6: (07) r2 += 34
	; __s8 ext_err = 0;
	7: (b4) w7 = 0
	8: (b4) w4 = 0
	9: (7b) *(u64 *)(r10 -152) = r5
	; if (data + tot_len > data_end)
	10: (2d) if r2 > r1 goto pc+7173
	 R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	;
	11: (61) r1 = *(u32 *)(r6 +26)
	; if (DIRECT_ROUTING_DEV_IFINDEX == NATIVE_DEV_IFINDEX &&
	12: (56) if w1 != 0x20015ac goto pc+3
	 R1_w=inv33559980 R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	13: (18) r2 = 0x0
	15: (16) if w2 == 0x41 goto pc+85
	last_idx 15 first_idx 15
	 R1_w=inv33559980 R2_rw=invP0 R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	parent didn't have regs=4 stack=0 marks
	last_idx 13 first_idx 0
	regs=4 stack=0 before 13: (18) r2 = 0x0
	; key.ip4 = ip;
	16: (63) *(u32 *)(r10 -64) = r1
	17: (b7) r7 = 0
	; struct endpoint_key key = {};
	18: (63) *(u32 *)(r10 -48) = r7
	last_idx 18 first_idx 15
	regs=80 stack=0 before 17: (b7) r7 = 0
	19: (63) *(u32 *)(r10 -52) = r7
	20: (63) *(u32 *)(r10 -56) = r7
	21: (63) *(u32 *)(r10 -60) = r7
	22: (b4) w1 = 1
	; key.family = ENDPOINT_KEY_IPV4;
	23: (73) *(u8 *)(r10 -48) = r1
	24: (bf) r2 = r10
	;
	25: (07) r2 += -64
	; return map_lookup_elem(&ENDPOINTS_MAP, &key);
	26: (18) r1 = 0xffff700159c9b400
	28: (85) call bpf_map_lookup_elem#1
	29: (bf) r8 = r0
	; remote_ep = lookup_ip4_remote_endpoint(ip4->daddr, 0);
	30: (61) r1 = *(u32 *)(r6 +30)
	; .ip4 = addr,
	31: (7b) *(u64 *)(r10 -48) = r7
	32: (63) *(u32 *)(r10 -56) = r1
	33: (18) r1 = 0x100000000000040
	; .lpm_key = { IPCACHE_PREFIX_LEN(prefix), {} },
	35: (7b) *(u64 *)(r10 -64) = r1
	36: (b4) w7 = 0
	; .ip4 = addr,
	37: (63) *(u32 *)(r10 -52) = r7
	last_idx 37 first_idx 29
	regs=80 stack=0 before 36: (b4) w7 = 0
	38: (bf) r2 = r10
	;
	39: (07) r2 += -64
	; return map_lookup_elem(map, &key);
	40: (18) r1 = 0xffff700104950c00
	42: (85) call bpf_map_lookup_elem#1
	43: (79) r5 = *(u64 *)(r10 -152)
	44: (b4) w4 = 0
	; if (local_ep) {
	45: (15) if r8 == 0x0 goto pc+7138
	 R0_w=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=invP0 R8_w=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv0 R10=fp0 fp-48_w=mmmmmmmm fp-56=mmmmmmmm fp-64_w=mmmmmmmm fp-152=ctx
	; .daddr = ip4->daddr,
	46: (61) r1 = *(u32 *)(r6 +30)
	; struct ipv4_ct_tuple tuple = {
	47: (63) *(u32 *)(r10 -128) = r1
	; .saddr = ip4->saddr
	48: (61) r1 = *(u32 *)(r6 +26)
	; struct ipv4_ct_tuple tuple = {
	49: (63) *(u32 *)(r10 -124) = r1
	50: (b4) w2 = 0
	51: (63) *(u32 *)(r10 -120) = r2
	last_idx 51 first_idx 29
	regs=4 stack=0 before 50: (b4) w2 = 0
	; .nexthdr = ip4->protocol,
	52: (71) r1 = *(u8 *)(r6 +23)
	; struct ipv4_ct_tuple tuple = {
	53: (73) *(u8 *)(r10 -115) = r2
	;
	54: (18) r7 = 0xffff7001044a2800
	56: (16) if w1 == 0x6 goto pc+2
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0?0000 fp-128=mmmmmmmm fp-152=ctx
	57: (18) r7 = 0xffff7000ef1d5000
	; struct ipv4_ct_tuple tuple = {
	59: (73) *(u8 *)(r10 -116) = r1
	; return ip4->ihl * 4;
	60: (71) r8 = *(u8 *)(r6 +14)
	; return ip4->ihl * 4;
	61: (64) w8 <<= 2
	62: (54) w8 &= 60
	; ct_is_reply4(get_ct_map4(&tuple), ctx, ETH_HLEN +
	63: (04) w8 += 14
	; switch (tuple->nexthdr) {
	64: (16) if w1 == 0x11 goto pc+114
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8_w=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	65: (16) if w1 == 0x6 goto pc+113
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	66: (56) if w1 != 0x1 goto pc+6938
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv1 R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	67: (b4) w1 = 0
	; __be16 identifier = 0;
	68: (6b) *(u16 *)(r10 -64) = r1
	last_idx 68 first_idx 65
	regs=2 stack=0 before 67: (b4) w1 = 0
	69: (bf) r3 = r10
	;
	70: (07) r3 += -80
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	71: (bf) r1 = r5
	72: (bc) w2 = w8
	73: (b4) w4 = 1
	74: (85) call bpf_skb_load_bytes#26
	last_idx 74 first_idx 65
	regs=10 stack=0 before 73: (b4) w4 = 1
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	75: (c6) if w0 s< 0x0 goto pc+6928
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	76: (71) r3 = *(u8 *)(r10 -80)
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	77: (bc) w2 = w3
	78: (44) w2 |= 8
	79: (79) r1 = *(u64 *)(r10 -152)
	80: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=ctx(id=0,off=0,imm=0) R2_w=inv(id=0,umin_value=8,umax_value=255,var_off=(0x8; 0xf7)) R3_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	81: (05) goto pc+8
	; switch (type) {
	90: (b4) w2 = 0
	; tuple->dport = 0;
	91: (63) *(u32 *)(r10 -120) = r2
	last_idx 91 first_idx 75
	regs=4 stack=0 before 90: (b4) w2 = 0
	; switch (type) {
	92: (bf) r1 = r3
	93: (66) if w1 s> 0xa goto pc+6400
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	94: (16) if w1 == 0x0 goto pc+6512
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	95: (16) if w1 == 0x3 goto pc+6400
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	96: (16) if w1 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	97: (05) goto pc+6900
	; if (err < 0)
	6998: (b4) w1 = 1
	; tuple->flags = TUPLE_F_IN;
	6999: (73) *(u8 *)(r10 -115) = r1
	7000: (bf) r2 = r10
	;
	7001: (07) r2 += -128
	; *is_reply = map_lookup_elem(map, tuple) != NULL;
	7002: (bf) r1 = r7
	7003: (85) call bpf_map_lookup_elem#1
	7004: (79) r5 = *(u64 *)(r10 -152)
	7005: (b4) w7 = 0
	7006: (b4) w4 = 0
	7007: (05) goto pc+175
	; if (ret == NAT_PUNT_TO_STACK)
	7183: (b4) w9 = 0
	; struct ipv4_ct_tuple tuple = {};
	7184: (6b) *(u16 *)(r10 -116) = r9
	last_idx 7184 first_idx 7004
	regs=200 stack=0 before 7183: (b4) w9 = 0
	7185: (63) *(u32 *)(r10 -120) = r9
	7186: (b7) r1 = 0
	7187: (7b) *(u64 *)(r10 -128) = r1
	last_idx 7187 first_idx 7004
	regs=2 stack=0 before 7186: (b7) r1 = 0
	; return (void *)(unsigned long)ctx->data_end;
	7188: (61) r2 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	7189: (61) r8 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	7190: (bf) r1 = r8
	7191: (07) r1 += 34
	; if (data + tot_len > data_end)
	7192: (2d) if r1 > r2 goto pc+854
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=pkt(id=0,off=34,r=34,imm=0) R2_w=pkt_end(id=0,off=0,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9_w=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??000000 fp-128_w=00000000 fp-152=ctx
	7193: (7b) *(u64 *)(r10 -160) = r2
	7194: (b4) w4 = -158
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7195: (69) r6 = *(u16 *)(r8 +20)
	; tuple->nexthdr = ip4->protocol;
	7196: (71) r1 = *(u8 *)(r8 +23)
	; tuple->nexthdr = ip4->protocol;
	7197: (73) *(u8 *)(r10 -116) = r1
	; tuple->daddr = ip4->daddr;
	7198: (61) r2 = *(u32 *)(r8 +30)
	; tuple->daddr = ip4->daddr;
	7199: (63) *(u32 *)(r10 -128) = r2
	; tuple->saddr = ip4->saddr;
	7200: (61) r3 = *(u32 *)(r8 +26)
	; tuple->saddr = ip4->saddr;
	7201: (63) *(u32 *)(r10 -124) = r3
	; switch (tuple->nexthdr) {
	7202: (16) if w1 == 0x1 goto pc+732
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv0 R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end
	7203: (63) *(u32 *)(r10 -168) = r7
	last_idx 7203 first_idx 7202
	regs=80 stack=0 before 7202: (16) if w1 == 0x1 goto pc+732
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_rw=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4_w=inv4294967138 R5_w=ctx(id=0,off=0,imm=0) R6_w=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_rw=invP0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9_w=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128_w=mmmmmmmm fp-152=ctx fp-160_w=pkt_end
	parent didn't have regs=80 stack=0 marks
	last_idx 7201 first_idx 7004
	regs=80 stack=0 before 7201: (63) *(u32 *)(r10 -124) = r3
	regs=80 stack=0 before 7200: (61) r3 = *(u32 *)(r8 +26)
	regs=80 stack=0 before 7199: (63) *(u32 *)(r10 -128) = r2
	regs=80 stack=0 before 7198: (61) r2 = *(u32 *)(r8 +30)
	regs=80 stack=0 before 7197: (73) *(u8 *)(r10 -116) = r1
	regs=80 stack=0 before 7196: (71) r1 = *(u8 *)(r8 +23)
	regs=80 stack=0 before 7195: (69) r6 = *(u16 *)(r8 +20)
	regs=80 stack=0 before 7194: (b4) w4 = -158
	regs=80 stack=0 before 7193: (7b) *(u64 *)(r10 -160) = r2
	regs=80 stack=0 before 7192: (2d) if r1 > r2 goto pc+854
	regs=80 stack=0 before 7191: (07) r1 += 34
	regs=80 stack=0 before 7190: (bf) r1 = r8
	regs=80 stack=0 before 7189: (61) r8 = *(u32 *)(r5 +76)
	regs=80 stack=0 before 7188: (61) r2 = *(u32 *)(r5 +80)
	regs=80 stack=0 before 7187: (7b) *(u64 *)(r10 -128) = r1
	regs=80 stack=0 before 7186: (b7) r1 = 0
	regs=80 stack=0 before 7185: (63) *(u32 *)(r10 -120) = r9
	regs=80 stack=0 before 7184: (6b) *(u16 *)(r10 -116) = r9
	regs=80 stack=0 before 7183: (b4) w9 = 0
	regs=80 stack=0 before 7007: (05) goto pc+175
	regs=80 stack=0 before 7006: (b4) w4 = 0
	regs=80 stack=0 before 7005: (b4) w7 = 0
	;
	7204: (71) r7 = *(u8 *)(r8 +14)
	; switch (tuple->nexthdr) {
	7205: (16) if w1 == 0x11 goto pc+1
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7206: (56) if w1 != 0x6 goto pc+29
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv6 R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; struct ipv4_frag_id frag_id = {
	7207: (63) *(u32 *)(r10 -76) = r3
	7208: (63) *(u32 *)(r10 -80) = r2
	; .id = ip4->id,
	7209: (69) r2 = *(u16 *)(r8 +18)
	7210: (b4) w3 = 0
	; struct ipv4_frag_id frag_id = {
	7211: (73) *(u8 *)(r10 -69) = r3
	last_idx 7211 first_idx 7202
	regs=8 stack=0 before 7210: (b4) w3 = 0
	7212: (73) *(u8 *)(r10 -70) = r1
	7213: (6b) *(u16 *)(r10 -72) = r2
	; return ip4->frag_off & bpf_htons(0x3FFF);
	7214: (bc) w1 = w6
	7215: (54) w1 &= 65343
	; if (unlikely(is_fragment)) {
	7216: (16) if w1 == 0x0 goto pc+654
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=65343,var_off=(0x0; 0xff3f)) R2=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R3=invP0 R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; return ctx->len;
	7217: (61) r9 = *(u32 *)(r5 +0)
	7218: (b7) r1 = 0
	; struct metrics_value *entry, new_entry = {};
	7219: (7b) *(u64 *)(r10 -56) = r1
	last_idx 7219 first_idx 7216
	regs=2 stack=0 before 7218: (b7) r1 = 0
	7220: (7b) *(u64 *)(r10 -64) = r1
	7221: (b7) r1 = 521
	; struct metrics_key key = {};
	7222: (7b) *(u64 *)(r10 -144) = r1
	7223: (bf) r2 = r10
	;
	7224: (07) r2 += -144
	; entry = map_lookup_elem(&METRICS_MAP, &key);
	7225: (18) r1 = 0xffff7000ac846c00
	7227: (85) call bpf_map_lookup_elem#1
	; if (entry) {
	7228: (15) if r0 == 0x0 goto pc+616
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; entry->count += 1;
	7229: (79) r1 = *(u64 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7230: (07) r1 += 1
	7231: (7b) *(u64 *)(r0 +0) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; entry->bytes += bytes;
	7232: (79) r1 = *(u64 *)(r0 +8)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7233: (0f) r1 += r9
	7234: (7b) *(u64 *)(r0 +8) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7235: (05) goto pc+620
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7856: (69) r1 = *(u16 *)(r8 +20)
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7857: (54) w1 &= 65311
	7858: (79) r5 = *(u64 *)(r10 -152)
	; if (likely(not_first_fragment))
	7859: (16) if w1 == 0x0 goto pc+11
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0,umax_value=65311,var_off=(0x0; 0xff1f)) R5_w=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7860: (bf) r2 = r10
	;
	7861: (07) r2 += -80
	; tmp = map_lookup_elem(&IPV4_FRAG_DATAGRAMS_MAP, frag_id);
	7862: (18) r1 = 0xffff7001044a2400
	7864: (85) call bpf_map_lookup_elem#1
	; if (!tmp)
	7865: (55) if r0 != 0x0 goto pc+548
	
	from 7865 to 8414: R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; case  4: __it_mob(d, s, 32);
	8414: (61) r1 = *(u32 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	8415: (63) *(u32 *)(r10 -120) = r1
	8416: (05) goto pc-485
	; map_update_elem(&METRICS_MAP, &key, &new_entry, 0);
	7932: (79) r5 = *(u64 *)(r10 -152)
	7933: (61) r7 = *(u32 *)(r10 -168)
	7934: (b4) w4 = 0
	7935: (54) w6 &= -225
	7936: (b4) w1 = 1
	; if (IS_ERR(ret)) goto skip_crab;
	7937: (16) if w4 == 0x2 goto pc+1
	last_idx 7937 first_idx 8414
	regs=10 stack=0 before 7936: (b4) w1 = 1
	regs=10 stack=0 before 7935: (54) w6 &= -225
	regs=10 stack=0 before 7934: (b4) w4 = 0
	7938: (b4) w1 = 0
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7939: (54) w6 &= 65535
	7940: (79) r0 = *(u64 *)(r10 -160)
	; if (IS_ERR(ret)) goto skip_crab;
	7941: (56) if w6 != 0x0 goto pc+105
	 R0_w=pkt_end(id=0,off=0,imm=0) R1=inv0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6_w=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	;
	7942: (bc) w2 = w4
	7943: (74) w2 >>= 31
	7944: (4c) w2 |= w1
	; if (IS_ERR(ret)) goto skip_crab;
	7945: (56) if w2 != 0x0 goto pc+101
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	7946: (71) r1 = *(u8 *)(r8 +23)
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	7947: (56) if w1 != 0x6 goto pc+99
	 R0=pkt_end(id=0,off=0,imm=0) R1=inv6 R2=invP0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7948: (07) r8 += 14
	; return ip4->ihl * 4;
	7949: (71) r1 = *(u8 *)(r8 +0)
	; return ip4->ihl * 4;
	7950: (64) w1 <<= 2
	7951: (57) r1 &= 60
	; tcph = (struct tcphdr *)((void*)ip4 + ipv4_hdrlen(ip4));
	7952: (0f) r8 += r1
	last_idx 7952 first_idx 7947
	regs=2 stack=0 before 7951: (57) r1 &= 60
	regs=2 stack=0 before 7950: (64) w1 <<= 2
	regs=2 stack=0 before 7949: (71) r1 = *(u8 *)(r8 +0)
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	7953: (bf) r9 = r8
	7954: (07) r9 += 20
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	7955: (2d) if r9 > r0 goto pc+91
	 R0=pkt_end(id=0,off=0,imm=0) R1_w=invP(id=0,umax_value=60,var_off=(0x0; 0x3c)) R2=invP0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=9,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7956: (b4) w2 = 15
	;
	7957: (61) r1 = *(u32 *)(r5 +80)
	; offset = tcph->doff * 4;
	7958: (69) r3 = *(u16 *)(r8 +12)
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	7959: (74) w3 >>= 2
	7960: (54) w3 &= 60
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	7961: (04) w3 += -20
	7962: (05) goto pc+6
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=inv(id=0,umax_value=252,var_off=(0x0; 0xfc)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	last_idx 7968 first_idx 8017
	regs=4 stack=0 before 7967: (bc) w4 = w8
	regs=4 stack=0 before 7966: (04) w2 += -1
	regs=4 stack=0 before 7965: (79) r5 = *(u64 *)(r10 -152)
	regs=4 stack=0 before 8020: (05) goto pc-56
	regs=4 stack=0 before 8019: (1c) w3 -= w4
	regs=4 stack=0 before 8018: (0f) r9 += r4
	regs=4 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=9,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_r=invP0 R9_r=pkt(id=9,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 8007 first_idx 7992
	regs=4 stack=0 before 8007: (bd) if r4 <= r1 goto pc+9
	regs=4 stack=0 before 8006: (07) r4 += 2
	regs=4 stack=0 before 8005: (bf) r4 = r9
	regs=4 stack=0 before 7995: (56) if w5 != 0x0 goto pc+9
	regs=4 stack=0 before 7994: (16) if w5 == 0x2d goto pc+218
	regs=4 stack=0 before 7993: (16) if w5 == 0x1 goto pc-31
	regs=4 stack=0 before 7992: (71) r5 = *(u8 *)(r9 +0)
	 R0=pkt_end(id=0,off=0,imm=0) R1_r=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_rw=invP0 R9_r=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48_r=mmmmmmmm fp-56=00000000 fp-64_r=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160_r=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 7983 first_idx 7969
	regs=4 stack=0 before 7983: (bd) if r4 <= r1 goto pc+8
	regs=4 stack=0 before 7982: (07) r4 += 1
	regs=4 stack=0 before 7981: (bf) r4 = r9
	regs=4 stack=0 before 7972: (56) if w4 != 0x0 goto pc+8
	regs=4 stack=0 before 7971: (54) w4 &= 255
	regs=4 stack=0 before 7970: (bc) w4 = w3
	regs=4 stack=0 before 7969: (bc) w8 = w4
	 R0=pkt_end(id=0,off=0,imm=0) R1_rw=pkt_end(id=0,off=0,imm=0) R2_rw=invP15 R3_rw=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_r=invP0 R5_r=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=9,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_rw=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48_r=mmmmmmmm fp-56=00000000 fp-64_r=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160_r=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 7962 first_idx 7947
	regs=4 stack=0 before 7962: (05) goto pc+6
	regs=4 stack=0 before 7961: (04) w3 += -20
	regs=4 stack=0 before 7960: (54) w3 &= 60
	regs=4 stack=0 before 7959: (74) w3 >>= 2
	regs=4 stack=0 before 7958: (69) r3 = *(u16 *)(r8 +12)
	regs=4 stack=0 before 7957: (61) r1 = *(u32 *)(r5 +80)
	regs=4 stack=0 before 7956: (b4) w2 = 15
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=0,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=20,off=36,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8005
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=21,off=34,r=0,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=36,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8007
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=0,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=36,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=22,off=34,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=0,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=36,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=0,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=36,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7981
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=0,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP9 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4=pkt(id=25,off=36,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=25,off=34,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=0,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=36,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=0,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=36,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=27,off=34,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=0,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=36,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=0,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=36,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7981
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=0,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP4 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4=pkt(id=30,off=36,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=30,off=34,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=0,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=36,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=0,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=36,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=32,off=34,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=0,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	
	from 7994 to 8213: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP1 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=inv45 R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	8213: (bf) r2 = r9
	8214: (07) r2 += 20
	8215: (79) r5 = *(u64 *)(r10 -152)
	8216: (bc) w4 = w8
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	8217: (2d) if r2 > r0 goto pc-171
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=33,off=54,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=invP0 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	8218: (71) r2 = *(u8 *)(r9 +18)
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	8219: (56) if w2 != 0x0 goto pc+107
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=inv0 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=invP0 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	8220: (b4) w4 = -134
	; return (void *)(unsigned long)ctx->data;
	8221: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	8222: (bf) r3 = r2
	8223: (07) r3 += 34
	; if (data + tot_len > data_end)
	8224: (2d) if r3 > r1 goto pc-178
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=pkt(id=0,off=0,r=34,imm=0) R3=pkt(id=0,off=34,r=34,imm=0) R4=inv4294967162 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; masquerade_ip = ip4->saddr;
	8225: (61) r1 = *(u32 *)(r2 +26)
	; masquerade_ip = ip4->saddr;
	8226: (63) *(u32 *)(r10 -80) = r1
	; return ip4->ihl * 4;
	8227: (71) r2 = *(u8 *)(r2 +14)
	; return ip4->ihl * 4;
	8228: (64) w2 <<= 2
	8229: (54) w2 &= 60
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	8230: (04) w2 += 44
	8231: (bf) r3 = r10
	; masquerade_ip = ip4->saddr;
	8232: (07) r3 += -80
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	8233: (bf) r1 = r5
	8234: (b4) w4 = 4
	8235: (b4) w5 = 0
	8236: (85) call bpf_skb_store_bytes#9
	last_idx 8236 first_idx 8224
	regs=10 stack=0 before 8235: (b4) w5 = 0
	regs=10 stack=0 before 8234: (b4) w4 = 4
	8237: (79) r5 = *(u64 *)(r10 -152)
	8238: (b4) w4 = -141
	; if (ret < 0) return DROP_WRITE_ERROR;
	8239: (c6) if w0 s< 0x0 goto pc-193
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R4_w=inv4294967155 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	; return ctx->len;
	8240: (61) r1 = *(u32 *)(r5 +0)
	; __u64 cap_len = min_t(__u64, monitor ? : TRACE_PAYLOAD_LEN,
	8241: (bf) r3 = r1
	8242: (a6) if w1 < 0x80 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=inv(id=35,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=35,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4_w=inv4294967155 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	8243: (b7) r3 = 128
	; __notify_common_hdr(CILIUM_NOTIFY_TRACE, obs_point),
	8244: (61) r2 = *(u32 *)(r5 +68)
	8245: (b7) r4 = 327680
	; msg = (typeof(msg)) {
	8246: (7b) *(u64 *)(r10 -40) = r4
	8247: (18) r4 = 0x1
	8249: (63) *(u32 *)(r10 -48) = r4
	8250: (b4) w4 = 1
	8251: (6b) *(u16 *)(r10 -50) = r4
	8252: (63) *(u32 *)(r10 -56) = r1
	8253: (63) *(u32 *)(r10 -60) = r2
	8254: (b4) w1 = 20776196
	8255: (63) *(u32 *)(r10 -64) = r1
	8256: (b7) r1 = 0
	; case  8: jmp_8:  __it_set(d, 64);
	8257: (7b) *(u64 *)(r10 -32) = r1
	last_idx 8257 first_idx 8237
	regs=2 stack=0 before 8256: (b7) r1 = 0
	8258: (7b) *(u64 *)(r10 -24) = r1
	; msg = (typeof(msg)) {
	8259: (6b) *(u16 *)(r10 -52) = r3
	8260: (b4) w6 = 0
	8261: (63) *(u32 *)(r10 -44) = r6
	last_idx 8261 first_idx 8237
	regs=40 stack=0 before 8260: (b4) w6 = 0
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	8262: (67) r3 <<= 32
	8263: (18) r1 = 0xffffffff
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	8265: (4f) r3 |= r1
	8266: (bf) r4 = r10
	;
	8267: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP,
	8268: (bf) r1 = r5
	8269: (18) r2 = 0xffff7000722cc800
	8271: (b4) w5 = 48
	8272: (85) call bpf_perf_event_output#25
	last_idx 8272 first_idx 8237
	regs=20 stack=0 before 8271: (b4) w5 = 48
	8273: (b4) w1 = 20774914
	; struct debug_msg msg = {
	8274: (63) *(u32 *)(r10 -64) = r1
	8275: (b4) w1 = 50
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	8276: (79) r2 = *(u64 *)(r10 -152)
	8277: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	8278: (63) *(u32 *)(r10 -48) = r1
	8279: (18) r1 = 0x3200000032
	8281: (7b) *(u64 *)(r10 -56) = r1
	8282: (63) *(u32 *)(r10 -60) = r2
	8283: (bf) r4 = r10
	;
	8284: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	8285: (79) r1 = *(u64 *)(r10 -152)
	8286: (18) r2 = 0xffff7000722cc800
	8288: (18) r3 = 0xffffffff
	8290: (b4) w5 = 20
	8291: (85) call bpf_perf_event_output#25
	last_idx 8291 first_idx 8273
	regs=20 stack=0 before 8290: (b4) w5 = 20
	; cilium_dbg3(ctx, DBG_CT_LOOKUP4_1, masquerade_ip, masquerade_ip,
	8292: (61) r1 = *(u32 *)(r10 -80)
	8293: (b4) w2 = 20787202
	; struct debug_msg msg = {
	8294: (63) *(u32 *)(r10 -64) = r2
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	8295: (79) r2 = *(u64 *)(r10 -152)
	8296: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	8297: (63) *(u32 *)(r10 -56) = r1
	8298: (63) *(u32 *)(r10 -52) = r1
	8299: (63) *(u32 *)(r10 -48) = r6
	8300: (63) *(u32 *)(r10 -60) = r2
	8301: (bf) r4 = r10
	;
	8302: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	8303: (79) r1 = *(u64 *)(r10 -152)
	8304: (18) r2 = 0xffff7000722cc800
	8306: (18) r3 = 0xffffffff
	8308: (b4) w5 = 20
	8309: (85) call bpf_perf_event_output#25
	last_idx 8309 first_idx 8273
	regs=20 stack=0 before 8308: (b4) w5 = 20
	8310: (79) r5 = *(u64 *)(r10 -152)
	; return (void *)(unsigned long)ctx->data_end;
	8311: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	8312: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	8313: (07) r2 += 34
	8314: (b4) w4 = -134
	; if (data + tot_len > data_end)
	8315: (2d) if r2 > r1 goto pc-269
	 R0=inv(id=0) R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv4294967162 R5_w=ctx(id=0,off=0,imm=0) R6=invP0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-24=mmmmmmmm fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	; &redir_opt->ip1, 4, 0);
	8316: (07) r9 += 2
	; ret = ctx_store_bytes(ctx, ETH_HLEN + offsetof(struct iphdr, saddr),
	8317: (bf) r1 = r5
	8318: (b4) w2 = 26
	8319: (bf) r3 = r9
	8320: (b4) w4 = 4
	8321: (b4) w5 = 0
	8322: (85) call bpf_skb_store_bytes#9
	R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf
	processed 1463 insns (limit 1000000) max_states_per_insn 3 total_states 58 peak_states 58 mark_read 28
level=warning msg="JoinEP: Failed to load program for host endpoint (cil_to_host)" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" file-path=317_next/bpf_host.o identity=1 ipv4= ipv6= k8sPodName=/ subsys=datapath-loader veth=cilium_host
level=error msg="Error while rewriting endpoint BPF program" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting endpoint changes after BPF regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting proxy redirect removals" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting proxy redirect removals" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting proxy redirect additions" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting proxy redirect additions" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting endpoint changes after BPF regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=info msg="Wrote verifier log to endpoint directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/verifier.log identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=info msg="generating BPF for endpoint failed, keeping stale directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" file-path=317_next_fail identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=317_next_fail endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=317_next endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=warning msg="Regeneration of endpoint failed" bpfCompilation=0s bpfLoadProg=75.7755ms bpfWaitForELF="2.458µs" bpfWriteELF=1.072917ms containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ mapSync="10.167µs" policyCalculation="103.458µs" prepareBuild="461.833µs" proxyConfiguration="5.042µs" proxyPolicyCalculation="85.667µs" proxyWaitForAck=0s reason="one or more identities created or deleted" subsys=endpoint total=83.179959ms waitingForCTClean=1.221458ms waitingForLock=875ns
level=debug msg="Error regenerating endpoint: loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" code=Failure containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=waiting-to-regenerate identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=200
level=debug msg="EventQueue event processing statistics" eventConsumeOffQueueWaitTime=9.43534113s eventEnqueueWaitTime=541ns eventHandlingDuration=83.34625ms eventType="*endpoint.EndpointRegenerationEvent" name=endpoint-317 subsys=eventqueue
level=debug msg="Dequeued endpoint from build queue" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Regenerating endpoint" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ reason="retrying regeneration" startTime="2023-07-12 21:56:49.408894092 +0000 UTC m=+12.772804465" subsys=endpoint
level=debug msg="Regenerating endpoint: retrying regeneration" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=regenerating identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=317_next endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=error msg="endpoint regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Starting policy recalculation..." containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Skipping unnecessary endpoint policy recalculation" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ policyChanged=true policyRevision.next=1 policyRevision.repo=1 subsys=endpoint
level=debug msg="Endpoint has no IP addresses" endpointID=317 subsys=envoy-manager
level=debug msg="BPF header file hashed (was: \"\")" bpfHeaderfileHash=0f5fa9a0ac774df439d9f3dc0bdbff52d824f5c229dffe9c8ab4b3a39b7c2977 containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="writing header file" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/ep_config.h identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="writing header file with DNSRules" DNSRules="map[]" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/ep_config.h identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Preparing to compile BPF" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ regeneration-level=rewrite+load subsys=endpoint
level=debug msg="Load 1-min: 6.54 5-min: 2.69 15min: 2.09" endpointID=317 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2488 (63.27%) Free: 124 Buffers: 10 Cached: 1309" endpointID=317 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1023 (99.99%) Free: 0" endpointID=317 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 5.55% MEM: 2.31% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 90 VMS: 850 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_65535
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_65535
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_host.o subsys=elf template-path=/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e/bpf_host.o
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_00317
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_00317
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_host_cilium_net.o subsys=elf template-path=317_next/bpf_host.o
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_00317
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_00317
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_netdev_eth0.o subsys=elf template-path=317_next/bpf_host.o
level=debug msg="Loading CollectionSpec from ELF" device=cilium_host ifindex=5 objPath=317_next/bpf_host.o subsys=datapath-loader
level=debug msg="Loading Collection into kernel" device=cilium_host ifindex=5 objPath=317_next/bpf_host.o subsys=datapath-loader
Verifier error: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)
Verifier log: load program: permission denied:
	btf_vmlinux is malformed
	R1 type=ctx expected=fp
	; int tail_handle_snat_fwd_ipv4(struct __ctx_buff *ctx)
	0: (bf) r5 = r1
	1: (b4) w9 = 0
	; ctx->cb[off] = data;
	2: (63) *(u32 *)(r5 +52) = r9
	; return (void *)(unsigned long)ctx->data_end;
	3: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	4: (61) r6 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	5: (bf) r2 = r6
	6: (07) r2 += 34
	; __s8 ext_err = 0;
	7: (b4) w7 = 0
	8: (b4) w4 = 0
	9: (7b) *(u64 *)(r10 -152) = r5
	; if (data + tot_len > data_end)
	10: (2d) if r2 > r1 goto pc+7173
	 R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	;
	11: (61) r1 = *(u32 *)(r6 +26)
	; if (DIRECT_ROUTING_DEV_IFINDEX == NATIVE_DEV_IFINDEX &&
	12: (56) if w1 != 0x20015ac goto pc+3
	 R1_w=inv33559980 R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	13: (18) r2 = 0x0
	15: (16) if w2 == 0x41 goto pc+85
	last_idx 15 first_idx 15
	 R1_w=inv33559980 R2_rw=invP0 R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	parent didn't have regs=4 stack=0 marks
	last_idx 13 first_idx 0
	regs=4 stack=0 before 13: (18) r2 = 0x0
	; key.ip4 = ip;
	16: (63) *(u32 *)(r10 -64) = r1
	17: (b7) r7 = 0
	; struct endpoint_key key = {};
	18: (63) *(u32 *)(r10 -48) = r7
	last_idx 18 first_idx 15
	regs=80 stack=0 before 17: (b7) r7 = 0
	19: (63) *(u32 *)(r10 -52) = r7
	20: (63) *(u32 *)(r10 -56) = r7
	21: (63) *(u32 *)(r10 -60) = r7
	22: (b4) w1 = 1
	; key.family = ENDPOINT_KEY_IPV4;
	23: (73) *(u8 *)(r10 -48) = r1
	24: (bf) r2 = r10
	;
	25: (07) r2 += -64
	; return map_lookup_elem(&ENDPOINTS_MAP, &key);
	26: (18) r1 = 0xffff700159c9b400
	28: (85) call bpf_map_lookup_elem#1
	29: (bf) r8 = r0
	; remote_ep = lookup_ip4_remote_endpoint(ip4->daddr, 0);
	30: (61) r1 = *(u32 *)(r6 +30)
	; .ip4 = addr,
	31: (7b) *(u64 *)(r10 -48) = r7
	32: (63) *(u32 *)(r10 -56) = r1
	33: (18) r1 = 0x100000000000040
	; .lpm_key = { IPCACHE_PREFIX_LEN(prefix), {} },
	35: (7b) *(u64 *)(r10 -64) = r1
	36: (b4) w7 = 0
	; .ip4 = addr,
	37: (63) *(u32 *)(r10 -52) = r7
	last_idx 37 first_idx 29
	regs=80 stack=0 before 36: (b4) w7 = 0
	38: (bf) r2 = r10
	;
	39: (07) r2 += -64
	; return map_lookup_elem(map, &key);
	40: (18) r1 = 0xffff700104950c00
	42: (85) call bpf_map_lookup_elem#1
	43: (79) r5 = *(u64 *)(r10 -152)
	44: (b4) w4 = 0
	; if (local_ep) {
	45: (15) if r8 == 0x0 goto pc+7138
	 R0_w=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=invP0 R8_w=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv0 R10=fp0 fp-48_w=mmmmmmmm fp-56=mmmmmmmm fp-64_w=mmmmmmmm fp-152=ctx
	; .daddr = ip4->daddr,
	46: (61) r1 = *(u32 *)(r6 +30)
	; struct ipv4_ct_tuple tuple = {
	47: (63) *(u32 *)(r10 -128) = r1
	; .saddr = ip4->saddr
	48: (61) r1 = *(u32 *)(r6 +26)
	; struct ipv4_ct_tuple tuple = {
	49: (63) *(u32 *)(r10 -124) = r1
	50: (b4) w2 = 0
	51: (63) *(u32 *)(r10 -120) = r2
	last_idx 51 first_idx 29
	regs=4 stack=0 before 50: (b4) w2 = 0
	; .nexthdr = ip4->protocol,
	52: (71) r1 = *(u8 *)(r6 +23)
	; struct ipv4_ct_tuple tuple = {
	53: (73) *(u8 *)(r10 -115) = r2
	;
	54: (18) r7 = 0xffff7001044a2800
	56: (16) if w1 == 0x6 goto pc+2
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0?0000 fp-128=mmmmmmmm fp-152=ctx
	57: (18) r7 = 0xffff7000ef1d5000
	; struct ipv4_ct_tuple tuple = {
	59: (73) *(u8 *)(r10 -116) = r1
	; return ip4->ihl * 4;
	60: (71) r8 = *(u8 *)(r6 +14)
	; return ip4->ihl * 4;
	61: (64) w8 <<= 2
	62: (54) w8 &= 60
	; ct_is_reply4(get_ct_map4(&tuple), ctx, ETH_HLEN +
	63: (04) w8 += 14
	; switch (tuple->nexthdr) {
	64: (16) if w1 == 0x11 goto pc+114
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8_w=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	65: (16) if w1 == 0x6 goto pc+113
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	66: (56) if w1 != 0x1 goto pc+6938
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv1 R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	67: (b4) w1 = 0
	; __be16 identifier = 0;
	68: (6b) *(u16 *)(r10 -64) = r1
	last_idx 68 first_idx 65
	regs=2 stack=0 before 67: (b4) w1 = 0
	69: (bf) r3 = r10
	;
	70: (07) r3 += -80
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	71: (bf) r1 = r5
	72: (bc) w2 = w8
	73: (b4) w4 = 1
	74: (85) call bpf_skb_load_bytes#26
	last_idx 74 first_idx 65
	regs=10 stack=0 before 73: (b4) w4 = 1
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	75: (c6) if w0 s< 0x0 goto pc+6928
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	76: (71) r3 = *(u8 *)(r10 -80)
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	77: (bc) w2 = w3
	78: (44) w2 |= 8
	79: (79) r1 = *(u64 *)(r10 -152)
	80: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=ctx(id=0,off=0,imm=0) R2_w=inv(id=0,umin_value=8,umax_value=255,var_off=(0x8; 0xf7)) R3_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	81: (05) goto pc+8
	; switch (type) {
	90: (b4) w2 = 0
	; tuple->dport = 0;
	91: (63) *(u32 *)(r10 -120) = r2
	last_idx 91 first_idx 75
	regs=4 stack=0 before 90: (b4) w2 = 0
	; switch (type) {
	92: (bf) r1 = r3
	93: (66) if w1 s> 0xa goto pc+6400
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	94: (16) if w1 == 0x0 goto pc+6512
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	95: (16) if w1 == 0x3 goto pc+6400
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	96: (16) if w1 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	97: (05) goto pc+6900
	; if (err < 0)
	6998: (b4) w1 = 1
	; tuple->flags = TUPLE_F_IN;
	6999: (73) *(u8 *)(r10 -115) = r1
	7000: (bf) r2 = r10
	;
	7001: (07) r2 += -128
	; *is_reply = map_lookup_elem(map, tuple) != NULL;
	7002: (bf) r1 = r7
	7003: (85) call bpf_map_lookup_elem#1
	7004: (79) r5 = *(u64 *)(r10 -152)
	7005: (b4) w7 = 0
	7006: (b4) w4 = 0
	7007: (05) goto pc+175
	; if (ret == NAT_PUNT_TO_STACK)
	7183: (b4) w9 = 0
	; struct ipv4_ct_tuple tuple = {};
	7184: (6b) *(u16 *)(r10 -116) = r9
	last_idx 7184 first_idx 7004
	regs=200 stack=0 before 7183: (b4) w9 = 0
	7185: (63) *(u32 *)(r10 -120) = r9
	7186: (b7) r1 = 0
	7187: (7b) *(u64 *)(r10 -128) = r1
	last_idx 7187 first_idx 7004
	regs=2 stack=0 before 7186: (b7) r1 = 0
	; return (void *)(unsigned long)ctx->data_end;
	7188: (61) r2 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	7189: (61) r8 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	7190: (bf) r1 = r8
	7191: (07) r1 += 34
	; if (data + tot_len > data_end)
	7192: (2d) if r1 > r2 goto pc+854
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=pkt(id=0,off=34,r=34,imm=0) R2_w=pkt_end(id=0,off=0,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9_w=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??000000 fp-128_w=00000000 fp-152=ctx
	7193: (7b) *(u64 *)(r10 -160) = r2
	7194: (b4) w4 = -158
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7195: (69) r6 = *(u16 *)(r8 +20)
	; tuple->nexthdr = ip4->protocol;
	7196: (71) r1 = *(u8 *)(r8 +23)
	; tuple->nexthdr = ip4->protocol;
	7197: (73) *(u8 *)(r10 -116) = r1
	; tuple->daddr = ip4->daddr;
	7198: (61) r2 = *(u32 *)(r8 +30)
	; tuple->daddr = ip4->daddr;
	7199: (63) *(u32 *)(r10 -128) = r2
	; tuple->saddr = ip4->saddr;
	7200: (61) r3 = *(u32 *)(r8 +26)
	; tuple->saddr = ip4->saddr;
	7201: (63) *(u32 *)(r10 -124) = r3
	; switch (tuple->nexthdr) {
	7202: (16) if w1 == 0x1 goto pc+732
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv0 R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end
	7203: (63) *(u32 *)(r10 -168) = r7
	last_idx 7203 first_idx 7202
	regs=80 stack=0 before 7202: (16) if w1 == 0x1 goto pc+732
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_rw=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4_w=inv4294967138 R5_w=ctx(id=0,off=0,imm=0) R6_w=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_rw=invP0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9_w=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128_w=mmmmmmmm fp-152=ctx fp-160_w=pkt_end
	parent didn't have regs=80 stack=0 marks
	last_idx 7201 first_idx 7004
	regs=80 stack=0 before 7201: (63) *(u32 *)(r10 -124) = r3
	regs=80 stack=0 before 7200: (61) r3 = *(u32 *)(r8 +26)
	regs=80 stack=0 before 7199: (63) *(u32 *)(r10 -128) = r2
	regs=80 stack=0 before 7198: (61) r2 = *(u32 *)(r8 +30)
	regs=80 stack=0 before 7197: (73) *(u8 *)(r10 -116) = r1
	regs=80 stack=0 before 7196: (71) r1 = *(u8 *)(r8 +23)
	regs=80 stack=0 before 7195: (69) r6 = *(u16 *)(r8 +20)
	regs=80 stack=0 before 7194: (b4) w4 = -158
	regs=80 stack=0 before 7193: (7b) *(u64 *)(r10 -160) = r2
	regs=80 stack=0 before 7192: (2d) if r1 > r2 goto pc+854
	regs=80 stack=0 before 7191: (07) r1 += 34
	regs=80 stack=0 before 7190: (bf) r1 = r8
	regs=80 stack=0 before 7189: (61) r8 = *(u32 *)(r5 +76)
	regs=80 stack=0 before 7188: (61) r2 = *(u32 *)(r5 +80)
	regs=80 stack=0 before 7187: (7b) *(u64 *)(r10 -128) = r1
	regs=80 stack=0 before 7186: (b7) r1 = 0
	regs=80 stack=0 before 7185: (63) *(u32 *)(r10 -120) = r9
	regs=80 stack=0 before 7184: (6b) *(u16 *)(r10 -116) = r9
	regs=80 stack=0 before 7183: (b4) w9 = 0
	regs=80 stack=0 before 7007: (05) goto pc+175
	regs=80 stack=0 before 7006: (b4) w4 = 0
	regs=80 stack=0 before 7005: (b4) w7 = 0
	;
	7204: (71) r7 = *(u8 *)(r8 +14)
	; switch (tuple->nexthdr) {
	7205: (16) if w1 == 0x11 goto pc+1
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7206: (56) if w1 != 0x6 goto pc+29
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv6 R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; struct ipv4_frag_id frag_id = {
	7207: (63) *(u32 *)(r10 -76) = r3
	7208: (63) *(u32 *)(r10 -80) = r2
	; .id = ip4->id,
	7209: (69) r2 = *(u16 *)(r8 +18)
	7210: (b4) w3 = 0
	; struct ipv4_frag_id frag_id = {
	7211: (73) *(u8 *)(r10 -69) = r3
	last_idx 7211 first_idx 7202
	regs=8 stack=0 before 7210: (b4) w3 = 0
	7212: (73) *(u8 *)(r10 -70) = r1
	7213: (6b) *(u16 *)(r10 -72) = r2
	; return ip4->frag_off & bpf_htons(0x3FFF);
	7214: (bc) w1 = w6
	7215: (54) w1 &= 65343
	; if (unlikely(is_fragment)) {
	7216: (16) if w1 == 0x0 goto pc+654
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=65343,var_off=(0x0; 0xff3f)) R2=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R3=invP0 R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; return ctx->len;
	7217: (61) r9 = *(u32 *)(r5 +0)
	7218: (b7) r1 = 0
	; struct metrics_value *entry, new_entry = {};
	7219: (7b) *(u64 *)(r10 -56) = r1
	last_idx 7219 first_idx 7216
	regs=2 stack=0 before 7218: (b7) r1 = 0
	7220: (7b) *(u64 *)(r10 -64) = r1
	7221: (b7) r1 = 521
	; struct metrics_key key = {};
	7222: (7b) *(u64 *)(r10 -144) = r1
	7223: (bf) r2 = r10
	;
	7224: (07) r2 += -144
	; entry = map_lookup_elem(&METRICS_MAP, &key);
	7225: (18) r1 = 0xffff7000ac846c00
	7227: (85) call bpf_map_lookup_elem#1
	; if (entry) {
	7228: (15) if r0 == 0x0 goto pc+616
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; entry->count += 1;
	7229: (79) r1 = *(u64 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7230: (07) r1 += 1
	7231: (7b) *(u64 *)(r0 +0) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; entry->bytes += bytes;
	7232: (79) r1 = *(u64 *)(r0 +8)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7233: (0f) r1 += r9
	7234: (7b) *(u64 *)(r0 +8) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7235: (05) goto pc+620
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7856: (69) r1 = *(u16 *)(r8 +20)
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7857: (54) w1 &= 65311
	7858: (79) r5 = *(u64 *)(r10 -152)
	; if (likely(not_first_fragment))
	7859: (16) if w1 == 0x0 goto pc+11
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0,umax_value=65311,var_off=(0x0; 0xff1f)) R5_w=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7860: (bf) r2 = r10
	;
	7861: (07) r2 += -80
	; tmp = map_lookup_elem(&IPV4_FRAG_DATAGRAMS_MAP, frag_id);
	7862: (18) r1 = 0xffff7001044a2400
	7864: (85) call bpf_map_lookup_elem#1
	; if (!tmp)
	7865: (55) if r0 != 0x0 goto pc+548
	
	from 7865 to 8414: R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; case  4: __it_mob(d, s, 32);
	8414: (61) r1 = *(u32 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	8415: (63) *(u32 *)(r10 -120) = r1
	8416: (05) goto pc-485
	; map_update_elem(&METRICS_MAP, &key, &new_entry, 0);
	7932: (79) r5 = *(u64 *)(r10 -152)
	7933: (61) r7 = *(u32 *)(r10 -168)
	7934: (b4) w4 = 0
	7935: (54) w6 &= -225
	7936: (b4) w1 = 1
	; if (IS_ERR(ret)) goto skip_crab;
	7937: (16) if w4 == 0x2 goto pc+1
	last_idx 7937 first_idx 8414
	regs=10 stack=0 before 7936: (b4) w1 = 1
	regs=10 stack=0 before 7935: (54) w6 &= -225
	regs=10 stack=0 before 7934: (b4) w4 = 0
	7938: (b4) w1 = 0
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7939: (54) w6 &= 65535
	7940: (79) r0 = *(u64 *)(r10 -160)
	; if (IS_ERR(ret)) goto skip_crab;
	7941: (56) if w6 != 0x0 goto pc+105
	 R0_w=pkt_end(id=0,off=0,imm=0) R1=inv0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6_w=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	;
	7942: (bc) w2 = w4
	7943: (74) w2 >>= 31
	7944: (4c) w2 |= w1
	; if (IS_ERR(ret)) goto skip_crab;
	7945: (56) if w2 != 0x0 goto pc+101
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	7946: (71) r1 = *(u8 *)(r8 +23)
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	7947: (56) if w1 != 0x6 goto pc+99
	 R0=pkt_end(id=0,off=0,imm=0) R1=inv6 R2=invP0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7948: (07) r8 += 14
	; return ip4->ihl * 4;
	7949: (71) r1 = *(u8 *)(r8 +0)
	; return ip4->ihl * 4;
	7950: (64) w1 <<= 2
	7951: (57) r1 &= 60
	; tcph = (struct tcphdr *)((void*)ip4 + ipv4_hdrlen(ip4));
	7952: (0f) r8 += r1
	last_idx 7952 first_idx 7947
	regs=2 stack=0 before 7951: (57) r1 &= 60
	regs=2 stack=0 before 7950: (64) w1 <<= 2
	regs=2 stack=0 before 7949: (71) r1 = *(u8 *)(r8 +0)
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	7953: (bf) r9 = r8
	7954: (07) r9 += 20
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	7955: (2d) if r9 > r0 goto pc+91
	 R0=pkt_end(id=0,off=0,imm=0) R1_w=invP(id=0,umax_value=60,var_off=(0x0; 0x3c)) R2=invP0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=9,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7956: (b4) w2 = 15
	;
	7957: (61) r1 = *(u32 *)(r5 +80)
	; offset = tcph->doff * 4;
	7958: (69) r3 = *(u16 *)(r8 +12)
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	7959: (74) w3 >>= 2
	7960: (54) w3 &= 60
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	7961: (04) w3 += -20
	7962: (05) goto pc+6
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=inv(id=0,umax_value=252,var_off=(0x0; 0xfc)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	last_idx 7968 first_idx 8017
	regs=4 stack=0 before 7967: (bc) w4 = w8
	regs=4 stack=0 before 7966: (04) w2 += -1
	regs=4 stack=0 before 7965: (79) r5 = *(u64 *)(r10 -152)
	regs=4 stack=0 before 8020: (05) goto pc-56
	regs=4 stack=0 before 8019: (1c) w3 -= w4
	regs=4 stack=0 before 8018: (0f) r9 += r4
	regs=4 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=9,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_r=invP0 R9_r=pkt(id=9,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 8007 first_idx 7992
	regs=4 stack=0 before 8007: (bd) if r4 <= r1 goto pc+9
	regs=4 stack=0 before 8006: (07) r4 += 2
	regs=4 stack=0 before 8005: (bf) r4 = r9
	regs=4 stack=0 before 7995: (56) if w5 != 0x0 goto pc+9
	regs=4 stack=0 before 7994: (16) if w5 == 0x2d goto pc+218
	regs=4 stack=0 before 7993: (16) if w5 == 0x1 goto pc-31
	regs=4 stack=0 before 7992: (71) r5 = *(u8 *)(r9 +0)
	 R0=pkt_end(id=0,off=0,imm=0) R1_r=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_rw=invP0 R9_r=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48_r=mmmmmmmm fp-56=00000000 fp-64_r=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160_r=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 7983 first_idx 7969
	regs=4 stack=0 before 7983: (bd) if r4 <= r1 goto pc+8
	regs=4 stack=0 before 7982: (07) r4 += 1
	regs=4 stack=0 before 7981: (bf) r4 = r9
	regs=4 stack=0 before 7972: (56) if w4 != 0x0 goto pc+8
	regs=4 stack=0 before 7971: (54) w4 &= 255
	regs=4 stack=0 before 7970: (bc) w4 = w3
	regs=4 stack=0 before 7969: (bc) w8 = w4
	 R0=pkt_end(id=0,off=0,imm=0) R1_rw=pkt_end(id=0,off=0,imm=0) R2_rw=invP15 R3_rw=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_r=invP0 R5_r=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=9,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_rw=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48_r=mmmmmmmm fp-56=00000000 fp-64_r=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160_r=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 7962 first_idx 7947
	regs=4 stack=0 before 7962: (05) goto pc+6
	regs=4 stack=0 before 7961: (04) w3 += -20
	regs=4 stack=0 before 7960: (54) w3 &= 60
	regs=4 stack=0 before 7959: (74) w3 >>= 2
	regs=4 stack=0 before 7958: (69) r3 = *(u16 *)(r8 +12)
	regs=4 stack=0 before 7957: (61) r1 = *(u32 *)(r5 +80)
	regs=4 stack=0 before 7956: (b4) w2 = 15
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=0,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=20,off=36,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8005
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=21,off=34,r=0,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=36,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8007
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=0,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=36,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=22,off=34,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=0,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=36,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=0,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=36,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7981
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=0,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP9 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4=pkt(id=25,off=36,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=25,off=34,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=0,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=36,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=0,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=36,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=27,off=34,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=0,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=36,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=0,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=36,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7981
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=0,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP4 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4=pkt(id=30,off=36,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=30,off=34,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=0,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=36,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=0,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=36,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=32,off=34,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=0,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	
	from 7994 to 8213: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP1 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=inv45 R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	8213: (bf) r2 = r9
	8214: (07) r2 += 20
	8215: (79) r5 = *(u64 *)(r10 -152)
	8216: (bc) w4 = w8
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	8217: (2d) if r2 > r0 goto pc-171
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=33,off=54,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=invP0 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	8218: (71) r2 = *(u8 *)(r9 +18)
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	8219: (56) if w2 != 0x0 goto pc+107
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=inv0 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=invP0 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	8220: (b4) w4 = -134
	; return (void *)(unsigned long)ctx->data;
	8221: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	8222: (bf) r3 = r2
	8223: (07) r3 += 34
	; if (data + tot_len > data_end)
	8224: (2d) if r3 > r1 goto pc-178
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=pkt(id=0,off=0,r=34,imm=0) R3=pkt(id=0,off=34,r=34,imm=0) R4=inv4294967162 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; masquerade_ip = ip4->saddr;
	8225: (61) r1 = *(u32 *)(r2 +26)
	; masquerade_ip = ip4->saddr;
	8226: (63) *(u32 *)(r10 -80) = r1
	; return ip4->ihl * 4;
	8227: (71) r2 = *(u8 *)(r2 +14)
	; return ip4->ihl * 4;
	8228: (64) w2 <<= 2
	8229: (54) w2 &= 60
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	8230: (04) w2 += 44
	8231: (bf) r3 = r10
	; masquerade_ip = ip4->saddr;
	8232: (07) r3 += -80
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	8233: (bf) r1 = r5
	8234: (b4) w4 = 4
	8235: (b4) w5 = 0
	8236: (85) call bpf_skb_store_bytes#9
	last_idx 8236 first_idx 8224
	regs=10 stack=0 before 8235: (b4) w5 = 0
	regs=10 stack=0 before 8234: (b4) w4 = 4
	8237: (79) r5 = *(u64 *)(r10 -152)
	8238: (b4) w4 = -141
	; if (ret < 0) return DROP_WRITE_ERROR;
	8239: (c6) if w0 s< 0x0 goto pc-193
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R4_w=inv4294967155 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	; return ctx->len;
	8240: (61) r1 = *(u32 *)(r5 +0)
	; __u64 cap_len = min_t(__u64, monitor ? : TRACE_PAYLOAD_LEN,
	8241: (bf) r3 = r1
	8242: (a6) if w1 < 0x80 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=inv(id=35,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=35,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4_w=inv4294967155 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	8243: (b7) r3 = 128
	; __notify_common_hdr(CILIUM_NOTIFY_TRACE, obs_point),
	8244: (61) r2 = *(u32 *)(r5 +68)
	8245: (b7) r4 = 327680
	; msg = (typeof(msg)) {
	8246: (7b) *(u64 *)(r10 -40) = r4
	8247: (18) r4 = 0x1
	8249: (63) *(u32 *)(r10 -48) = r4
	8250: (b4) w4 = 1
	8251: (6b) *(u16 *)(r10 -50) = r4
	8252: (63) *(u32 *)(r10 -56) = r1
	8253: (63) *(u32 *)(r10 -60) = r2
	8254: (b4) w1 = 20776196
	8255: (63) *(u32 *)(r10 -64) = r1
	8256: (b7) r1 = 0
	; case  8: jmp_8:  __it_set(d, 64);
	8257: (7b) *(u64 *)(r10 -32) = r1
	last_idx 8257 first_idx 8237
	regs=2 stack=0 before 8256: (b7) r1 = 0
	8258: (7b) *(u64 *)(r10 -24) = r1
	; msg = (typeof(msg)) {
	8259: (6b) *(u16 *)(r10 -52) = r3
	8260: (b4) w6 = 0
	8261: (63) *(u32 *)(r10 -44) = r6
	last_idx 8261 first_idx 8237
	regs=40 stack=0 before 8260: (b4) w6 = 0
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	8262: (67) r3 <<= 32
	8263: (18) r1 = 0xffffffff
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	8265: (4f) r3 |= r1
	8266: (bf) r4 = r10
	;
	8267: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP,
	8268: (bf) r1 = r5
	8269: (18) r2 = 0xffff7000722cc800
	8271: (b4) w5 = 48
	8272: (85) call bpf_perf_event_output#25
	last_idx 8272 first_idx 8237
	regs=20 stack=0 before 8271: (b4) w5 = 48
	8273: (b4) w1 = 20774914
	; struct debug_msg msg = {
	8274: (63) *(u32 *)(r10 -64) = r1
	8275: (b4) w1 = 50
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	8276: (79) r2 = *(u64 *)(r10 -152)
	8277: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	8278: (63) *(u32 *)(r10 -48) = r1
	8279: (18) r1 = 0x3200000032
	8281: (7b) *(u64 *)(r10 -56) = r1
	8282: (63) *(u32 *)(r10 -60) = r2
	8283: (bf) r4 = r10
	;
	8284: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	8285: (79) r1 = *(u64 *)(r10 -152)
	8286: (18) r2 = 0xffff7000722cc800
	8288: (18) r3 = 0xffffffff
	8290: (b4) w5 = 20
	8291: (85) call bpf_perf_event_output#25
	last_idx 8291 first_idx 8273
	regs=20 stack=0 before 8290: (b4) w5 = 20
	; cilium_dbg3(ctx, DBG_CT_LOOKUP4_1, masquerade_ip, masquerade_ip,
	8292: (61) r1 = *(u32 *)(r10 -80)
	8293: (b4) w2 = 20787202
	; struct debug_msg msg = {
	8294: (63) *(u32 *)(r10 -64) = r2
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	8295: (79) r2 = *(u64 *)(r10 -152)
	8296: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	8297: (63) *(u32 *)(r10 -56) = r1
	8298: (63) *(u32 *)(r10 -52) = r1
	8299: (63) *(u32 *)(r10 -48) = r6
	8300: (63) *(u32 *)(r10 -60) = r2
	8301: (bf) r4 = r10
	;
	8302: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	8303: (79) r1 = *(u64 *)(r10 -152)
	8304: (18) r2 = 0xffff7000722cc800
	8306: (18) r3 = 0xffffffff
	8308: (b4) w5 = 20
	8309: (85) call bpf_perf_event_output#25
	last_idx 8309 first_idx 8273
	regs=20 stack=0 before 8308: (b4) w5 = 20
	8310: (79) r5 = *(u64 *)(r10 -152)
	; return (void *)(unsigned long)ctx->data_end;
	8311: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	8312: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	8313: (07) r2 += 34
	8314: (b4) w4 = -134
	; if (data + tot_len > data_end)
	8315: (2d) if r2 > r1 goto pc-269
	 R0=inv(id=0) R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv4294967162 R5_w=ctx(id=0,off=0,imm=0) R6=invP0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-24=mmmmmmmm fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	; &redir_opt->ip1, 4, 0);
	8316: (07) r9 += 2
	; ret = ctx_store_bytes(ctx, ETH_HLEN + offsetof(struct iphdr, saddr),
	8317: (bf) r1 = r5
	8318: (b4) w2 = 26
	8319: (bf) r3 = r9
	8320: (b4) w4 = 4
	8321: (b4) w5 = 0
	8322: (85) call bpf_skb_store_bytes#9
	R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf
	processed 1463 insns (limit 1000000) max_states_per_insn 3 total_states 58 peak_states 58 mark_read 28
level=warning msg="JoinEP: Failed to load program for host endpoint (cil_to_host)" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" file-path=317_next/bpf_host.o identity=1 ipv4= ipv6= k8sPodName=/ subsys=datapath-loader veth=cilium_host
level=error msg="Error while rewriting endpoint BPF program" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting endpoint changes after BPF regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting proxy redirect removals" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting proxy redirect removals" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting proxy redirect additions" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting proxy redirect additions" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting endpoint changes after BPF regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=info msg="Wrote verifier log to endpoint directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/verifier.log identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=info msg="generating BPF for endpoint failed, keeping stale directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" file-path=317_next_fail identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=317_next_fail endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=317_next endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Completed endpoint regeneration with no pending regeneration requests" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=ready identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=warning msg="Regeneration of endpoint failed" bpfCompilation=0s bpfLoadProg=148.351084ms bpfWaitForELF="2.708µs" bpfWriteELF="950.875µs" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ mapSync="10.625µs" policyCalculation="48.458µs" prepareBuild="389µs" proxyConfiguration="5.75µs" proxyPolicyCalculation="5.334µs" proxyWaitForAck=0s reason="retrying regeneration" subsys=endpoint total=153.877541ms waitingForCTClean="530.959µs" waitingForLock=709ns
level=debug msg="Error regenerating endpoint: loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" code=Failure containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=ready identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=200
level=debug msg="EventQueue event processing statistics" eventConsumeOffQueueWaitTime=82.484042ms eventEnqueueWaitTime=292ns eventHandlingDuration=153.965875ms eventType="*endpoint.EndpointRegenerationEvent" name=endpoint-317 subsys=eventqueue
level=error msg="endpoint regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Controller func execution time: 9.786633255s" name=endpoint-317-regeneration-recovery subsys=controller uuid=e7863fbe-c1cf-4ee3-ba58-7391bc06fe4a
level=debug msg="Controller run failed" consecutiveErrors=1 error="regeneration recovery failed" name=endpoint-317-regeneration-recovery subsys=controller uuid=e7863fbe-c1cf-4ee3-ba58-7391bc06fe4a
level=debug msg="Skipping CiliumEndpoint update because it has no k8s pod name" containerID= controller="sync-to-k8s-ciliumendpoint (317)" datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpointsynchronizer
level=debug msg="Controller func execution time: 55.75µs" name="sync-to-k8s-ciliumendpoint (317)" subsys=controller uuid=bb1e5172-6dc8-48cd-aba8-7e6f05e59668
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="received signal that regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Triggering endpoint regeneration due to retrying regeneration" code=OK containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=waiting-to-regenerate identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=0
level=debug msg="Dequeued endpoint from build queue" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Regenerating endpoint" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh reason="retrying regeneration" startTime="2023-07-12 21:56:50.285748426 +0000 UTC m=+13.649658757" subsys=endpoint
level=debug msg="Regenerating endpoint: retrying regeneration" code=OK containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=regenerating identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=0
level=debug msg="removing directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 directory=1197_next endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Starting policy recalculation..." containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Skipping unnecessary endpoint policy recalculation" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyChanged=true policyRevision.next=1 policyRevision.repo=1 subsys=endpoint
level=debug msg="preparing new cache transaction: upserting 1 entries, deleting 0 entries" subsys=xds xdsCachedVersion=10 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="inserting resource into cache" subsys=xds xdsCachedVersion=10 xdsResourceName=1197 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="committing cache transaction and notifying of new version" subsys=xds xdsCachedVersion=10 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="BPF header file hashed (was: \"\")" bpfHeaderfileHash=7893731b6685475dfe5360e1b8a61cf84c83a2bf5f9ee995962246f1092743d5 containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="writing header file" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 file-path=1197_next/ep_config.h identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="writing header file with DNSRules" DNSRules="map[]" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 file-path=1197_next/ep_config.h identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Preparing to compile BPF" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh regeneration-level=rewrite+load subsys=endpoint
level=debug msg="Load 1-min: 6.54 5-min: 2.69 15min: 2.09" endpointID=1197 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2457 (62.49%) Free: 135 Buffers: 10 Cached: 1329" endpointID=1197 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1023 (100.00%) Free: 0" endpointID=1197 subsys=endpoint
level=debug msg="Found variable with offset 107972" subsys=elf symbol=LXC_ID
level=debug msg="Found variable with offset 107968" subsys=elf symbol=LXC_IPV4
level=debug msg="Found variable with offset 107952" subsys=elf symbol=LXC_IP_1
level=debug msg="Found variable with offset 107956" subsys=elf symbol=LXC_IP_2
level=debug msg="Found variable with offset 107960" subsys=elf symbol=LXC_IP_3
level=debug msg="Found variable with offset 107964" subsys=elf symbol=LXC_IP_4
level=debug msg="Found variable with offset 107976" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 107980" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 107992" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 107984" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 107988" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 30" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_container" subsys=elf
level=debug msg="Skipping cil_to_container" subsys=elf
level=debug msg="Found symbol with offset 1017016" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1016648" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1020451" subsys=elf symbol=cilium_calls_65535
level=debug msg="Found symbol with offset 1017110" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1017088" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1017209" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1016781" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1017275" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1016842" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1016609" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1021710" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1017366" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1017153" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1016758" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1022539" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1017290" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1017128" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1017314" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1016902" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1017032" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1020852" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1020431" subsys=elf symbol=cilium_policy_65535
level=debug msg="Found symbol with offset 1017174" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1016869" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1017064" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1020827" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping handle_policy" subsys=elf
level=debug msg="Skipping tail_handle_arp" subsys=elf
level=debug msg="Skipping tail_handle_ipv4" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_cont" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_ipv4_ct_egress" subsys=elf
level=debug msg="Skipping tail_ipv4_ct_ingress" subsys=elf
level=debug msg="Skipping tail_ipv4_to_endpoint" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1016705" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1016888" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1016968" subsys=elf symbol=to-container
level=debug msg="Found section with offset 1016985" subsys=elf symbol=from-container
level=debug msg="Found section with offset 1017052" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1017200" subsys=elf symbol=1/0xffff
level=debug msg="Found section with offset 1017246" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1017262" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1017329" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1017427" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1017875" subsys=elf symbol=2/29
level=debug msg="Found section with offset 1018439" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1019240" subsys=elf symbol=2/27
level=debug msg="Found section with offset 1019321" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1019367" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1020020" subsys=elf symbol=2/6
level=debug msg="Found section with offset 1020628" subsys=elf symbol=2/25
level=debug msg="Found section with offset 1022452" subsys=elf symbol=2/13
level=debug msg="Found section with offset 1023900" subsys=elf symbol=2/1
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 6.21% MEM: 2.38% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 93 VMS: 850 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=1197 subsys=endpoint
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=1197_next/bpf_lxc.o subsys=elf template-path=/var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69/bpf_lxc.o
level=debug msg="Loading CollectionSpec from ELF" device=lxc102a8ca64051 ifindex=9 objPath=1197_next/bpf_lxc.o subsys=datapath-loader
level=debug msg="Loading Collection into kernel" device=lxc102a8ca64051 ifindex=9 objPath=1197_next/bpf_lxc.o subsys=datapath-loader
Verifier error: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)
Verifier log: load program: permission denied:
	btf_vmlinux is malformed
	R1 type=ctx expected=fp
	; int tail_handle_snat_fwd_ipv4(struct __ctx_buff *ctx)
	0: (bf) r5 = r1
	1: (b4) w7 = 0
	; ctx->cb[off] = data;
	2: (63) *(u32 *)(r5 +52) = r7
	; return (void *)(unsigned long)ctx->data_end;
	3: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	4: (61) r6 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	5: (bf) r2 = r6
	6: (07) r2 += 34
	7: (7b) *(u64 *)(r10 -96) = r5
	; if (data + tot_len > data_end)
	8: (2d) if r2 > r1 goto pc+224
	 R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R10=fp0 fp-96_w=ctx
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	9: (61) r1 = *(u32 *)(r6 +26)
	10: (b7) r9 = 0
	; struct endpoint_key key = {};
	11: (63) *(u32 *)(r10 -32) = r9
	last_idx 11 first_idx 0
	regs=200 stack=0 before 10: (b7) r9 = 0
	12: (63) *(u32 *)(r10 -36) = r9
	13: (63) *(u32 *)(r10 -40) = r9
	14: (63) *(u32 *)(r10 -44) = r9
	; key.ip4 = ip;
	15: (63) *(u32 *)(r10 -48) = r1
	16: (b4) w1 = 1
	; key.family = ENDPOINT_KEY_IPV4;
	17: (73) *(u8 *)(r10 -32) = r1
	18: (bf) r2 = r10
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	19: (07) r2 += -48
	; return map_lookup_elem(&ENDPOINTS_MAP, &key);
	20: (18) r1 = 0xffff700159c9b400
	22: (85) call bpf_map_lookup_elem#1
	23: (bf) r8 = r0
	; remote_ep = lookup_ip4_remote_endpoint(ip4->daddr, 0);
	24: (61) r1 = *(u32 *)(r6 +30)
	; .ip4 = addr,
	25: (7b) *(u64 *)(r10 -32) = r9
	26: (63) *(u32 *)(r10 -36) = r7
	last_idx 26 first_idx 23
	regs=80 stack=0 before 25: (7b) *(u64 *)(r10 -32) = r9
	regs=80 stack=0 before 24: (61) r1 = *(u32 *)(r6 +30)
	regs=80 stack=0 before 23: (bf) r8 = r0
	 R0_rw=map_value_or_null(id=1,off=0,ks=20,vs=48,imm=0) R6_rw=pkt(id=0,off=0,r=34,imm=0) R7_rw=invP0 R9_rw=invP0 R10=fp0 fp-32=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-96_w=ctx
	parent didn't have regs=80 stack=0 marks
	last_idx 22 first_idx 0
	regs=80 stack=0 before 22: (85) call bpf_map_lookup_elem#1
	regs=80 stack=0 before 20: (18) r1 = 0xffff700159c9b400
	regs=80 stack=0 before 19: (07) r2 += -48
	regs=80 stack=0 before 18: (bf) r2 = r10
	regs=80 stack=0 before 17: (73) *(u8 *)(r10 -32) = r1
	regs=80 stack=0 before 16: (b4) w1 = 1
	regs=80 stack=0 before 15: (63) *(u32 *)(r10 -48) = r1
	regs=80 stack=0 before 14: (63) *(u32 *)(r10 -44) = r9
	regs=80 stack=0 before 13: (63) *(u32 *)(r10 -40) = r9
	regs=80 stack=0 before 12: (63) *(u32 *)(r10 -36) = r9
	regs=80 stack=0 before 11: (63) *(u32 *)(r10 -32) = r9
	regs=80 stack=0 before 10: (b7) r9 = 0
	regs=80 stack=0 before 9: (61) r1 = *(u32 *)(r6 +26)
	regs=80 stack=0 before 8: (2d) if r2 > r1 goto pc+224
	regs=80 stack=0 before 7: (7b) *(u64 *)(r10 -96) = r5
	regs=80 stack=0 before 6: (07) r2 += 34
	regs=80 stack=0 before 5: (bf) r2 = r6
	regs=80 stack=0 before 4: (61) r6 = *(u32 *)(r5 +76)
	regs=80 stack=0 before 3: (61) r1 = *(u32 *)(r5 +80)
	regs=80 stack=0 before 2: (63) *(u32 *)(r5 +52) = r7
	regs=80 stack=0 before 1: (b4) w7 = 0
	27: (63) *(u32 *)(r10 -40) = r1
	28: (18) r1 = 0x100000000000040
	; .lpm_key = { IPCACHE_PREFIX_LEN(prefix), {} },
	30: (7b) *(u64 *)(r10 -48) = r1
	31: (bf) r2 = r10
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	32: (07) r2 += -48
	; return map_lookup_elem(map, &key);
	33: (18) r1 = 0xffff700104950c00
	35: (85) call bpf_map_lookup_elem#1
	36: (79) r5 = *(u64 *)(r10 -96)
	; if (local_ep) {
	37: (15) if r8 == 0x0 goto pc+195
	 R0_w=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8_w=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=invP0 R10=fp0 fp-32_w=mmmmmmmm fp-40=mmmmmmmm fp-48_w=mmmmmmmm fp-96=ctx
	; .daddr = ip4->daddr,
	38: (61) r1 = *(u32 *)(r6 +30)
	; struct ipv4_ct_tuple tuple = {
	39: (63) *(u32 *)(r10 -88) = r1
	; .saddr = ip4->saddr
	40: (61) r1 = *(u32 *)(r6 +26)
	; struct ipv4_ct_tuple tuple = {
	41: (63) *(u32 *)(r10 -84) = r1
	42: (b4) w2 = 0
	43: (63) *(u32 *)(r10 -80) = r2
	last_idx 43 first_idx 23
	regs=4 stack=0 before 42: (b4) w2 = 0
	; .nexthdr = ip4->protocol,
	44: (71) r1 = *(u8 *)(r6 +23)
	; struct ipv4_ct_tuple tuple = {
	45: (73) *(u8 *)(r10 -75) = r2
	;
	46: (18) r3 = 0xffff7001044a2800
	48: (16) if w1 == 0x6 goto pc+2
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=invP0 R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0?0000 fp-88=mmmmmmmm fp-96=ctx
	49: (18) r3 = 0xffff7000ef1d5000
	; struct ipv4_ct_tuple tuple = {
	51: (73) *(u8 *)(r10 -76) = r1
	; return ip4->ihl * 4;
	52: (71) r9 = *(u8 *)(r6 +14)
	; return ip4->ihl * 4;
	53: (64) w9 <<= 2
	54: (54) w9 &= 60
	; ct_is_reply4(get_ct_map4(&tuple), ctx, ETH_HLEN +
	55: (04) w9 += 14
	; switch (tuple->nexthdr) {
	56: (16) if w1 == 0x11 goto pc+38
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9_w=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	57: (16) if w1 == 0x6 goto pc+37
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	58: (56) if w1 != 0x1 goto pc+174
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv1 R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	59: (bf) r6 = r3
	60: (b4) w1 = 0
	; __be16 identifier = 0;
	61: (6b) *(u16 *)(r10 -48) = r1
	last_idx 61 first_idx 57
	regs=2 stack=0 before 60: (b4) w1 = 0
	62: (bf) r3 = r10
	;
	63: (07) r3 += -72
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	64: (bf) r1 = r5
	65: (bc) w2 = w9
	66: (b4) w4 = 1
	67: (85) call bpf_skb_load_bytes#26
	last_idx 67 first_idx 57
	regs=10 stack=0 before 66: (b4) w4 = 1
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	68: (c6) if w0 s< 0x0 goto pc+163
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	69: (71) r3 = *(u8 *)(r10 -72)
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	70: (bc) w2 = w3
	71: (44) w2 |= 8
	72: (79) r1 = *(u64 *)(r10 -96)
	73: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=ctx(id=0,off=0,imm=0) R2_w=inv(id=0,umin_value=8,umax_value=255,var_off=(0x8; 0xf7)) R3_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	74: (05) goto pc+8
	; switch (type) {
	83: (b4) w2 = 0
	; tuple->dport = 0;
	84: (63) *(u32 *)(r10 -80) = r2
	last_idx 84 first_idx 68
	regs=4 stack=0 before 83: (b4) w2 = 0
	; switch (type) {
	85: (bf) r2 = r3
	86: (66) if w2 s> 0xa goto pc+46
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=ctx(id=0,off=0,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	87: (bf) r1 = r6
	88: (16) if w2 == 0x0 goto pc+51
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	89: (16) if w2 == 0x3 goto pc+46
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	90: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	91: (05) goto pc+135
	; if (err < 0)
	227: (b4) w2 = 1
	; tuple->flags = TUPLE_F_IN;
	228: (73) *(u8 *)(r10 -75) = r2
	229: (bf) r2 = r10
	;
	230: (07) r2 += -88
	; *is_reply = map_lookup_elem(map, tuple) != NULL;
	231: (85) call bpf_map_lookup_elem#1
	232: (79) r5 = *(u64 *)(r10 -96)
	233: (b7) r1 = 0
	; struct ipv4_ct_tuple tuple = {};
	234: (7b) *(u64 *)(r10 -88) = r1
	last_idx 234 first_idx 232
	regs=2 stack=0 before 233: (b7) r1 = 0
	235: (6b) *(u16 *)(r10 -76) = r7
	236: (63) *(u32 *)(r10 -80) = r7
	; return (void *)(unsigned long)ctx->data_end;
	237: (61) r2 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	238: (61) r8 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	239: (bf) r1 = r8
	240: (07) r1 += 34
	; if (data + tot_len > data_end)
	241: (2d) if r1 > r2 goto pc+251
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=pkt(id=0,off=34,r=34,imm=0) R2_w=pkt_end(id=0,off=0,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??000000 fp-88_w=00000000 fp-96=ctx
	242: (7b) *(u64 *)(r10 -104) = r2
	243: (b4) w7 = -158
	; return ip4->frag_off & bpf_htons(0x1FFF);
	244: (69) r6 = *(u16 *)(r8 +20)
	; tuple->nexthdr = ip4->protocol;
	245: (71) r1 = *(u8 *)(r8 +23)
	; tuple->nexthdr = ip4->protocol;
	246: (73) *(u8 *)(r10 -76) = r1
	; tuple->daddr = ip4->daddr;
	247: (61) r2 = *(u32 *)(r8 +30)
	; tuple->daddr = ip4->daddr;
	248: (63) *(u32 *)(r10 -88) = r2
	; tuple->saddr = ip4->saddr;
	249: (61) r3 = *(u32 *)(r8 +26)
	; tuple->saddr = ip4->saddr;
	250: (63) *(u32 *)(r10 -84) = r3
	; switch (tuple->nexthdr) {
	251: (16) if w1 == 0x1 goto pc+120
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5_w=ctx(id=0,off=0,imm=0) R6_w=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv4294967138 R8_w=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88_w=mmmmmmmm fp-96=ctx fp-104_w=pkt_end
	;
	252: (71) r7 = *(u8 *)(r8 +14)
	; switch (tuple->nexthdr) {
	253: (16) if w1 == 0x11 goto pc+1
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	254: (56) if w1 != 0x6 goto pc+29
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv6 R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; struct ipv4_frag_id frag_id = {
	255: (63) *(u32 *)(r10 -68) = r3
	256: (63) *(u32 *)(r10 -72) = r2
	; .id = ip4->id,
	257: (69) r2 = *(u16 *)(r8 +18)
	258: (b4) w3 = 0
	; struct ipv4_frag_id frag_id = {
	259: (73) *(u8 *)(r10 -61) = r3
	last_idx 259 first_idx 253
	regs=8 stack=0 before 258: (b4) w3 = 0
	260: (73) *(u8 *)(r10 -62) = r1
	261: (6b) *(u16 *)(r10 -64) = r2
	; return ip4->frag_off & bpf_htons(0x3FFF);
	262: (bc) w1 = w6
	263: (54) w1 &= 65343
	; if (unlikely(is_fragment)) {
	264: (16) if w1 == 0x0 goto pc+46
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=65343,var_off=(0x0; 0xff3f)) R2=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R3=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; return ctx->len;
	265: (61) r9 = *(u32 *)(r5 +0)
	266: (b7) r1 = 0
	; struct metrics_value *entry, new_entry = {};
	267: (7b) *(u64 *)(r10 -40) = r1
	last_idx 267 first_idx 264
	regs=2 stack=0 before 266: (b7) r1 = 0
	268: (7b) *(u64 *)(r10 -48) = r1
	269: (b7) r1 = 521
	; struct metrics_key key = {};
	270: (7b) *(u64 *)(r10 -56) = r1
	271: (bf) r2 = r10
	;
	272: (07) r2 += -56
	; entry = map_lookup_elem(&METRICS_MAP, &key);
	273: (18) r1 = 0xffff7000ac846c00
	275: (85) call bpf_map_lookup_elem#1
	; if (entry) {
	276: (15) if r0 == 0x0 goto pc+9
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; entry->count += 1;
	277: (79) r1 = *(u64 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	278: (07) r1 += 1
	279: (7b) *(u64 *)(r0 +0) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; entry->bytes += bytes;
	280: (79) r1 = *(u64 *)(r0 +8)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	281: (0f) r1 += r9
	282: (7b) *(u64 *)(r0 +8) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	283: (05) goto pc+13
	; return ip4->frag_off & bpf_htons(0x1FFF);
	297: (69) r1 = *(u16 *)(r8 +20)
	; return ip4->frag_off & bpf_htons(0x1FFF);
	298: (54) w1 &= 65311
	299: (79) r5 = *(u64 *)(r10 -96)
	; if (likely(not_first_fragment))
	300: (16) if w1 == 0x0 goto pc+10
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0,umax_value=65311,var_off=(0x0; 0xff1f)) R5_w=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	301: (bf) r2 = r10
	;
	302: (07) r2 += -72
	; tmp = map_lookup_elem(&IPV4_FRAG_DATAGRAMS_MAP, frag_id);
	303: (18) r1 = 0xffff7001044a2400
	305: (85) call bpf_map_lookup_elem#1
	; if (!tmp)
	306: (55) if r0 != 0x0 goto pc+637
	
	from 306 to 944: R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; case  4: __it_mob(d, s, 32);
	944: (61) r1 = *(u32 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	945: (63) *(u32 *)(r10 -80) = r1
	946: (05) goto pc-577
	; map_update_elem(&METRICS_MAP, &key, &new_entry, 0);
	370: (79) r5 = *(u64 *)(r10 -96)
	371: (b4) w7 = 0
	372: (54) w6 &= -225
	373: (b4) w1 = 1
	; if (IS_ERR(ret)) goto skip_crab;
	374: (16) if w7 == 0x2 goto pc+1
	last_idx 374 first_idx 306
	regs=80 stack=0 before 373: (b4) w1 = 1
	regs=80 stack=0 before 372: (54) w6 &= -225
	regs=80 stack=0 before 371: (b4) w7 = 0
	375: (b4) w1 = 0
	; return ip4->frag_off & bpf_htons(0x1FFF);
	376: (54) w6 &= 65535
	377: (79) r0 = *(u64 *)(r10 -104)
	; if (IS_ERR(ret)) goto skip_crab;
	378: (56) if w6 != 0x0 goto pc+114
	 R0_w=pkt_end(id=0,off=0,imm=0) R1=inv0 R5=ctx(id=0,off=0,imm=0) R6_w=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	;
	379: (bc) w2 = w7
	380: (74) w2 >>= 31
	381: (4c) w2 |= w1
	; if (IS_ERR(ret)) goto skip_crab;
	382: (56) if w2 != 0x0 goto pc+110
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	383: (71) r1 = *(u8 *)(r8 +23)
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	384: (56) if w1 != 0x6 goto pc+108
	 R0=pkt_end(id=0,off=0,imm=0) R1=inv6 R2=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	385: (07) r8 += 14
	; return ip4->ihl * 4;
	386: (71) r1 = *(u8 *)(r8 +0)
	; return ip4->ihl * 4;
	387: (64) w1 <<= 2
	388: (57) r1 &= 60
	; tcph = (struct tcphdr *)((void*)ip4 + ipv4_hdrlen(ip4));
	389: (0f) r8 += r1
	last_idx 389 first_idx 384
	regs=2 stack=0 before 388: (57) r1 &= 60
	regs=2 stack=0 before 387: (64) w1 <<= 2
	regs=2 stack=0 before 386: (71) r1 = *(u8 *)(r8 +0)
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	390: (bf) r9 = r8
	391: (07) r9 += 20
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	392: (2d) if r9 > r0 goto pc+100
	 R0=pkt_end(id=0,off=0,imm=0) R1_w=invP(id=0,umax_value=60,var_off=(0x0; 0x3c)) R2=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	393: (b4) w2 = 15
	;
	394: (61) r1 = *(u32 *)(r5 +80)
	; offset = tcph->doff * 4;
	395: (69) r3 = *(u16 *)(r8 +12)
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	396: (74) w3 >>= 2
	397: (54) w3 &= 60
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	398: (04) w3 += -20
	399: (05) goto pc+5
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=inv(id=0,umax_value=252,var_off=(0x0; 0xfc)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	last_idx 404 first_idx 464
	regs=4 stack=0 before 403: (04) w2 += -1
	regs=4 stack=0 before 402: (79) r5 = *(u64 *)(r10 -96)
	regs=4 stack=0 before 467: (05) goto pc-66
	regs=4 stack=0 before 466: (1c) w3 -= w4
	regs=4 stack=0 before 465: (0f) r9 += r4
	regs=4 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=8,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_r=pkt(id=8,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 451 first_idx 433
	regs=4 stack=0 before 451: (bd) if r4 <= r1 goto pc+12
	regs=4 stack=0 before 450: (07) r4 += 2
	regs=4 stack=0 before 449: (bf) r4 = r9
	regs=4 stack=0 before 436: (56) if w5 != 0x0 goto pc+12
	regs=4 stack=0 before 435: (16) if w5 == 0x2d goto pc+265
	regs=4 stack=0 before 434: (16) if w5 == 0x1 goto pc-35
	regs=4 stack=0 before 433: (71) r5 = *(u8 *)(r9 +0)
	 R0=pkt_end(id=0,off=0,imm=0) R1_r=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7_r=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9_r=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32_r=mmmmmmmm fp-40=00000000 fp-48_r=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104_r=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 421 first_idx 405
	regs=4 stack=0 before 421: (bd) if r4 <= r1 goto pc+11
	regs=4 stack=0 before 420: (07) r4 += 1
	regs=4 stack=0 before 419: (bf) r4 = r9
	regs=4 stack=0 before 407: (56) if w4 != 0x0 goto pc+11
	regs=4 stack=0 before 406: (54) w4 &= 255
	regs=4 stack=0 before 405: (bc) w4 = w3
	 R0=pkt_end(id=0,off=0,imm=0) R1_rw=pkt_end(id=0,off=0,imm=0) R2_rw=invP15 R3_rw=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R5_r=ctx(id=0,off=0,imm=0) R6=inv0 R7_r=invP0 R8_w=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_rw=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32_r=mmmmmmmm fp-40=00000000 fp-48_r=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104_r=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 399 first_idx 384
	regs=4 stack=0 before 399: (05) goto pc+5
	regs=4 stack=0 before 398: (04) w3 += -20
	regs=4 stack=0 before 397: (54) w3 &= 60
	regs=4 stack=0 before 396: (74) w3 >>= 2
	regs=4 stack=0 before 395: (69) r3 = *(u16 *)(r8 +12)
	regs=4 stack=0 before 394: (61) r1 = *(u32 *)(r5 +80)
	regs=4 stack=0 before 393: (b4) w2 = 15
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=0,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=19,off=36,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 449
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=0,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=36,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 451
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=0,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=36,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=0,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=36,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=0,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=36,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 419
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=0,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP9 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4=pkt(id=24,off=36,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=24,off=34,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=0,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=36,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=0,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=36,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=26,off=34,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=0,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=36,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=0,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=36,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 419
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=0,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP4 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4=pkt(id=29,off=36,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=29,off=34,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=0,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=36,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=0,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=36,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=31,off=34,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=0,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	
	from 435 to 701: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP1 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=inv45 R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	701: (bf) r2 = r9
	702: (07) r2 += 20
	703: (79) r5 = *(u64 *)(r10 -96)
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	704: (2d) if r2 > r0 goto pc-212
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=32,off=54,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	705: (71) r2 = *(u8 *)(r9 +18)
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	706: (56) if w2 != 0x0 goto pc+130
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=inv0 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	707: (b4) w7 = -134
	; return (void *)(unsigned long)ctx->data;
	708: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	709: (bf) r3 = r2
	710: (07) r3 += 34
	; if (data + tot_len > data_end)
	711: (2d) if r3 > r1 goto pc-219
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=pkt(id=0,off=0,r=34,imm=0) R3=pkt(id=0,off=34,r=34,imm=0) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=inv4294967162 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; masquerade_ip = ip4->saddr;
	712: (61) r1 = *(u32 *)(r2 +26)
	; masquerade_ip = ip4->saddr;
	713: (63) *(u32 *)(r10 -72) = r1
	; return ip4->ihl * 4;
	714: (71) r2 = *(u8 *)(r2 +14)
	; return ip4->ihl * 4;
	715: (64) w2 <<= 2
	716: (54) w2 &= 60
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	717: (04) w2 += 44
	718: (bf) r3 = r10
	; masquerade_ip = ip4->saddr;
	719: (07) r3 += -72
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	720: (bf) r1 = r5
	721: (b4) w4 = 4
	722: (b4) w5 = 0
	723: (85) call bpf_skb_store_bytes#9
	last_idx 723 first_idx 711
	regs=10 stack=0 before 722: (b4) w5 = 0
	regs=10 stack=0 before 721: (b4) w4 = 4
	724: (79) r5 = *(u64 *)(r10 -96)
	725: (b4) w7 = -141
	; if (ret < 0) return DROP_WRITE_ERROR;
	726: (c6) if w0 s< 0x0 goto pc-234
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7_w=inv4294967155 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	; return ctx->len;
	727: (61) r1 = *(u32 *)(r5 +0)
	; __u64 cap_len = min_t(__u64, monitor ? : TRACE_PAYLOAD_LEN,
	728: (bf) r3 = r1
	729: (a6) if w1 < 0x80 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=inv(id=34,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=34,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7_w=inv4294967155 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	730: (b7) r3 = 128
	731: (b7) r2 = 0
	; __notify_common_hdr(CILIUM_NOTIFY_TRACE, obs_point),
	732: (61) r4 = *(u32 *)(r5 +68)
	; msg = (typeof(msg)) {
	733: (73) *(u8 *)(r10 -14) = r2
	last_idx 733 first_idx 724
	regs=4 stack=0 before 732: (61) r4 = *(u32 *)(r5 +68)
	regs=4 stack=0 before 731: (b7) r2 = 0
	734: (73) *(u8 *)(r10 -15) = r2
	735: (73) *(u8 *)(r10 -16) = r2
	736: (73) *(u8 *)(r10 -17) = r2
	737: (73) *(u8 *)(r10 -18) = r2
	738: (73) *(u8 *)(r10 -19) = r2
	739: (73) *(u8 *)(r10 -20) = r2
	740: (73) *(u8 *)(r10 -6) = r2
	741: (73) *(u8 *)(r10 -7) = r2
	742: (73) *(u8 *)(r10 -8) = r2
	743: (73) *(u8 *)(r10 -9) = r2
	744: (73) *(u8 *)(r10 -10) = r2
	745: (73) *(u8 *)(r10 -11) = r2
	746: (73) *(u8 *)(r10 -12) = r2
	747: (73) *(u8 *)(r10 -13) = r2
	748: (b4) w2 = 327680
	749: (63) *(u32 *)(r10 -24) = r2
	750: (18) r2 = 0x246c
	752: (63) *(u32 *)(r10 -32) = r2
	753: (b4) w2 = 1
	754: (6b) *(u16 *)(r10 -34) = r2
	755: (63) *(u32 *)(r10 -40) = r1
	756: (63) *(u32 *)(r10 -44) = r4
	757: (b4) w1 = 1284
	758: (6b) *(u16 *)(r10 -48) = r1
	759: (6b) *(u16 *)(r10 -36) = r3
	760: (b4) w6 = 0
	761: (73) *(u8 *)(r10 -2) = r6
	last_idx 761 first_idx 724
	regs=40 stack=0 before 760: (b4) w6 = 0
	762: (73) *(u8 *)(r10 -3) = r6
	763: (73) *(u8 *)(r10 -4) = r6
	764: (73) *(u8 *)(r10 -5) = r6
	765: (63) *(u32 *)(r10 -28) = r6
	766: (18) r7 = 0x4ad
	768: (6b) *(u16 *)(r10 -46) = r7
	769: (73) *(u8 *)(r10 -1) = r6
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	770: (67) r3 <<= 32
	771: (18) r1 = 0xffffffff
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	773: (4f) r3 |= r1
	774: (bf) r4 = r10
	;
	775: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP,
	776: (bf) r1 = r5
	777: (18) r2 = 0xffff7000722cc800
	779: (b4) w5 = 48
	780: (85) call bpf_perf_event_output#25
	last_idx 780 first_idx 724
	regs=20 stack=0 before 779: (b4) w5 = 48
	781: (b4) w1 = 2
	; struct debug_msg msg = {
	782: (6b) *(u16 *)(r10 -48) = r1
	783: (6b) *(u16 *)(r10 -46) = r7
	784: (b4) w1 = 50
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	785: (79) r2 = *(u64 *)(r10 -96)
	786: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	787: (63) *(u32 *)(r10 -32) = r1
	788: (18) r1 = 0x3200000032
	790: (7b) *(u64 *)(r10 -40) = r1
	791: (63) *(u32 *)(r10 -44) = r2
	792: (bf) r4 = r10
	;
	793: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	794: (79) r1 = *(u64 *)(r10 -96)
	795: (18) r2 = 0xffff7000722cc800
	797: (18) r3 = 0xffffffff
	799: (b4) w5 = 20
	800: (85) call bpf_perf_event_output#25
	last_idx 800 first_idx 781
	regs=20 stack=0 before 799: (b4) w5 = 20
	; cilium_dbg3(ctx, DBG_CT_LOOKUP4_1, masquerade_ip, masquerade_ip,
	801: (61) r1 = *(u32 *)(r10 -72)
	; struct debug_msg msg = {
	802: (6b) *(u16 *)(r10 -46) = r7
	803: (b4) w2 = 12290
	804: (6b) *(u16 *)(r10 -48) = r2
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	805: (79) r2 = *(u64 *)(r10 -96)
	806: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	807: (63) *(u32 *)(r10 -32) = r6
	808: (63) *(u32 *)(r10 -36) = r1
	809: (63) *(u32 *)(r10 -40) = r1
	810: (63) *(u32 *)(r10 -44) = r2
	811: (bf) r4 = r10
	;
	812: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	813: (79) r1 = *(u64 *)(r10 -96)
	814: (18) r2 = 0xffff7000722cc800
	816: (18) r3 = 0xffffffff
	818: (b4) w5 = 20
	819: (85) call bpf_perf_event_output#25
	last_idx 819 first_idx 781
	regs=20 stack=0 before 818: (b4) w5 = 20
	820: (79) r5 = *(u64 *)(r10 -96)
	; return (void *)(unsigned long)ctx->data_end;
	821: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	822: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	823: (07) r2 += 34
	824: (b4) w7 = -134
	; if (data + tot_len > data_end)
	825: (2d) if r2 > r1 goto pc-333
	 R0=inv(id=0) R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=invP0 R7_w=inv4294967162 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmmmmmm fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	; &redir_opt->ip1, 4, 0);
	826: (07) r9 += 2
	; ret = ctx_store_bytes(ctx, ETH_HLEN + offsetof(struct iphdr, saddr),
	827: (bf) r1 = r5
	828: (b4) w2 = 26
	829: (bf) r3 = r9
	830: (b4) w4 = 4
	831: (b4) w5 = 0
	832: (85) call bpf_skb_store_bytes#9
	R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf
	processed 1623 insns (limit 1000000) max_states_per_insn 3 total_states 55 peak_states 55 mark_read 27
level=warning msg="JoinEP: Failed to attach program(s)" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" file-path=1197_next/bpf_lxc.o identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=datapath-loader veth=lxc102a8ca64051
level=error msg="Error while rewriting endpoint BPF program" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Reverting endpoint changes after BPF regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Reverting proxy redirect removals" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Finished reverting proxy redirect removals" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Reverting xDS network policy update" subsys=envoy-manager
level=debug msg="preparing new cache transaction: upserting 0 entries, deleting 1 entries" subsys=xds xdsCachedVersion=11 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="deleting resource from cache" subsys=xds xdsCachedVersion=11 xdsResourceName=1197 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="committing cache transaction and notifying of new version" subsys=xds xdsCachedVersion=11 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="Finished reverting xDS network policy update" subsys=envoy-manager
level=debug msg="Reverting proxy redirect additions" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Finished reverting proxy redirect additions" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Finished reverting endpoint changes after BPF regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=info msg="Wrote verifier log to endpoint directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 file-path=1197_next/verifier.log identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=info msg="generating BPF for endpoint failed, keeping stale directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" file-path=1197_next_fail identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="removing directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 directory=1197_next_fail endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="removing directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 directory=1197_next endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Completed endpoint regeneration with no pending regeneration requests" code=OK containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=ready identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=0
level=warning msg="Regeneration of endpoint failed" bpfCompilation=0s bpfLoadProg=9.613166ms bpfWaitForELF="3.125µs" bpfWriteELF="787.125µs" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh mapSync="15.375µs" policyCalculation="64.875µs" prepareBuild="229.292µs" proxyConfiguration="7.167µs" proxyPolicyCalculation="35.542µs" proxyWaitForAck=0s reason="retrying regeneration" subsys=endpoint total=12.726209ms waitingForCTClean="490.25µs" waitingForLock="1.083µs"
level=debug msg="Error regenerating endpoint: loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" code=Failure containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=ready identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=200
level=debug msg="EventQueue event processing statistics" eventConsumeOffQueueWaitTime="14.041µs" eventEnqueueWaitTime="8.542µs" eventHandlingDuration=12.819583ms eventType="*endpoint.EndpointRegenerationEvent" name=endpoint-1197 subsys=eventqueue
level=error msg="endpoint regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Controller func execution time: 12.961666ms" name=endpoint-1197-regeneration-recovery subsys=controller uuid=8ad41e88-742f-451d-9f1b-b8a945514606
level=debug msg="Controller run failed" consecutiveErrors=2 error="regeneration recovery failed" name=endpoint-1197-regeneration-recovery subsys=controller uuid=8ad41e88-742f-451d-9f1b-b8a945514606
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Skipping CiliumEndpoint update because it has no k8s pod name" containerID= controller="sync-to-k8s-ciliumendpoint (767)" datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpointsynchronizer
level=debug msg="Controller func execution time: 109.417µs" name="sync-to-k8s-ciliumendpoint (767)" subsys=controller uuid=5039eeaf-3bc8-4a34-86d2-ee0a245eba33
level=debug msg="received signal that regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Triggering endpoint regeneration due to retrying regeneration" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=waiting-to-regenerate identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="Dequeued endpoint from build queue" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Regenerating endpoint" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ reason="retrying regeneration" startTime="2023-07-12 21:56:51.564224385 +0000 UTC m=+14.928134758" subsys=endpoint
level=debug msg="Regenerating endpoint: retrying regeneration" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=regenerating identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=317_next endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Starting policy recalculation..." containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Skipping unnecessary endpoint policy recalculation" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ policyChanged=true policyRevision.next=1 policyRevision.repo=1 subsys=endpoint
level=debug msg="Endpoint has no IP addresses" endpointID=317 subsys=envoy-manager
level=debug msg="BPF header file hashed (was: \"\")" bpfHeaderfileHash=0f5fa9a0ac774df439d9f3dc0bdbff52d824f5c229dffe9c8ab4b3a39b7c2977 containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="writing header file" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/ep_config.h identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="writing header file with DNSRules" DNSRules="map[]" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/ep_config.h identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Preparing to compile BPF" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ regeneration-level=rewrite+load subsys=endpoint
level=debug msg="Load 1-min: 6.02 5-min: 2.65 15min: 2.08" endpointID=317 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2459 (62.52%) Free: 124 Buffers: 10 Cached: 1338" endpointID=317 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1021 (99.76%) Free: 2" endpointID=317 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 5.91% MEM: 2.37% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 93 VMS: 850 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_65535
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_65535
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_host.o subsys=elf template-path=/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e/bpf_host.o
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_00317
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_00317
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_host_cilium_net.o subsys=elf template-path=317_next/bpf_host.o
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_00317
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_00317
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_netdev_eth0.o subsys=elf template-path=317_next/bpf_host.o
level=debug msg="Loading CollectionSpec from ELF" device=cilium_host ifindex=5 objPath=317_next/bpf_host.o subsys=datapath-loader
level=debug msg="Loading Collection into kernel" device=cilium_host ifindex=5 objPath=317_next/bpf_host.o subsys=datapath-loader
Verifier error: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)
Verifier log: load program: permission denied:
	btf_vmlinux is malformed
	R1 type=ctx expected=fp
	; int tail_handle_snat_fwd_ipv4(struct __ctx_buff *ctx)
	0: (bf) r5 = r1
	1: (b4) w9 = 0
	; ctx->cb[off] = data;
	2: (63) *(u32 *)(r5 +52) = r9
	; return (void *)(unsigned long)ctx->data_end;
	3: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	4: (61) r6 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	5: (bf) r2 = r6
	6: (07) r2 += 34
	; __s8 ext_err = 0;
	7: (b4) w7 = 0
	8: (b4) w4 = 0
	9: (7b) *(u64 *)(r10 -152) = r5
	; if (data + tot_len > data_end)
	10: (2d) if r2 > r1 goto pc+7173
	 R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	;
	11: (61) r1 = *(u32 *)(r6 +26)
	; if (DIRECT_ROUTING_DEV_IFINDEX == NATIVE_DEV_IFINDEX &&
	12: (56) if w1 != 0x20015ac goto pc+3
	 R1_w=inv33559980 R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	13: (18) r2 = 0x0
	15: (16) if w2 == 0x41 goto pc+85
	last_idx 15 first_idx 15
	 R1_w=inv33559980 R2_rw=invP0 R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	parent didn't have regs=4 stack=0 marks
	last_idx 13 first_idx 0
	regs=4 stack=0 before 13: (18) r2 = 0x0
	; key.ip4 = ip;
	16: (63) *(u32 *)(r10 -64) = r1
	17: (b7) r7 = 0
	; struct endpoint_key key = {};
	18: (63) *(u32 *)(r10 -48) = r7
	last_idx 18 first_idx 15
	regs=80 stack=0 before 17: (b7) r7 = 0
	19: (63) *(u32 *)(r10 -52) = r7
	20: (63) *(u32 *)(r10 -56) = r7
	21: (63) *(u32 *)(r10 -60) = r7
	22: (b4) w1 = 1
	; key.family = ENDPOINT_KEY_IPV4;
	23: (73) *(u8 *)(r10 -48) = r1
	24: (bf) r2 = r10
	;
	25: (07) r2 += -64
	; return map_lookup_elem(&ENDPOINTS_MAP, &key);
	26: (18) r1 = 0xffff700159c9b400
	28: (85) call bpf_map_lookup_elem#1
	29: (bf) r8 = r0
	; remote_ep = lookup_ip4_remote_endpoint(ip4->daddr, 0);
	30: (61) r1 = *(u32 *)(r6 +30)
	; .ip4 = addr,
	31: (7b) *(u64 *)(r10 -48) = r7
	32: (63) *(u32 *)(r10 -56) = r1
	33: (18) r1 = 0x100000000000040
	; .lpm_key = { IPCACHE_PREFIX_LEN(prefix), {} },
	35: (7b) *(u64 *)(r10 -64) = r1
	36: (b4) w7 = 0
	; .ip4 = addr,
	37: (63) *(u32 *)(r10 -52) = r7
	last_idx 37 first_idx 29
	regs=80 stack=0 before 36: (b4) w7 = 0
	38: (bf) r2 = r10
	;
	39: (07) r2 += -64
	; return map_lookup_elem(map, &key);
	40: (18) r1 = 0xffff700104950c00
	42: (85) call bpf_map_lookup_elem#1
	43: (79) r5 = *(u64 *)(r10 -152)
	44: (b4) w4 = 0
	; if (local_ep) {
	45: (15) if r8 == 0x0 goto pc+7138
	 R0_w=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=invP0 R8_w=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv0 R10=fp0 fp-48_w=mmmmmmmm fp-56=mmmmmmmm fp-64_w=mmmmmmmm fp-152=ctx
	; .daddr = ip4->daddr,
	46: (61) r1 = *(u32 *)(r6 +30)
	; struct ipv4_ct_tuple tuple = {
	47: (63) *(u32 *)(r10 -128) = r1
	; .saddr = ip4->saddr
	48: (61) r1 = *(u32 *)(r6 +26)
	; struct ipv4_ct_tuple tuple = {
	49: (63) *(u32 *)(r10 -124) = r1
	50: (b4) w2 = 0
	51: (63) *(u32 *)(r10 -120) = r2
	last_idx 51 first_idx 29
	regs=4 stack=0 before 50: (b4) w2 = 0
	; .nexthdr = ip4->protocol,
	52: (71) r1 = *(u8 *)(r6 +23)
	; struct ipv4_ct_tuple tuple = {
	53: (73) *(u8 *)(r10 -115) = r2
	;
	54: (18) r7 = 0xffff7001044a2800
	56: (16) if w1 == 0x6 goto pc+2
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0?0000 fp-128=mmmmmmmm fp-152=ctx
	57: (18) r7 = 0xffff7000ef1d5000
	; struct ipv4_ct_tuple tuple = {
	59: (73) *(u8 *)(r10 -116) = r1
	; return ip4->ihl * 4;
	60: (71) r8 = *(u8 *)(r6 +14)
	; return ip4->ihl * 4;
	61: (64) w8 <<= 2
	62: (54) w8 &= 60
	; ct_is_reply4(get_ct_map4(&tuple), ctx, ETH_HLEN +
	63: (04) w8 += 14
	; switch (tuple->nexthdr) {
	64: (16) if w1 == 0x11 goto pc+114
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8_w=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	65: (16) if w1 == 0x6 goto pc+113
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	66: (56) if w1 != 0x1 goto pc+6938
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv1 R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	67: (b4) w1 = 0
	; __be16 identifier = 0;
	68: (6b) *(u16 *)(r10 -64) = r1
	last_idx 68 first_idx 65
	regs=2 stack=0 before 67: (b4) w1 = 0
	69: (bf) r3 = r10
	;
	70: (07) r3 += -80
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	71: (bf) r1 = r5
	72: (bc) w2 = w8
	73: (b4) w4 = 1
	74: (85) call bpf_skb_load_bytes#26
	last_idx 74 first_idx 65
	regs=10 stack=0 before 73: (b4) w4 = 1
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	75: (c6) if w0 s< 0x0 goto pc+6928
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	76: (71) r3 = *(u8 *)(r10 -80)
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	77: (bc) w2 = w3
	78: (44) w2 |= 8
	79: (79) r1 = *(u64 *)(r10 -152)
	80: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=ctx(id=0,off=0,imm=0) R2_w=inv(id=0,umin_value=8,umax_value=255,var_off=(0x8; 0xf7)) R3_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	81: (05) goto pc+8
	; switch (type) {
	90: (b4) w2 = 0
	; tuple->dport = 0;
	91: (63) *(u32 *)(r10 -120) = r2
	last_idx 91 first_idx 75
	regs=4 stack=0 before 90: (b4) w2 = 0
	; switch (type) {
	92: (bf) r1 = r3
	93: (66) if w1 s> 0xa goto pc+6400
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	94: (16) if w1 == 0x0 goto pc+6512
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	95: (16) if w1 == 0x3 goto pc+6400
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	96: (16) if w1 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	97: (05) goto pc+6900
	; if (err < 0)
	6998: (b4) w1 = 1
	; tuple->flags = TUPLE_F_IN;
	6999: (73) *(u8 *)(r10 -115) = r1
	7000: (bf) r2 = r10
	;
	7001: (07) r2 += -128
	; *is_reply = map_lookup_elem(map, tuple) != NULL;
	7002: (bf) r1 = r7
	7003: (85) call bpf_map_lookup_elem#1
	7004: (79) r5 = *(u64 *)(r10 -152)
	7005: (b4) w7 = 0
	7006: (b4) w4 = 0
	7007: (05) goto pc+175
	; if (ret == NAT_PUNT_TO_STACK)
	7183: (b4) w9 = 0
	; struct ipv4_ct_tuple tuple = {};
	7184: (6b) *(u16 *)(r10 -116) = r9
	last_idx 7184 first_idx 7004
	regs=200 stack=0 before 7183: (b4) w9 = 0
	7185: (63) *(u32 *)(r10 -120) = r9
	7186: (b7) r1 = 0
	7187: (7b) *(u64 *)(r10 -128) = r1
	last_idx 7187 first_idx 7004
	regs=2 stack=0 before 7186: (b7) r1 = 0
	; return (void *)(unsigned long)ctx->data_end;
	7188: (61) r2 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	7189: (61) r8 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	7190: (bf) r1 = r8
	7191: (07) r1 += 34
	; if (data + tot_len > data_end)
	7192: (2d) if r1 > r2 goto pc+854
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=pkt(id=0,off=34,r=34,imm=0) R2_w=pkt_end(id=0,off=0,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9_w=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??000000 fp-128_w=00000000 fp-152=ctx
	7193: (7b) *(u64 *)(r10 -160) = r2
	7194: (b4) w4 = -158
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7195: (69) r6 = *(u16 *)(r8 +20)
	; tuple->nexthdr = ip4->protocol;
	7196: (71) r1 = *(u8 *)(r8 +23)
	; tuple->nexthdr = ip4->protocol;
	7197: (73) *(u8 *)(r10 -116) = r1
	; tuple->daddr = ip4->daddr;
	7198: (61) r2 = *(u32 *)(r8 +30)
	; tuple->daddr = ip4->daddr;
	7199: (63) *(u32 *)(r10 -128) = r2
	; tuple->saddr = ip4->saddr;
	7200: (61) r3 = *(u32 *)(r8 +26)
	; tuple->saddr = ip4->saddr;
	7201: (63) *(u32 *)(r10 -124) = r3
	; switch (tuple->nexthdr) {
	7202: (16) if w1 == 0x1 goto pc+732
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv0 R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end
	7203: (63) *(u32 *)(r10 -168) = r7
	last_idx 7203 first_idx 7202
	regs=80 stack=0 before 7202: (16) if w1 == 0x1 goto pc+732
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_rw=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4_w=inv4294967138 R5_w=ctx(id=0,off=0,imm=0) R6_w=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_rw=invP0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9_w=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128_w=mmmmmmmm fp-152=ctx fp-160_w=pkt_end
	parent didn't have regs=80 stack=0 marks
	last_idx 7201 first_idx 7004
	regs=80 stack=0 before 7201: (63) *(u32 *)(r10 -124) = r3
	regs=80 stack=0 before 7200: (61) r3 = *(u32 *)(r8 +26)
	regs=80 stack=0 before 7199: (63) *(u32 *)(r10 -128) = r2
	regs=80 stack=0 before 7198: (61) r2 = *(u32 *)(r8 +30)
	regs=80 stack=0 before 7197: (73) *(u8 *)(r10 -116) = r1
	regs=80 stack=0 before 7196: (71) r1 = *(u8 *)(r8 +23)
	regs=80 stack=0 before 7195: (69) r6 = *(u16 *)(r8 +20)
	regs=80 stack=0 before 7194: (b4) w4 = -158
	regs=80 stack=0 before 7193: (7b) *(u64 *)(r10 -160) = r2
	regs=80 stack=0 before 7192: (2d) if r1 > r2 goto pc+854
	regs=80 stack=0 before 7191: (07) r1 += 34
	regs=80 stack=0 before 7190: (bf) r1 = r8
	regs=80 stack=0 before 7189: (61) r8 = *(u32 *)(r5 +76)
	regs=80 stack=0 before 7188: (61) r2 = *(u32 *)(r5 +80)
	regs=80 stack=0 before 7187: (7b) *(u64 *)(r10 -128) = r1
	regs=80 stack=0 before 7186: (b7) r1 = 0
	regs=80 stack=0 before 7185: (63) *(u32 *)(r10 -120) = r9
	regs=80 stack=0 before 7184: (6b) *(u16 *)(r10 -116) = r9
	regs=80 stack=0 before 7183: (b4) w9 = 0
	regs=80 stack=0 before 7007: (05) goto pc+175
	regs=80 stack=0 before 7006: (b4) w4 = 0
	regs=80 stack=0 before 7005: (b4) w7 = 0
	;
	7204: (71) r7 = *(u8 *)(r8 +14)
	; switch (tuple->nexthdr) {
	7205: (16) if w1 == 0x11 goto pc+1
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7206: (56) if w1 != 0x6 goto pc+29
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv6 R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; struct ipv4_frag_id frag_id = {
	7207: (63) *(u32 *)(r10 -76) = r3
	7208: (63) *(u32 *)(r10 -80) = r2
	; .id = ip4->id,
	7209: (69) r2 = *(u16 *)(r8 +18)
	7210: (b4) w3 = 0
	; struct ipv4_frag_id frag_id = {
	7211: (73) *(u8 *)(r10 -69) = r3
	last_idx 7211 first_idx 7202
	regs=8 stack=0 before 7210: (b4) w3 = 0
	7212: (73) *(u8 *)(r10 -70) = r1
	7213: (6b) *(u16 *)(r10 -72) = r2
	; return ip4->frag_off & bpf_htons(0x3FFF);
	7214: (bc) w1 = w6
	7215: (54) w1 &= 65343
	; if (unlikely(is_fragment)) {
	7216: (16) if w1 == 0x0 goto pc+654
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=65343,var_off=(0x0; 0xff3f)) R2=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R3=invP0 R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; return ctx->len;
	7217: (61) r9 = *(u32 *)(r5 +0)
	7218: (b7) r1 = 0
	; struct metrics_value *entry, new_entry = {};
	7219: (7b) *(u64 *)(r10 -56) = r1
	last_idx 7219 first_idx 7216
	regs=2 stack=0 before 7218: (b7) r1 = 0
	7220: (7b) *(u64 *)(r10 -64) = r1
	7221: (b7) r1 = 521
	; struct metrics_key key = {};
	7222: (7b) *(u64 *)(r10 -144) = r1
	7223: (bf) r2 = r10
	;
	7224: (07) r2 += -144
	; entry = map_lookup_elem(&METRICS_MAP, &key);
	7225: (18) r1 = 0xffff7000ac846c00
	7227: (85) call bpf_map_lookup_elem#1
	; if (entry) {
	7228: (15) if r0 == 0x0 goto pc+616
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; entry->count += 1;
	7229: (79) r1 = *(u64 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7230: (07) r1 += 1
	7231: (7b) *(u64 *)(r0 +0) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; entry->bytes += bytes;
	7232: (79) r1 = *(u64 *)(r0 +8)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7233: (0f) r1 += r9
	7234: (7b) *(u64 *)(r0 +8) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7235: (05) goto pc+620
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7856: (69) r1 = *(u16 *)(r8 +20)
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7857: (54) w1 &= 65311
	7858: (79) r5 = *(u64 *)(r10 -152)
	; if (likely(not_first_fragment))
	7859: (16) if w1 == 0x0 goto pc+11
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0,umax_value=65311,var_off=(0x0; 0xff1f)) R5_w=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7860: (bf) r2 = r10
	;
	7861: (07) r2 += -80
	; tmp = map_lookup_elem(&IPV4_FRAG_DATAGRAMS_MAP, frag_id);
	7862: (18) r1 = 0xffff7001044a2400
	7864: (85) call bpf_map_lookup_elem#1
	; if (!tmp)
	7865: (55) if r0 != 0x0 goto pc+548
	
	from 7865 to 8414: R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; case  4: __it_mob(d, s, 32);
	8414: (61) r1 = *(u32 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	8415: (63) *(u32 *)(r10 -120) = r1
	8416: (05) goto pc-485
	; map_update_elem(&METRICS_MAP, &key, &new_entry, 0);
	7932: (79) r5 = *(u64 *)(r10 -152)
	7933: (61) r7 = *(u32 *)(r10 -168)
	7934: (b4) w4 = 0
	7935: (54) w6 &= -225
	7936: (b4) w1 = 1
	; if (IS_ERR(ret)) goto skip_crab;
	7937: (16) if w4 == 0x2 goto pc+1
	last_idx 7937 first_idx 8414
	regs=10 stack=0 before 7936: (b4) w1 = 1
	regs=10 stack=0 before 7935: (54) w6 &= -225
	regs=10 stack=0 before 7934: (b4) w4 = 0
	7938: (b4) w1 = 0
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7939: (54) w6 &= 65535
	7940: (79) r0 = *(u64 *)(r10 -160)
	; if (IS_ERR(ret)) goto skip_crab;
	7941: (56) if w6 != 0x0 goto pc+105
	 R0_w=pkt_end(id=0,off=0,imm=0) R1=inv0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6_w=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	;
	7942: (bc) w2 = w4
	7943: (74) w2 >>= 31
	7944: (4c) w2 |= w1
	; if (IS_ERR(ret)) goto skip_crab;
	7945: (56) if w2 != 0x0 goto pc+101
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	7946: (71) r1 = *(u8 *)(r8 +23)
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	7947: (56) if w1 != 0x6 goto pc+99
	 R0=pkt_end(id=0,off=0,imm=0) R1=inv6 R2=invP0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7948: (07) r8 += 14
	; return ip4->ihl * 4;
	7949: (71) r1 = *(u8 *)(r8 +0)
	; return ip4->ihl * 4;
	7950: (64) w1 <<= 2
	7951: (57) r1 &= 60
	; tcph = (struct tcphdr *)((void*)ip4 + ipv4_hdrlen(ip4));
	7952: (0f) r8 += r1
	last_idx 7952 first_idx 7947
	regs=2 stack=0 before 7951: (57) r1 &= 60
	regs=2 stack=0 before 7950: (64) w1 <<= 2
	regs=2 stack=0 before 7949: (71) r1 = *(u8 *)(r8 +0)
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	7953: (bf) r9 = r8
	7954: (07) r9 += 20
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	7955: (2d) if r9 > r0 goto pc+91
	 R0=pkt_end(id=0,off=0,imm=0) R1_w=invP(id=0,umax_value=60,var_off=(0x0; 0x3c)) R2=invP0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=9,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7956: (b4) w2 = 15
	;
	7957: (61) r1 = *(u32 *)(r5 +80)
	; offset = tcph->doff * 4;
	7958: (69) r3 = *(u16 *)(r8 +12)
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	7959: (74) w3 >>= 2
	7960: (54) w3 &= 60
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	7961: (04) w3 += -20
	7962: (05) goto pc+6
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=inv(id=0,umax_value=252,var_off=(0x0; 0xfc)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	last_idx 7968 first_idx 8017
	regs=4 stack=0 before 7967: (bc) w4 = w8
	regs=4 stack=0 before 7966: (04) w2 += -1
	regs=4 stack=0 before 7965: (79) r5 = *(u64 *)(r10 -152)
	regs=4 stack=0 before 8020: (05) goto pc-56
	regs=4 stack=0 before 8019: (1c) w3 -= w4
	regs=4 stack=0 before 8018: (0f) r9 += r4
	regs=4 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=9,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_r=invP0 R9_r=pkt(id=9,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 8007 first_idx 7992
	regs=4 stack=0 before 8007: (bd) if r4 <= r1 goto pc+9
	regs=4 stack=0 before 8006: (07) r4 += 2
	regs=4 stack=0 before 8005: (bf) r4 = r9
	regs=4 stack=0 before 7995: (56) if w5 != 0x0 goto pc+9
	regs=4 stack=0 before 7994: (16) if w5 == 0x2d goto pc+218
	regs=4 stack=0 before 7993: (16) if w5 == 0x1 goto pc-31
	regs=4 stack=0 before 7992: (71) r5 = *(u8 *)(r9 +0)
	 R0=pkt_end(id=0,off=0,imm=0) R1_r=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_rw=invP0 R9_r=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48_r=mmmmmmmm fp-56=00000000 fp-64_r=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160_r=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 7983 first_idx 7969
	regs=4 stack=0 before 7983: (bd) if r4 <= r1 goto pc+8
	regs=4 stack=0 before 7982: (07) r4 += 1
	regs=4 stack=0 before 7981: (bf) r4 = r9
	regs=4 stack=0 before 7972: (56) if w4 != 0x0 goto pc+8
	regs=4 stack=0 before 7971: (54) w4 &= 255
	regs=4 stack=0 before 7970: (bc) w4 = w3
	regs=4 stack=0 before 7969: (bc) w8 = w4
	 R0=pkt_end(id=0,off=0,imm=0) R1_rw=pkt_end(id=0,off=0,imm=0) R2_rw=invP15 R3_rw=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_r=invP0 R5_r=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=9,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_rw=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48_r=mmmmmmmm fp-56=00000000 fp-64_r=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160_r=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 7962 first_idx 7947
	regs=4 stack=0 before 7962: (05) goto pc+6
	regs=4 stack=0 before 7961: (04) w3 += -20
	regs=4 stack=0 before 7960: (54) w3 &= 60
	regs=4 stack=0 before 7959: (74) w3 >>= 2
	regs=4 stack=0 before 7958: (69) r3 = *(u16 *)(r8 +12)
	regs=4 stack=0 before 7957: (61) r1 = *(u32 *)(r5 +80)
	regs=4 stack=0 before 7956: (b4) w2 = 15
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=0,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=20,off=36,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8005
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=21,off=34,r=0,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=36,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8007
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=0,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=36,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=22,off=34,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=0,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=36,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=0,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=36,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7981
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=0,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP9 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4=pkt(id=25,off=36,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=25,off=34,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=0,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=36,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=0,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=36,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=27,off=34,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=0,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=36,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=0,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=36,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7981
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=0,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP4 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4=pkt(id=30,off=36,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=30,off=34,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=0,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=36,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=0,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=36,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=32,off=34,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=0,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	
	from 7994 to 8213: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP1 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=inv45 R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	8213: (bf) r2 = r9
	8214: (07) r2 += 20
	8215: (79) r5 = *(u64 *)(r10 -152)
	8216: (bc) w4 = w8
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	8217: (2d) if r2 > r0 goto pc-171
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=33,off=54,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=invP0 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	8218: (71) r2 = *(u8 *)(r9 +18)
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	8219: (56) if w2 != 0x0 goto pc+107
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=inv0 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=invP0 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	8220: (b4) w4 = -134
	; return (void *)(unsigned long)ctx->data;
	8221: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	8222: (bf) r3 = r2
	8223: (07) r3 += 34
	; if (data + tot_len > data_end)
	8224: (2d) if r3 > r1 goto pc-178
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=pkt(id=0,off=0,r=34,imm=0) R3=pkt(id=0,off=34,r=34,imm=0) R4=inv4294967162 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; masquerade_ip = ip4->saddr;
	8225: (61) r1 = *(u32 *)(r2 +26)
	; masquerade_ip = ip4->saddr;
	8226: (63) *(u32 *)(r10 -80) = r1
	; return ip4->ihl * 4;
	8227: (71) r2 = *(u8 *)(r2 +14)
	; return ip4->ihl * 4;
	8228: (64) w2 <<= 2
	8229: (54) w2 &= 60
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	8230: (04) w2 += 44
	8231: (bf) r3 = r10
	; masquerade_ip = ip4->saddr;
	8232: (07) r3 += -80
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	8233: (bf) r1 = r5
	8234: (b4) w4 = 4
	8235: (b4) w5 = 0
	8236: (85) call bpf_skb_store_bytes#9
	last_idx 8236 first_idx 8224
	regs=10 stack=0 before 8235: (b4) w5 = 0
	regs=10 stack=0 before 8234: (b4) w4 = 4
	8237: (79) r5 = *(u64 *)(r10 -152)
	8238: (b4) w4 = -141
	; if (ret < 0) return DROP_WRITE_ERROR;
	8239: (c6) if w0 s< 0x0 goto pc-193
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R4_w=inv4294967155 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	; return ctx->len;
	8240: (61) r1 = *(u32 *)(r5 +0)
	; __u64 cap_len = min_t(__u64, monitor ? : TRACE_PAYLOAD_LEN,
	8241: (bf) r3 = r1
	8242: (a6) if w1 < 0x80 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=inv(id=35,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=35,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4_w=inv4294967155 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	8243: (b7) r3 = 128
	; __notify_common_hdr(CILIUM_NOTIFY_TRACE, obs_point),
	8244: (61) r2 = *(u32 *)(r5 +68)
	8245: (b7) r4 = 327680
	; msg = (typeof(msg)) {
	8246: (7b) *(u64 *)(r10 -40) = r4
	8247: (18) r4 = 0x1
	8249: (63) *(u32 *)(r10 -48) = r4
	8250: (b4) w4 = 1
	8251: (6b) *(u16 *)(r10 -50) = r4
	8252: (63) *(u32 *)(r10 -56) = r1
	8253: (63) *(u32 *)(r10 -60) = r2
	8254: (b4) w1 = 20776196
	8255: (63) *(u32 *)(r10 -64) = r1
	8256: (b7) r1 = 0
	; case  8: jmp_8:  __it_set(d, 64);
	8257: (7b) *(u64 *)(r10 -32) = r1
	last_idx 8257 first_idx 8237
	regs=2 stack=0 before 8256: (b7) r1 = 0
	8258: (7b) *(u64 *)(r10 -24) = r1
	; msg = (typeof(msg)) {
	8259: (6b) *(u16 *)(r10 -52) = r3
	8260: (b4) w6 = 0
	8261: (63) *(u32 *)(r10 -44) = r6
	last_idx 8261 first_idx 8237
	regs=40 stack=0 before 8260: (b4) w6 = 0
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	8262: (67) r3 <<= 32
	8263: (18) r1 = 0xffffffff
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	8265: (4f) r3 |= r1
	8266: (bf) r4 = r10
	;
	8267: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP,
	8268: (bf) r1 = r5
	8269: (18) r2 = 0xffff7000722cc800
	8271: (b4) w5 = 48
	8272: (85) call bpf_perf_event_output#25
	last_idx 8272 first_idx 8237
	regs=20 stack=0 before 8271: (b4) w5 = 48
	8273: (b4) w1 = 20774914
	; struct debug_msg msg = {
	8274: (63) *(u32 *)(r10 -64) = r1
	8275: (b4) w1 = 50
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	8276: (79) r2 = *(u64 *)(r10 -152)
	8277: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	8278: (63) *(u32 *)(r10 -48) = r1
	8279: (18) r1 = 0x3200000032
	8281: (7b) *(u64 *)(r10 -56) = r1
	8282: (63) *(u32 *)(r10 -60) = r2
	8283: (bf) r4 = r10
	;
	8284: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	8285: (79) r1 = *(u64 *)(r10 -152)
	8286: (18) r2 = 0xffff7000722cc800
	8288: (18) r3 = 0xffffffff
	8290: (b4) w5 = 20
	8291: (85) call bpf_perf_event_output#25
	last_idx 8291 first_idx 8273
	regs=20 stack=0 before 8290: (b4) w5 = 20
	; cilium_dbg3(ctx, DBG_CT_LOOKUP4_1, masquerade_ip, masquerade_ip,
	8292: (61) r1 = *(u32 *)(r10 -80)
	8293: (b4) w2 = 20787202
	; struct debug_msg msg = {
	8294: (63) *(u32 *)(r10 -64) = r2
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	8295: (79) r2 = *(u64 *)(r10 -152)
	8296: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	8297: (63) *(u32 *)(r10 -56) = r1
	8298: (63) *(u32 *)(r10 -52) = r1
	8299: (63) *(u32 *)(r10 -48) = r6
	8300: (63) *(u32 *)(r10 -60) = r2
	8301: (bf) r4 = r10
	;
	8302: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	8303: (79) r1 = *(u64 *)(r10 -152)
	8304: (18) r2 = 0xffff7000722cc800
	8306: (18) r3 = 0xffffffff
	8308: (b4) w5 = 20
	8309: (85) call bpf_perf_event_output#25
	last_idx 8309 first_idx 8273
	regs=20 stack=0 before 8308: (b4) w5 = 20
	8310: (79) r5 = *(u64 *)(r10 -152)
	; return (void *)(unsigned long)ctx->data_end;
	8311: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	8312: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	8313: (07) r2 += 34
	8314: (b4) w4 = -134
	; if (data + tot_len > data_end)
	8315: (2d) if r2 > r1 goto pc-269
	 R0=inv(id=0) R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv4294967162 R5_w=ctx(id=0,off=0,imm=0) R6=invP0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-24=mmmmmmmm fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	; &redir_opt->ip1, 4, 0);
	8316: (07) r9 += 2
	; ret = ctx_store_bytes(ctx, ETH_HLEN + offsetof(struct iphdr, saddr),
	8317: (bf) r1 = r5
	8318: (b4) w2 = 26
	8319: (bf) r3 = r9
	8320: (b4) w4 = 4
	8321: (b4) w5 = 0
	8322: (85) call bpf_skb_store_bytes#9
	R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf
	processed 1463 insns (limit 1000000) max_states_per_insn 3 total_states 58 peak_states 58 mark_read 28
level=warning msg="JoinEP: Failed to load program for host endpoint (cil_to_host)" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" file-path=317_next/bpf_host.o identity=1 ipv4= ipv6= k8sPodName=/ subsys=datapath-loader veth=cilium_host
level=error msg="Error while rewriting endpoint BPF program" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting endpoint changes after BPF regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting proxy redirect removals" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting proxy redirect removals" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting proxy redirect additions" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting proxy redirect additions" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting endpoint changes after BPF regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=info msg="Wrote verifier log to endpoint directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/verifier.log identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=info msg="generating BPF for endpoint failed, keeping stale directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" file-path=317_next_fail identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=317_next_fail endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=317_next endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Completed endpoint regeneration with no pending regeneration requests" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=ready identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=warning msg="Regeneration of endpoint failed" bpfCompilation=0s bpfLoadProg=83.15775ms bpfWaitForELF="22.792µs" bpfWriteELF=3.382084ms containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ mapSync="74.333µs" policyCalculation="59.583µs" prepareBuild=2.034042ms proxyConfiguration="47.291µs" proxyPolicyCalculation="33.583µs" proxyWaitForAck=0s reason="retrying regeneration" subsys=endpoint total=99.870917ms waitingForCTClean=2.60925ms waitingForLock="4.332µs"
level=debug msg="Error regenerating endpoint: loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" code=Failure containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=ready identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=200
level=debug msg="EventQueue event processing statistics" eventConsumeOffQueueWaitTime="77.417µs" eventEnqueueWaitTime="37.75µs" eventHandlingDuration=99.993916ms eventType="*endpoint.EndpointRegenerationEvent" name=endpoint-317 subsys=eventqueue
level=error msg="endpoint regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Controller func execution time: 100.702791ms" name=endpoint-317-regeneration-recovery subsys=controller uuid=e7863fbe-c1cf-4ee3-ba58-7391bc06fe4a
level=debug msg="Controller run failed" consecutiveErrors=2 error="regeneration recovery failed" name=endpoint-317-regeneration-recovery subsys=controller uuid=e7863fbe-c1cf-4ee3-ba58-7391bc06fe4a
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Controller func execution time: 35.334µs" name=metricsmap-bpf-prom-sync subsys=controller uuid=38a9c0b7-176f-4a35-865f-69a2af221242
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="received signal that regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Triggering endpoint regeneration due to retrying regeneration" code=OK containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=waiting-to-regenerate identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=0
level=debug msg="Dequeued endpoint from build queue" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Regenerating endpoint" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh reason="retrying regeneration" startTime="2023-07-12 21:56:54.300267553 +0000 UTC m=+17.664177967" subsys=endpoint
level=debug msg="Regenerating endpoint: retrying regeneration" code=OK containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=regenerating identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=0
level=debug msg="removing directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 directory=1197_next endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Starting policy recalculation..." containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Skipping unnecessary endpoint policy recalculation" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyChanged=true policyRevision.next=1 policyRevision.repo=1 subsys=endpoint
level=debug msg="preparing new cache transaction: upserting 1 entries, deleting 0 entries" subsys=xds xdsCachedVersion=12 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="inserting resource into cache" subsys=xds xdsCachedVersion=12 xdsResourceName=1197 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="committing cache transaction and notifying of new version" subsys=xds xdsCachedVersion=12 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="BPF header file hashed (was: \"\")" bpfHeaderfileHash=7893731b6685475dfe5360e1b8a61cf84c83a2bf5f9ee995962246f1092743d5 containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="writing header file" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 file-path=1197_next/ep_config.h identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="writing header file with DNSRules" DNSRules="map[]" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 file-path=1197_next/ep_config.h identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Preparing to compile BPF" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh regeneration-level=rewrite+load subsys=endpoint
level=debug msg="Load 1-min: 6.02 5-min: 2.65 15min: 2.08" endpointID=1197 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2443 (62.12%) Free: 137 Buffers: 10 Cached: 1341" endpointID=1197 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1018 (99.51%) Free: 5" endpointID=1197 subsys=endpoint
level=debug msg="Found variable with offset 107972" subsys=elf symbol=LXC_ID
level=debug msg="Found variable with offset 107968" subsys=elf symbol=LXC_IPV4
level=debug msg="Found variable with offset 107952" subsys=elf symbol=LXC_IP_1
level=debug msg="Found variable with offset 107956" subsys=elf symbol=LXC_IP_2
level=debug msg="Found variable with offset 107960" subsys=elf symbol=LXC_IP_3
level=debug msg="Found variable with offset 107964" subsys=elf symbol=LXC_IP_4
level=debug msg="Found variable with offset 107976" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 107980" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 107992" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 107984" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 107988" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 30" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_container" subsys=elf
level=debug msg="Skipping cil_to_container" subsys=elf
level=debug msg="Found symbol with offset 1017016" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1016648" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1020451" subsys=elf symbol=cilium_calls_65535
level=debug msg="Found symbol with offset 1017110" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1017088" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1017209" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1016781" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1017275" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1016842" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1016609" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1021710" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1017366" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1017153" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1016758" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1022539" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1017290" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1017128" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1017314" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1016902" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1017032" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1020852" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1020431" subsys=elf symbol=cilium_policy_65535
level=debug msg="Found symbol with offset 1017174" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1016869" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1017064" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1020827" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping handle_policy" subsys=elf
level=debug msg="Skipping tail_handle_arp" subsys=elf
level=debug msg="Skipping tail_handle_ipv4" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_cont" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_ipv4_ct_egress" subsys=elf
level=debug msg="Skipping tail_ipv4_ct_ingress" subsys=elf
level=debug msg="Skipping tail_ipv4_to_endpoint" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1016705" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1016888" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1016968" subsys=elf symbol=to-container
level=debug msg="Found section with offset 1016985" subsys=elf symbol=from-container
level=debug msg="Found section with offset 1017052" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1017200" subsys=elf symbol=1/0xffff
level=debug msg="Found section with offset 1017246" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1017262" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1017329" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1017427" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1017875" subsys=elf symbol=2/29
level=debug msg="Found section with offset 1018439" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1019240" subsys=elf symbol=2/27
level=debug msg="Found section with offset 1019321" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1019367" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1020020" subsys=elf symbol=2/6
level=debug msg="Found section with offset 1020628" subsys=elf symbol=2/25
level=debug msg="Found section with offset 1022452" subsys=elf symbol=2/13
level=debug msg="Found section with offset 1023900" subsys=elf symbol=2/1
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 5.65% MEM: 2.37% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 93 VMS: 850 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=1197 subsys=endpoint
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=1197_next/bpf_lxc.o subsys=elf template-path=/var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69/bpf_lxc.o
level=debug msg="Loading CollectionSpec from ELF" device=lxc102a8ca64051 ifindex=9 objPath=1197_next/bpf_lxc.o subsys=datapath-loader
level=debug msg="Loading Collection into kernel" device=lxc102a8ca64051 ifindex=9 objPath=1197_next/bpf_lxc.o subsys=datapath-loader
Verifier error: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)
Verifier log: load program: permission denied:
	btf_vmlinux is malformed
	R1 type=ctx expected=fp
	; int tail_handle_snat_fwd_ipv4(struct __ctx_buff *ctx)
	0: (bf) r5 = r1
	1: (b4) w7 = 0
	; ctx->cb[off] = data;
	2: (63) *(u32 *)(r5 +52) = r7
	; return (void *)(unsigned long)ctx->data_end;
	3: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	4: (61) r6 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	5: (bf) r2 = r6
	6: (07) r2 += 34
	7: (7b) *(u64 *)(r10 -96) = r5
	; if (data + tot_len > data_end)
	8: (2d) if r2 > r1 goto pc+224
	 R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R10=fp0 fp-96_w=ctx
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	9: (61) r1 = *(u32 *)(r6 +26)
	10: (b7) r9 = 0
	; struct endpoint_key key = {};
	11: (63) *(u32 *)(r10 -32) = r9
	last_idx 11 first_idx 0
	regs=200 stack=0 before 10: (b7) r9 = 0
	12: (63) *(u32 *)(r10 -36) = r9
	13: (63) *(u32 *)(r10 -40) = r9
	14: (63) *(u32 *)(r10 -44) = r9
	; key.ip4 = ip;
	15: (63) *(u32 *)(r10 -48) = r1
	16: (b4) w1 = 1
	; key.family = ENDPOINT_KEY_IPV4;
	17: (73) *(u8 *)(r10 -32) = r1
	18: (bf) r2 = r10
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	19: (07) r2 += -48
	; return map_lookup_elem(&ENDPOINTS_MAP, &key);
	20: (18) r1 = 0xffff700159c9b400
	22: (85) call bpf_map_lookup_elem#1
	23: (bf) r8 = r0
	; remote_ep = lookup_ip4_remote_endpoint(ip4->daddr, 0);
	24: (61) r1 = *(u32 *)(r6 +30)
	; .ip4 = addr,
	25: (7b) *(u64 *)(r10 -32) = r9
	26: (63) *(u32 *)(r10 -36) = r7
	last_idx 26 first_idx 23
	regs=80 stack=0 before 25: (7b) *(u64 *)(r10 -32) = r9
	regs=80 stack=0 before 24: (61) r1 = *(u32 *)(r6 +30)
	regs=80 stack=0 before 23: (bf) r8 = r0
	 R0_rw=map_value_or_null(id=1,off=0,ks=20,vs=48,imm=0) R6_rw=pkt(id=0,off=0,r=34,imm=0) R7_rw=invP0 R9_rw=invP0 R10=fp0 fp-32=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-96_w=ctx
	parent didn't have regs=80 stack=0 marks
	last_idx 22 first_idx 0
	regs=80 stack=0 before 22: (85) call bpf_map_lookup_elem#1
	regs=80 stack=0 before 20: (18) r1 = 0xffff700159c9b400
	regs=80 stack=0 before 19: (07) r2 += -48
	regs=80 stack=0 before 18: (bf) r2 = r10
	regs=80 stack=0 before 17: (73) *(u8 *)(r10 -32) = r1
	regs=80 stack=0 before 16: (b4) w1 = 1
	regs=80 stack=0 before 15: (63) *(u32 *)(r10 -48) = r1
	regs=80 stack=0 before 14: (63) *(u32 *)(r10 -44) = r9
	regs=80 stack=0 before 13: (63) *(u32 *)(r10 -40) = r9
	regs=80 stack=0 before 12: (63) *(u32 *)(r10 -36) = r9
	regs=80 stack=0 before 11: (63) *(u32 *)(r10 -32) = r9
	regs=80 stack=0 before 10: (b7) r9 = 0
	regs=80 stack=0 before 9: (61) r1 = *(u32 *)(r6 +26)
	regs=80 stack=0 before 8: (2d) if r2 > r1 goto pc+224
	regs=80 stack=0 before 7: (7b) *(u64 *)(r10 -96) = r5
	regs=80 stack=0 before 6: (07) r2 += 34
	regs=80 stack=0 before 5: (bf) r2 = r6
	regs=80 stack=0 before 4: (61) r6 = *(u32 *)(r5 +76)
	regs=80 stack=0 before 3: (61) r1 = *(u32 *)(r5 +80)
	regs=80 stack=0 before 2: (63) *(u32 *)(r5 +52) = r7
	regs=80 stack=0 before 1: (b4) w7 = 0
	27: (63) *(u32 *)(r10 -40) = r1
	28: (18) r1 = 0x100000000000040
	; .lpm_key = { IPCACHE_PREFIX_LEN(prefix), {} },
	30: (7b) *(u64 *)(r10 -48) = r1
	31: (bf) r2 = r10
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	32: (07) r2 += -48
	; return map_lookup_elem(map, &key);
	33: (18) r1 = 0xffff700104950c00
	35: (85) call bpf_map_lookup_elem#1
	36: (79) r5 = *(u64 *)(r10 -96)
	; if (local_ep) {
	37: (15) if r8 == 0x0 goto pc+195
	 R0_w=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8_w=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=invP0 R10=fp0 fp-32_w=mmmmmmmm fp-40=mmmmmmmm fp-48_w=mmmmmmmm fp-96=ctx
	; .daddr = ip4->daddr,
	38: (61) r1 = *(u32 *)(r6 +30)
	; struct ipv4_ct_tuple tuple = {
	39: (63) *(u32 *)(r10 -88) = r1
	; .saddr = ip4->saddr
	40: (61) r1 = *(u32 *)(r6 +26)
	; struct ipv4_ct_tuple tuple = {
	41: (63) *(u32 *)(r10 -84) = r1
	42: (b4) w2 = 0
	43: (63) *(u32 *)(r10 -80) = r2
	last_idx 43 first_idx 23
	regs=4 stack=0 before 42: (b4) w2 = 0
	; .nexthdr = ip4->protocol,
	44: (71) r1 = *(u8 *)(r6 +23)
	; struct ipv4_ct_tuple tuple = {
	45: (73) *(u8 *)(r10 -75) = r2
	;
	46: (18) r3 = 0xffff7001044a2800
	48: (16) if w1 == 0x6 goto pc+2
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=invP0 R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0?0000 fp-88=mmmmmmmm fp-96=ctx
	49: (18) r3 = 0xffff7000ef1d5000
	; struct ipv4_ct_tuple tuple = {
	51: (73) *(u8 *)(r10 -76) = r1
	; return ip4->ihl * 4;
	52: (71) r9 = *(u8 *)(r6 +14)
	; return ip4->ihl * 4;
	53: (64) w9 <<= 2
	54: (54) w9 &= 60
	; ct_is_reply4(get_ct_map4(&tuple), ctx, ETH_HLEN +
	55: (04) w9 += 14
	; switch (tuple->nexthdr) {
	56: (16) if w1 == 0x11 goto pc+38
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9_w=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	57: (16) if w1 == 0x6 goto pc+37
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	58: (56) if w1 != 0x1 goto pc+174
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv1 R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	59: (bf) r6 = r3
	60: (b4) w1 = 0
	; __be16 identifier = 0;
	61: (6b) *(u16 *)(r10 -48) = r1
	last_idx 61 first_idx 57
	regs=2 stack=0 before 60: (b4) w1 = 0
	62: (bf) r3 = r10
	;
	63: (07) r3 += -72
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	64: (bf) r1 = r5
	65: (bc) w2 = w9
	66: (b4) w4 = 1
	67: (85) call bpf_skb_load_bytes#26
	last_idx 67 first_idx 57
	regs=10 stack=0 before 66: (b4) w4 = 1
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	68: (c6) if w0 s< 0x0 goto pc+163
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	69: (71) r3 = *(u8 *)(r10 -72)
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	70: (bc) w2 = w3
	71: (44) w2 |= 8
	72: (79) r1 = *(u64 *)(r10 -96)
	73: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=ctx(id=0,off=0,imm=0) R2_w=inv(id=0,umin_value=8,umax_value=255,var_off=(0x8; 0xf7)) R3_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	74: (05) goto pc+8
	; switch (type) {
	83: (b4) w2 = 0
	; tuple->dport = 0;
	84: (63) *(u32 *)(r10 -80) = r2
	last_idx 84 first_idx 68
	regs=4 stack=0 before 83: (b4) w2 = 0
	; switch (type) {
	85: (bf) r2 = r3
	86: (66) if w2 s> 0xa goto pc+46
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=ctx(id=0,off=0,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	87: (bf) r1 = r6
	88: (16) if w2 == 0x0 goto pc+51
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	89: (16) if w2 == 0x3 goto pc+46
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	90: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	91: (05) goto pc+135
	; if (err < 0)
	227: (b4) w2 = 1
	; tuple->flags = TUPLE_F_IN;
	228: (73) *(u8 *)(r10 -75) = r2
	229: (bf) r2 = r10
	;
	230: (07) r2 += -88
	; *is_reply = map_lookup_elem(map, tuple) != NULL;
	231: (85) call bpf_map_lookup_elem#1
	232: (79) r5 = *(u64 *)(r10 -96)
	233: (b7) r1 = 0
	; struct ipv4_ct_tuple tuple = {};
	234: (7b) *(u64 *)(r10 -88) = r1
	last_idx 234 first_idx 232
	regs=2 stack=0 before 233: (b7) r1 = 0
	235: (6b) *(u16 *)(r10 -76) = r7
	236: (63) *(u32 *)(r10 -80) = r7
	; return (void *)(unsigned long)ctx->data_end;
	237: (61) r2 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	238: (61) r8 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	239: (bf) r1 = r8
	240: (07) r1 += 34
	; if (data + tot_len > data_end)
	241: (2d) if r1 > r2 goto pc+251
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=pkt(id=0,off=34,r=34,imm=0) R2_w=pkt_end(id=0,off=0,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??000000 fp-88_w=00000000 fp-96=ctx
	242: (7b) *(u64 *)(r10 -104) = r2
	243: (b4) w7 = -158
	; return ip4->frag_off & bpf_htons(0x1FFF);
	244: (69) r6 = *(u16 *)(r8 +20)
	; tuple->nexthdr = ip4->protocol;
	245: (71) r1 = *(u8 *)(r8 +23)
	; tuple->nexthdr = ip4->protocol;
	246: (73) *(u8 *)(r10 -76) = r1
	; tuple->daddr = ip4->daddr;
	247: (61) r2 = *(u32 *)(r8 +30)
	; tuple->daddr = ip4->daddr;
	248: (63) *(u32 *)(r10 -88) = r2
	; tuple->saddr = ip4->saddr;
	249: (61) r3 = *(u32 *)(r8 +26)
	; tuple->saddr = ip4->saddr;
	250: (63) *(u32 *)(r10 -84) = r3
	; switch (tuple->nexthdr) {
	251: (16) if w1 == 0x1 goto pc+120
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5_w=ctx(id=0,off=0,imm=0) R6_w=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv4294967138 R8_w=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88_w=mmmmmmmm fp-96=ctx fp-104_w=pkt_end
	;
	252: (71) r7 = *(u8 *)(r8 +14)
	; switch (tuple->nexthdr) {
	253: (16) if w1 == 0x11 goto pc+1
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	254: (56) if w1 != 0x6 goto pc+29
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv6 R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; struct ipv4_frag_id frag_id = {
	255: (63) *(u32 *)(r10 -68) = r3
	256: (63) *(u32 *)(r10 -72) = r2
	; .id = ip4->id,
	257: (69) r2 = *(u16 *)(r8 +18)
	258: (b4) w3 = 0
	; struct ipv4_frag_id frag_id = {
	259: (73) *(u8 *)(r10 -61) = r3
	last_idx 259 first_idx 253
	regs=8 stack=0 before 258: (b4) w3 = 0
	260: (73) *(u8 *)(r10 -62) = r1
	261: (6b) *(u16 *)(r10 -64) = r2
	; return ip4->frag_off & bpf_htons(0x3FFF);
	262: (bc) w1 = w6
	263: (54) w1 &= 65343
	; if (unlikely(is_fragment)) {
	264: (16) if w1 == 0x0 goto pc+46
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=65343,var_off=(0x0; 0xff3f)) R2=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R3=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; return ctx->len;
	265: (61) r9 = *(u32 *)(r5 +0)
	266: (b7) r1 = 0
	; struct metrics_value *entry, new_entry = {};
	267: (7b) *(u64 *)(r10 -40) = r1
	last_idx 267 first_idx 264
	regs=2 stack=0 before 266: (b7) r1 = 0
	268: (7b) *(u64 *)(r10 -48) = r1
	269: (b7) r1 = 521
	; struct metrics_key key = {};
	270: (7b) *(u64 *)(r10 -56) = r1
	271: (bf) r2 = r10
	;
	272: (07) r2 += -56
	; entry = map_lookup_elem(&METRICS_MAP, &key);
	273: (18) r1 = 0xffff7000ac846c00
	275: (85) call bpf_map_lookup_elem#1
	; if (entry) {
	276: (15) if r0 == 0x0 goto pc+9
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; entry->count += 1;
	277: (79) r1 = *(u64 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	278: (07) r1 += 1
	279: (7b) *(u64 *)(r0 +0) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; entry->bytes += bytes;
	280: (79) r1 = *(u64 *)(r0 +8)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	281: (0f) r1 += r9
	282: (7b) *(u64 *)(r0 +8) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	283: (05) goto pc+13
	; return ip4->frag_off & bpf_htons(0x1FFF);
	297: (69) r1 = *(u16 *)(r8 +20)
	; return ip4->frag_off & bpf_htons(0x1FFF);
	298: (54) w1 &= 65311
	299: (79) r5 = *(u64 *)(r10 -96)
	; if (likely(not_first_fragment))
	300: (16) if w1 == 0x0 goto pc+10
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0,umax_value=65311,var_off=(0x0; 0xff1f)) R5_w=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	301: (bf) r2 = r10
	;
	302: (07) r2 += -72
	; tmp = map_lookup_elem(&IPV4_FRAG_DATAGRAMS_MAP, frag_id);
	303: (18) r1 = 0xffff7001044a2400
	305: (85) call bpf_map_lookup_elem#1
	; if (!tmp)
	306: (55) if r0 != 0x0 goto pc+637
	
	from 306 to 944: R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; case  4: __it_mob(d, s, 32);
	944: (61) r1 = *(u32 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	945: (63) *(u32 *)(r10 -80) = r1
	946: (05) goto pc-577
	; map_update_elem(&METRICS_MAP, &key, &new_entry, 0);
	370: (79) r5 = *(u64 *)(r10 -96)
	371: (b4) w7 = 0
	372: (54) w6 &= -225
	373: (b4) w1 = 1
	; if (IS_ERR(ret)) goto skip_crab;
	374: (16) if w7 == 0x2 goto pc+1
	last_idx 374 first_idx 306
	regs=80 stack=0 before 373: (b4) w1 = 1
	regs=80 stack=0 before 372: (54) w6 &= -225
	regs=80 stack=0 before 371: (b4) w7 = 0
	375: (b4) w1 = 0
	; return ip4->frag_off & bpf_htons(0x1FFF);
	376: (54) w6 &= 65535
	377: (79) r0 = *(u64 *)(r10 -104)
	; if (IS_ERR(ret)) goto skip_crab;
	378: (56) if w6 != 0x0 goto pc+114
	 R0_w=pkt_end(id=0,off=0,imm=0) R1=inv0 R5=ctx(id=0,off=0,imm=0) R6_w=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	;
	379: (bc) w2 = w7
	380: (74) w2 >>= 31
	381: (4c) w2 |= w1
	; if (IS_ERR(ret)) goto skip_crab;
	382: (56) if w2 != 0x0 goto pc+110
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	383: (71) r1 = *(u8 *)(r8 +23)
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	384: (56) if w1 != 0x6 goto pc+108
	 R0=pkt_end(id=0,off=0,imm=0) R1=inv6 R2=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	385: (07) r8 += 14
	; return ip4->ihl * 4;
	386: (71) r1 = *(u8 *)(r8 +0)
	; return ip4->ihl * 4;
	387: (64) w1 <<= 2
	388: (57) r1 &= 60
	; tcph = (struct tcphdr *)((void*)ip4 + ipv4_hdrlen(ip4));
	389: (0f) r8 += r1
	last_idx 389 first_idx 384
	regs=2 stack=0 before 388: (57) r1 &= 60
	regs=2 stack=0 before 387: (64) w1 <<= 2
	regs=2 stack=0 before 386: (71) r1 = *(u8 *)(r8 +0)
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	390: (bf) r9 = r8
	391: (07) r9 += 20
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	392: (2d) if r9 > r0 goto pc+100
	 R0=pkt_end(id=0,off=0,imm=0) R1_w=invP(id=0,umax_value=60,var_off=(0x0; 0x3c)) R2=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	393: (b4) w2 = 15
	;
	394: (61) r1 = *(u32 *)(r5 +80)
	; offset = tcph->doff * 4;
	395: (69) r3 = *(u16 *)(r8 +12)
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	396: (74) w3 >>= 2
	397: (54) w3 &= 60
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	398: (04) w3 += -20
	399: (05) goto pc+5
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=inv(id=0,umax_value=252,var_off=(0x0; 0xfc)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	last_idx 404 first_idx 464
	regs=4 stack=0 before 403: (04) w2 += -1
	regs=4 stack=0 before 402: (79) r5 = *(u64 *)(r10 -96)
	regs=4 stack=0 before 467: (05) goto pc-66
	regs=4 stack=0 before 466: (1c) w3 -= w4
	regs=4 stack=0 before 465: (0f) r9 += r4
	regs=4 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=8,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_r=pkt(id=8,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 451 first_idx 433
	regs=4 stack=0 before 451: (bd) if r4 <= r1 goto pc+12
	regs=4 stack=0 before 450: (07) r4 += 2
	regs=4 stack=0 before 449: (bf) r4 = r9
	regs=4 stack=0 before 436: (56) if w5 != 0x0 goto pc+12
	regs=4 stack=0 before 435: (16) if w5 == 0x2d goto pc+265
	regs=4 stack=0 before 434: (16) if w5 == 0x1 goto pc-35
	regs=4 stack=0 before 433: (71) r5 = *(u8 *)(r9 +0)
	 R0=pkt_end(id=0,off=0,imm=0) R1_r=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7_r=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9_r=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32_r=mmmmmmmm fp-40=00000000 fp-48_r=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104_r=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 421 first_idx 405
	regs=4 stack=0 before 421: (bd) if r4 <= r1 goto pc+11
	regs=4 stack=0 before 420: (07) r4 += 1
	regs=4 stack=0 before 419: (bf) r4 = r9
	regs=4 stack=0 before 407: (56) if w4 != 0x0 goto pc+11
	regs=4 stack=0 before 406: (54) w4 &= 255
	regs=4 stack=0 before 405: (bc) w4 = w3
	 R0=pkt_end(id=0,off=0,imm=0) R1_rw=pkt_end(id=0,off=0,imm=0) R2_rw=invP15 R3_rw=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R5_r=ctx(id=0,off=0,imm=0) R6=inv0 R7_r=invP0 R8_w=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_rw=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32_r=mmmmmmmm fp-40=00000000 fp-48_r=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104_r=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 399 first_idx 384
	regs=4 stack=0 before 399: (05) goto pc+5
	regs=4 stack=0 before 398: (04) w3 += -20
	regs=4 stack=0 before 397: (54) w3 &= 60
	regs=4 stack=0 before 396: (74) w3 >>= 2
	regs=4 stack=0 before 395: (69) r3 = *(u16 *)(r8 +12)
	regs=4 stack=0 before 394: (61) r1 = *(u32 *)(r5 +80)
	regs=4 stack=0 before 393: (b4) w2 = 15
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=0,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=19,off=36,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 449
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=0,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=36,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 451
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=0,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=36,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=0,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=36,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=0,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=36,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 419
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=0,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP9 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4=pkt(id=24,off=36,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=24,off=34,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=0,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=36,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=0,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=36,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=26,off=34,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=0,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=36,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=0,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=36,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 419
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=0,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP4 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4=pkt(id=29,off=36,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=29,off=34,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=0,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=36,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=0,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=36,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=31,off=34,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=0,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	
	from 435 to 701: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP1 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=inv45 R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	701: (bf) r2 = r9
	702: (07) r2 += 20
	703: (79) r5 = *(u64 *)(r10 -96)
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	704: (2d) if r2 > r0 goto pc-212
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=32,off=54,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	705: (71) r2 = *(u8 *)(r9 +18)
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	706: (56) if w2 != 0x0 goto pc+130
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=inv0 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	707: (b4) w7 = -134
	; return (void *)(unsigned long)ctx->data;
	708: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	709: (bf) r3 = r2
	710: (07) r3 += 34
	; if (data + tot_len > data_end)
	711: (2d) if r3 > r1 goto pc-219
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=pkt(id=0,off=0,r=34,imm=0) R3=pkt(id=0,off=34,r=34,imm=0) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=inv4294967162 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; masquerade_ip = ip4->saddr;
	712: (61) r1 = *(u32 *)(r2 +26)
	; masquerade_ip = ip4->saddr;
	713: (63) *(u32 *)(r10 -72) = r1
	; return ip4->ihl * 4;
	714: (71) r2 = *(u8 *)(r2 +14)
	; return ip4->ihl * 4;
	715: (64) w2 <<= 2
	716: (54) w2 &= 60
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	717: (04) w2 += 44
	718: (bf) r3 = r10
	; masquerade_ip = ip4->saddr;
	719: (07) r3 += -72
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	720: (bf) r1 = r5
	721: (b4) w4 = 4
	722: (b4) w5 = 0
	723: (85) call bpf_skb_store_bytes#9
	last_idx 723 first_idx 711
	regs=10 stack=0 before 722: (b4) w5 = 0
	regs=10 stack=0 before 721: (b4) w4 = 4
	724: (79) r5 = *(u64 *)(r10 -96)
	725: (b4) w7 = -141
	; if (ret < 0) return DROP_WRITE_ERROR;
	726: (c6) if w0 s< 0x0 goto pc-234
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7_w=inv4294967155 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	; return ctx->len;
	727: (61) r1 = *(u32 *)(r5 +0)
	; __u64 cap_len = min_t(__u64, monitor ? : TRACE_PAYLOAD_LEN,
	728: (bf) r3 = r1
	729: (a6) if w1 < 0x80 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=inv(id=34,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=34,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7_w=inv4294967155 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	730: (b7) r3 = 128
	731: (b7) r2 = 0
	; __notify_common_hdr(CILIUM_NOTIFY_TRACE, obs_point),
	732: (61) r4 = *(u32 *)(r5 +68)
	; msg = (typeof(msg)) {
	733: (73) *(u8 *)(r10 -14) = r2
	last_idx 733 first_idx 724
	regs=4 stack=0 before 732: (61) r4 = *(u32 *)(r5 +68)
	regs=4 stack=0 before 731: (b7) r2 = 0
	734: (73) *(u8 *)(r10 -15) = r2
	735: (73) *(u8 *)(r10 -16) = r2
	736: (73) *(u8 *)(r10 -17) = r2
	737: (73) *(u8 *)(r10 -18) = r2
	738: (73) *(u8 *)(r10 -19) = r2
	739: (73) *(u8 *)(r10 -20) = r2
	740: (73) *(u8 *)(r10 -6) = r2
	741: (73) *(u8 *)(r10 -7) = r2
	742: (73) *(u8 *)(r10 -8) = r2
	743: (73) *(u8 *)(r10 -9) = r2
	744: (73) *(u8 *)(r10 -10) = r2
	745: (73) *(u8 *)(r10 -11) = r2
	746: (73) *(u8 *)(r10 -12) = r2
	747: (73) *(u8 *)(r10 -13) = r2
	748: (b4) w2 = 327680
	749: (63) *(u32 *)(r10 -24) = r2
	750: (18) r2 = 0x246c
	752: (63) *(u32 *)(r10 -32) = r2
	753: (b4) w2 = 1
	754: (6b) *(u16 *)(r10 -34) = r2
	755: (63) *(u32 *)(r10 -40) = r1
	756: (63) *(u32 *)(r10 -44) = r4
	757: (b4) w1 = 1284
	758: (6b) *(u16 *)(r10 -48) = r1
	759: (6b) *(u16 *)(r10 -36) = r3
	760: (b4) w6 = 0
	761: (73) *(u8 *)(r10 -2) = r6
	last_idx 761 first_idx 724
	regs=40 stack=0 before 760: (b4) w6 = 0
	762: (73) *(u8 *)(r10 -3) = r6
	763: (73) *(u8 *)(r10 -4) = r6
	764: (73) *(u8 *)(r10 -5) = r6
	765: (63) *(u32 *)(r10 -28) = r6
	766: (18) r7 = 0x4ad
	768: (6b) *(u16 *)(r10 -46) = r7
	769: (73) *(u8 *)(r10 -1) = r6
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	770: (67) r3 <<= 32
	771: (18) r1 = 0xffffffff
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	773: (4f) r3 |= r1
	774: (bf) r4 = r10
	;
	775: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP,
	776: (bf) r1 = r5
	777: (18) r2 = 0xffff7000722cc800
	779: (b4) w5 = 48
	780: (85) call bpf_perf_event_output#25
	last_idx 780 first_idx 724
	regs=20 stack=0 before 779: (b4) w5 = 48
	781: (b4) w1 = 2
	; struct debug_msg msg = {
	782: (6b) *(u16 *)(r10 -48) = r1
	783: (6b) *(u16 *)(r10 -46) = r7
	784: (b4) w1 = 50
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	785: (79) r2 = *(u64 *)(r10 -96)
	786: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	787: (63) *(u32 *)(r10 -32) = r1
	788: (18) r1 = 0x3200000032
	790: (7b) *(u64 *)(r10 -40) = r1
	791: (63) *(u32 *)(r10 -44) = r2
	792: (bf) r4 = r10
	;
	793: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	794: (79) r1 = *(u64 *)(r10 -96)
	795: (18) r2 = 0xffff7000722cc800
	797: (18) r3 = 0xffffffff
	799: (b4) w5 = 20
	800: (85) call bpf_perf_event_output#25
	last_idx 800 first_idx 781
	regs=20 stack=0 before 799: (b4) w5 = 20
	; cilium_dbg3(ctx, DBG_CT_LOOKUP4_1, masquerade_ip, masquerade_ip,
	801: (61) r1 = *(u32 *)(r10 -72)
	; struct debug_msg msg = {
	802: (6b) *(u16 *)(r10 -46) = r7
	803: (b4) w2 = 12290
	804: (6b) *(u16 *)(r10 -48) = r2
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	805: (79) r2 = *(u64 *)(r10 -96)
	806: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	807: (63) *(u32 *)(r10 -32) = r6
	808: (63) *(u32 *)(r10 -36) = r1
	809: (63) *(u32 *)(r10 -40) = r1
	810: (63) *(u32 *)(r10 -44) = r2
	811: (bf) r4 = r10
	;
	812: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	813: (79) r1 = *(u64 *)(r10 -96)
	814: (18) r2 = 0xffff7000722cc800
	816: (18) r3 = 0xffffffff
	818: (b4) w5 = 20
	819: (85) call bpf_perf_event_output#25
	last_idx 819 first_idx 781
	regs=20 stack=0 before 818: (b4) w5 = 20
	820: (79) r5 = *(u64 *)(r10 -96)
	; return (void *)(unsigned long)ctx->data_end;
	821: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	822: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	823: (07) r2 += 34
	824: (b4) w7 = -134
	; if (data + tot_len > data_end)
	825: (2d) if r2 > r1 goto pc-333
	 R0=inv(id=0) R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=invP0 R7_w=inv4294967162 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmmmmmm fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	; &redir_opt->ip1, 4, 0);
	826: (07) r9 += 2
	; ret = ctx_store_bytes(ctx, ETH_HLEN + offsetof(struct iphdr, saddr),
	827: (bf) r1 = r5
	828: (b4) w2 = 26
	829: (bf) r3 = r9
	830: (b4) w4 = 4
	831: (b4) w5 = 0
	832: (85) call bpf_skb_store_bytes#9
	R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf
	processed 1623 insns (limit 1000000) max_states_per_insn 3 total_states 55 peak_states 55 mark_read 27
level=warning msg="JoinEP: Failed to attach program(s)" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" file-path=1197_next/bpf_lxc.o identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=datapath-loader veth=lxc102a8ca64051
level=error msg="Error while rewriting endpoint BPF program" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Reverting endpoint changes after BPF regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Reverting proxy redirect removals" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Finished reverting proxy redirect removals" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Reverting xDS network policy update" subsys=envoy-manager
level=debug msg="preparing new cache transaction: upserting 0 entries, deleting 1 entries" subsys=xds xdsCachedVersion=13 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="deleting resource from cache" subsys=xds xdsCachedVersion=13 xdsResourceName=1197 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="committing cache transaction and notifying of new version" subsys=xds xdsCachedVersion=13 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="Finished reverting xDS network policy update" subsys=envoy-manager
level=debug msg="Reverting proxy redirect additions" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Finished reverting proxy redirect additions" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Finished reverting endpoint changes after BPF regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=info msg="Wrote verifier log to endpoint directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 file-path=1197_next/verifier.log identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=info msg="generating BPF for endpoint failed, keeping stale directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" file-path=1197_next_fail identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="removing directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 directory=1197_next_fail endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="removing directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 directory=1197_next endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Completed endpoint regeneration with no pending regeneration requests" code=OK containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=ready identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=0
level=warning msg="Regeneration of endpoint failed" bpfCompilation=0s bpfLoadProg=40.65175ms bpfWaitForELF="8.083µs" bpfWriteELF=2.31625ms containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh mapSync="88.459µs" policyCalculation="375µs" prepareBuild=1.547959ms proxyConfiguration="47.583µs" proxyPolicyCalculation="205.625µs" proxyWaitForAck=0s reason="retrying regeneration" subsys=endpoint total=53.170459ms waitingForCTClean=4.367792ms waitingForLock="5.916µs"
level=debug msg="Error regenerating endpoint: loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" code=Failure containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=ready identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=200
level=debug msg="EventQueue event processing statistics" eventConsumeOffQueueWaitTime="65µs" eventEnqueueWaitTime="32.25µs" eventHandlingDuration=53.354208ms eventType="*endpoint.EndpointRegenerationEvent" name=endpoint-1197 subsys=eventqueue
level=error msg="endpoint regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Controller func execution time: 54.022334ms" name=endpoint-1197-regeneration-recovery subsys=controller uuid=8ad41e88-742f-451d-9f1b-b8a945514606
level=debug msg="Controller run failed" consecutiveErrors=3 error="regeneration recovery failed" name=endpoint-1197-regeneration-recovery subsys=controller uuid=8ad41e88-742f-451d-9f1b-b8a945514606
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Controller func execution time: 666.084µs" name=link-cache subsys=controller uuid=943db86b-b8d5-4ac1-9d64-5a68b09b3280
level=debug msg="received signal that regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Triggering endpoint regeneration due to retrying regeneration" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=waiting-to-regenerate identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="Dequeued endpoint from build queue" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Regenerating endpoint" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ reason="retrying regeneration" startTime="2023-07-12 21:56:55.665113595 +0000 UTC m=+19.029023968" subsys=endpoint
level=debug msg="Regenerating endpoint: retrying regeneration" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=regenerating identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=317_next endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Starting policy recalculation..." containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Skipping unnecessary endpoint policy recalculation" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ policyChanged=true policyRevision.next=1 policyRevision.repo=1 subsys=endpoint
level=debug msg="Endpoint has no IP addresses" endpointID=317 subsys=envoy-manager
level=debug msg="BPF header file hashed (was: \"\")" bpfHeaderfileHash=0f5fa9a0ac774df439d9f3dc0bdbff52d824f5c229dffe9c8ab4b3a39b7c2977 containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="writing header file" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/ep_config.h identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="writing header file with DNSRules" DNSRules="map[]" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/ep_config.h identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Preparing to compile BPF" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ regeneration-level=rewrite+load subsys=endpoint
level=debug msg="Load 1-min: 6.02 5-min: 2.65 15min: 2.08" endpointID=317 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2463 (62.64%) Free: 113 Buffers: 10 Cached: 1345" endpointID=317 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1018 (99.49%) Free: 5" endpointID=317 subsys=endpoint
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_65535
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_65535
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 5.71% MEM: 2.20% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 86 VMS: 850 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_host.o subsys=elf template-path=/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e/bpf_host.o
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_00317
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_00317
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_host_cilium_net.o subsys=elf template-path=317_next/bpf_host.o
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_00317
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_00317
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_netdev_eth0.o subsys=elf template-path=317_next/bpf_host.o
level=debug msg="Loading CollectionSpec from ELF" device=cilium_host ifindex=5 objPath=317_next/bpf_host.o subsys=datapath-loader
level=debug msg="Loading Collection into kernel" device=cilium_host ifindex=5 objPath=317_next/bpf_host.o subsys=datapath-loader
Verifier error: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)
Verifier log: load program: permission denied:
	btf_vmlinux is malformed
	R1 type=ctx expected=fp
	; int tail_handle_snat_fwd_ipv4(struct __ctx_buff *ctx)
	0: (bf) r5 = r1
	1: (b4) w9 = 0
	; ctx->cb[off] = data;
	2: (63) *(u32 *)(r5 +52) = r9
	; return (void *)(unsigned long)ctx->data_end;
	3: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	4: (61) r6 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	5: (bf) r2 = r6
	6: (07) r2 += 34
	; __s8 ext_err = 0;
	7: (b4) w7 = 0
	8: (b4) w4 = 0
	9: (7b) *(u64 *)(r10 -152) = r5
	; if (data + tot_len > data_end)
	10: (2d) if r2 > r1 goto pc+7173
	 R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	;
	11: (61) r1 = *(u32 *)(r6 +26)
	; if (DIRECT_ROUTING_DEV_IFINDEX == NATIVE_DEV_IFINDEX &&
	12: (56) if w1 != 0x20015ac goto pc+3
	 R1_w=inv33559980 R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	13: (18) r2 = 0x0
	15: (16) if w2 == 0x41 goto pc+85
	last_idx 15 first_idx 15
	 R1_w=inv33559980 R2_rw=invP0 R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	parent didn't have regs=4 stack=0 marks
	last_idx 13 first_idx 0
	regs=4 stack=0 before 13: (18) r2 = 0x0
	; key.ip4 = ip;
	16: (63) *(u32 *)(r10 -64) = r1
	17: (b7) r7 = 0
	; struct endpoint_key key = {};
	18: (63) *(u32 *)(r10 -48) = r7
	last_idx 18 first_idx 15
	regs=80 stack=0 before 17: (b7) r7 = 0
	19: (63) *(u32 *)(r10 -52) = r7
	20: (63) *(u32 *)(r10 -56) = r7
	21: (63) *(u32 *)(r10 -60) = r7
	22: (b4) w1 = 1
	; key.family = ENDPOINT_KEY_IPV4;
	23: (73) *(u8 *)(r10 -48) = r1
	24: (bf) r2 = r10
	;
	25: (07) r2 += -64
	; return map_lookup_elem(&ENDPOINTS_MAP, &key);
	26: (18) r1 = 0xffff700159c9b400
	28: (85) call bpf_map_lookup_elem#1
	29: (bf) r8 = r0
	; remote_ep = lookup_ip4_remote_endpoint(ip4->daddr, 0);
	30: (61) r1 = *(u32 *)(r6 +30)
	; .ip4 = addr,
	31: (7b) *(u64 *)(r10 -48) = r7
	32: (63) *(u32 *)(r10 -56) = r1
	33: (18) r1 = 0x100000000000040
	; .lpm_key = { IPCACHE_PREFIX_LEN(prefix), {} },
	35: (7b) *(u64 *)(r10 -64) = r1
	36: (b4) w7 = 0
	; .ip4 = addr,
	37: (63) *(u32 *)(r10 -52) = r7
	last_idx 37 first_idx 29
	regs=80 stack=0 before 36: (b4) w7 = 0
	38: (bf) r2 = r10
	;
	39: (07) r2 += -64
	; return map_lookup_elem(map, &key);
	40: (18) r1 = 0xffff700104950c00
	42: (85) call bpf_map_lookup_elem#1
	43: (79) r5 = *(u64 *)(r10 -152)
	44: (b4) w4 = 0
	; if (local_ep) {
	45: (15) if r8 == 0x0 goto pc+7138
	 R0_w=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=invP0 R8_w=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv0 R10=fp0 fp-48_w=mmmmmmmm fp-56=mmmmmmmm fp-64_w=mmmmmmmm fp-152=ctx
	; .daddr = ip4->daddr,
	46: (61) r1 = *(u32 *)(r6 +30)
	; struct ipv4_ct_tuple tuple = {
	47: (63) *(u32 *)(r10 -128) = r1
	; .saddr = ip4->saddr
	48: (61) r1 = *(u32 *)(r6 +26)
	; struct ipv4_ct_tuple tuple = {
	49: (63) *(u32 *)(r10 -124) = r1
	50: (b4) w2 = 0
	51: (63) *(u32 *)(r10 -120) = r2
	last_idx 51 first_idx 29
	regs=4 stack=0 before 50: (b4) w2 = 0
	; .nexthdr = ip4->protocol,
	52: (71) r1 = *(u8 *)(r6 +23)
	; struct ipv4_ct_tuple tuple = {
	53: (73) *(u8 *)(r10 -115) = r2
	;
	54: (18) r7 = 0xffff7001044a2800
	56: (16) if w1 == 0x6 goto pc+2
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0?0000 fp-128=mmmmmmmm fp-152=ctx
	57: (18) r7 = 0xffff7000ef1d5000
	; struct ipv4_ct_tuple tuple = {
	59: (73) *(u8 *)(r10 -116) = r1
	; return ip4->ihl * 4;
	60: (71) r8 = *(u8 *)(r6 +14)
	; return ip4->ihl * 4;
	61: (64) w8 <<= 2
	62: (54) w8 &= 60
	; ct_is_reply4(get_ct_map4(&tuple), ctx, ETH_HLEN +
	63: (04) w8 += 14
	; switch (tuple->nexthdr) {
	64: (16) if w1 == 0x11 goto pc+114
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8_w=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	65: (16) if w1 == 0x6 goto pc+113
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	66: (56) if w1 != 0x1 goto pc+6938
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv1 R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	67: (b4) w1 = 0
	; __be16 identifier = 0;
	68: (6b) *(u16 *)(r10 -64) = r1
	last_idx 68 first_idx 65
	regs=2 stack=0 before 67: (b4) w1 = 0
	69: (bf) r3 = r10
	;
	70: (07) r3 += -80
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	71: (bf) r1 = r5
	72: (bc) w2 = w8
	73: (b4) w4 = 1
	74: (85) call bpf_skb_load_bytes#26
	last_idx 74 first_idx 65
	regs=10 stack=0 before 73: (b4) w4 = 1
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	75: (c6) if w0 s< 0x0 goto pc+6928
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	76: (71) r3 = *(u8 *)(r10 -80)
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	77: (bc) w2 = w3
	78: (44) w2 |= 8
	79: (79) r1 = *(u64 *)(r10 -152)
	80: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=ctx(id=0,off=0,imm=0) R2_w=inv(id=0,umin_value=8,umax_value=255,var_off=(0x8; 0xf7)) R3_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	81: (05) goto pc+8
	; switch (type) {
	90: (b4) w2 = 0
	; tuple->dport = 0;
	91: (63) *(u32 *)(r10 -120) = r2
	last_idx 91 first_idx 75
	regs=4 stack=0 before 90: (b4) w2 = 0
	; switch (type) {
	92: (bf) r1 = r3
	93: (66) if w1 s> 0xa goto pc+6400
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	94: (16) if w1 == 0x0 goto pc+6512
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	95: (16) if w1 == 0x3 goto pc+6400
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	96: (16) if w1 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	97: (05) goto pc+6900
	; if (err < 0)
	6998: (b4) w1 = 1
	; tuple->flags = TUPLE_F_IN;
	6999: (73) *(u8 *)(r10 -115) = r1
	7000: (bf) r2 = r10
	;
	7001: (07) r2 += -128
	; *is_reply = map_lookup_elem(map, tuple) != NULL;
	7002: (bf) r1 = r7
	7003: (85) call bpf_map_lookup_elem#1
	7004: (79) r5 = *(u64 *)(r10 -152)
	7005: (b4) w7 = 0
	7006: (b4) w4 = 0
	7007: (05) goto pc+175
	; if (ret == NAT_PUNT_TO_STACK)
	7183: (b4) w9 = 0
	; struct ipv4_ct_tuple tuple = {};
	7184: (6b) *(u16 *)(r10 -116) = r9
	last_idx 7184 first_idx 7004
	regs=200 stack=0 before 7183: (b4) w9 = 0
	7185: (63) *(u32 *)(r10 -120) = r9
	7186: (b7) r1 = 0
	7187: (7b) *(u64 *)(r10 -128) = r1
	last_idx 7187 first_idx 7004
	regs=2 stack=0 before 7186: (b7) r1 = 0
	; return (void *)(unsigned long)ctx->data_end;
	7188: (61) r2 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	7189: (61) r8 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	7190: (bf) r1 = r8
	7191: (07) r1 += 34
	; if (data + tot_len > data_end)
	7192: (2d) if r1 > r2 goto pc+854
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=pkt(id=0,off=34,r=34,imm=0) R2_w=pkt_end(id=0,off=0,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9_w=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??000000 fp-128_w=00000000 fp-152=ctx
	7193: (7b) *(u64 *)(r10 -160) = r2
	7194: (b4) w4 = -158
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7195: (69) r6 = *(u16 *)(r8 +20)
	; tuple->nexthdr = ip4->protocol;
	7196: (71) r1 = *(u8 *)(r8 +23)
	; tuple->nexthdr = ip4->protocol;
	7197: (73) *(u8 *)(r10 -116) = r1
	; tuple->daddr = ip4->daddr;
	7198: (61) r2 = *(u32 *)(r8 +30)
	; tuple->daddr = ip4->daddr;
	7199: (63) *(u32 *)(r10 -128) = r2
	; tuple->saddr = ip4->saddr;
	7200: (61) r3 = *(u32 *)(r8 +26)
	; tuple->saddr = ip4->saddr;
	7201: (63) *(u32 *)(r10 -124) = r3
	; switch (tuple->nexthdr) {
	7202: (16) if w1 == 0x1 goto pc+732
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv0 R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end
	7203: (63) *(u32 *)(r10 -168) = r7
	last_idx 7203 first_idx 7202
	regs=80 stack=0 before 7202: (16) if w1 == 0x1 goto pc+732
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_rw=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4_w=inv4294967138 R5_w=ctx(id=0,off=0,imm=0) R6_w=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_rw=invP0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9_w=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128_w=mmmmmmmm fp-152=ctx fp-160_w=pkt_end
	parent didn't have regs=80 stack=0 marks
	last_idx 7201 first_idx 7004
	regs=80 stack=0 before 7201: (63) *(u32 *)(r10 -124) = r3
	regs=80 stack=0 before 7200: (61) r3 = *(u32 *)(r8 +26)
	regs=80 stack=0 before 7199: (63) *(u32 *)(r10 -128) = r2
	regs=80 stack=0 before 7198: (61) r2 = *(u32 *)(r8 +30)
	regs=80 stack=0 before 7197: (73) *(u8 *)(r10 -116) = r1
	regs=80 stack=0 before 7196: (71) r1 = *(u8 *)(r8 +23)
	regs=80 stack=0 before 7195: (69) r6 = *(u16 *)(r8 +20)
	regs=80 stack=0 before 7194: (b4) w4 = -158
	regs=80 stack=0 before 7193: (7b) *(u64 *)(r10 -160) = r2
	regs=80 stack=0 before 7192: (2d) if r1 > r2 goto pc+854
	regs=80 stack=0 before 7191: (07) r1 += 34
	regs=80 stack=0 before 7190: (bf) r1 = r8
	regs=80 stack=0 before 7189: (61) r8 = *(u32 *)(r5 +76)
	regs=80 stack=0 before 7188: (61) r2 = *(u32 *)(r5 +80)
	regs=80 stack=0 before 7187: (7b) *(u64 *)(r10 -128) = r1
	regs=80 stack=0 before 7186: (b7) r1 = 0
	regs=80 stack=0 before 7185: (63) *(u32 *)(r10 -120) = r9
	regs=80 stack=0 before 7184: (6b) *(u16 *)(r10 -116) = r9
	regs=80 stack=0 before 7183: (b4) w9 = 0
	regs=80 stack=0 before 7007: (05) goto pc+175
	regs=80 stack=0 before 7006: (b4) w4 = 0
	regs=80 stack=0 before 7005: (b4) w7 = 0
	;
	7204: (71) r7 = *(u8 *)(r8 +14)
	; switch (tuple->nexthdr) {
	7205: (16) if w1 == 0x11 goto pc+1
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7206: (56) if w1 != 0x6 goto pc+29
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv6 R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; struct ipv4_frag_id frag_id = {
	7207: (63) *(u32 *)(r10 -76) = r3
	7208: (63) *(u32 *)(r10 -80) = r2
	; .id = ip4->id,
	7209: (69) r2 = *(u16 *)(r8 +18)
	7210: (b4) w3 = 0
	; struct ipv4_frag_id frag_id = {
	7211: (73) *(u8 *)(r10 -69) = r3
	last_idx 7211 first_idx 7202
	regs=8 stack=0 before 7210: (b4) w3 = 0
	7212: (73) *(u8 *)(r10 -70) = r1
	7213: (6b) *(u16 *)(r10 -72) = r2
	; return ip4->frag_off & bpf_htons(0x3FFF);
	7214: (bc) w1 = w6
	7215: (54) w1 &= 65343
	; if (unlikely(is_fragment)) {
	7216: (16) if w1 == 0x0 goto pc+654
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=65343,var_off=(0x0; 0xff3f)) R2=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R3=invP0 R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; return ctx->len;
	7217: (61) r9 = *(u32 *)(r5 +0)
	7218: (b7) r1 = 0
	; struct metrics_value *entry, new_entry = {};
	7219: (7b) *(u64 *)(r10 -56) = r1
	last_idx 7219 first_idx 7216
	regs=2 stack=0 before 7218: (b7) r1 = 0
	7220: (7b) *(u64 *)(r10 -64) = r1
	7221: (b7) r1 = 521
	; struct metrics_key key = {};
	7222: (7b) *(u64 *)(r10 -144) = r1
	7223: (bf) r2 = r10
	;
	7224: (07) r2 += -144
	; entry = map_lookup_elem(&METRICS_MAP, &key);
	7225: (18) r1 = 0xffff7000ac846c00
	7227: (85) call bpf_map_lookup_elem#1
	; if (entry) {
	7228: (15) if r0 == 0x0 goto pc+616
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; entry->count += 1;
	7229: (79) r1 = *(u64 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7230: (07) r1 += 1
	7231: (7b) *(u64 *)(r0 +0) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; entry->bytes += bytes;
	7232: (79) r1 = *(u64 *)(r0 +8)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7233: (0f) r1 += r9
	7234: (7b) *(u64 *)(r0 +8) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7235: (05) goto pc+620
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7856: (69) r1 = *(u16 *)(r8 +20)
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7857: (54) w1 &= 65311
	7858: (79) r5 = *(u64 *)(r10 -152)
	; if (likely(not_first_fragment))
	7859: (16) if w1 == 0x0 goto pc+11
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0,umax_value=65311,var_off=(0x0; 0xff1f)) R5_w=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7860: (bf) r2 = r10
	;
	7861: (07) r2 += -80
	; tmp = map_lookup_elem(&IPV4_FRAG_DATAGRAMS_MAP, frag_id);
	7862: (18) r1 = 0xffff7001044a2400
	7864: (85) call bpf_map_lookup_elem#1
	; if (!tmp)
	7865: (55) if r0 != 0x0 goto pc+548
	
	from 7865 to 8414: R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; case  4: __it_mob(d, s, 32);
	8414: (61) r1 = *(u32 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	8415: (63) *(u32 *)(r10 -120) = r1
	8416: (05) goto pc-485
	; map_update_elem(&METRICS_MAP, &key, &new_entry, 0);
	7932: (79) r5 = *(u64 *)(r10 -152)
	7933: (61) r7 = *(u32 *)(r10 -168)
	7934: (b4) w4 = 0
	7935: (54) w6 &= -225
	7936: (b4) w1 = 1
	; if (IS_ERR(ret)) goto skip_crab;
	7937: (16) if w4 == 0x2 goto pc+1
	last_idx 7937 first_idx 8414
	regs=10 stack=0 before 7936: (b4) w1 = 1
	regs=10 stack=0 before 7935: (54) w6 &= -225
	regs=10 stack=0 before 7934: (b4) w4 = 0
	7938: (b4) w1 = 0
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7939: (54) w6 &= 65535
	7940: (79) r0 = *(u64 *)(r10 -160)
	; if (IS_ERR(ret)) goto skip_crab;
	7941: (56) if w6 != 0x0 goto pc+105
	 R0_w=pkt_end(id=0,off=0,imm=0) R1=inv0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6_w=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	;
	7942: (bc) w2 = w4
	7943: (74) w2 >>= 31
	7944: (4c) w2 |= w1
	; if (IS_ERR(ret)) goto skip_crab;
	7945: (56) if w2 != 0x0 goto pc+101
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	7946: (71) r1 = *(u8 *)(r8 +23)
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	7947: (56) if w1 != 0x6 goto pc+99
	 R0=pkt_end(id=0,off=0,imm=0) R1=inv6 R2=invP0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7948: (07) r8 += 14
	; return ip4->ihl * 4;
	7949: (71) r1 = *(u8 *)(r8 +0)
	; return ip4->ihl * 4;
	7950: (64) w1 <<= 2
	7951: (57) r1 &= 60
	; tcph = (struct tcphdr *)((void*)ip4 + ipv4_hdrlen(ip4));
	7952: (0f) r8 += r1
	last_idx 7952 first_idx 7947
	regs=2 stack=0 before 7951: (57) r1 &= 60
	regs=2 stack=0 before 7950: (64) w1 <<= 2
	regs=2 stack=0 before 7949: (71) r1 = *(u8 *)(r8 +0)
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	7953: (bf) r9 = r8
	7954: (07) r9 += 20
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	7955: (2d) if r9 > r0 goto pc+91
	 R0=pkt_end(id=0,off=0,imm=0) R1_w=invP(id=0,umax_value=60,var_off=(0x0; 0x3c)) R2=invP0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=9,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7956: (b4) w2 = 15
	;
	7957: (61) r1 = *(u32 *)(r5 +80)
	; offset = tcph->doff * 4;
	7958: (69) r3 = *(u16 *)(r8 +12)
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	7959: (74) w3 >>= 2
	7960: (54) w3 &= 60
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	7961: (04) w3 += -20
	7962: (05) goto pc+6
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=inv(id=0,umax_value=252,var_off=(0x0; 0xfc)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	last_idx 7968 first_idx 8017
	regs=4 stack=0 before 7967: (bc) w4 = w8
	regs=4 stack=0 before 7966: (04) w2 += -1
	regs=4 stack=0 before 7965: (79) r5 = *(u64 *)(r10 -152)
	regs=4 stack=0 before 8020: (05) goto pc-56
	regs=4 stack=0 before 8019: (1c) w3 -= w4
	regs=4 stack=0 before 8018: (0f) r9 += r4
	regs=4 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=9,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_r=invP0 R9_r=pkt(id=9,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 8007 first_idx 7992
	regs=4 stack=0 before 8007: (bd) if r4 <= r1 goto pc+9
	regs=4 stack=0 before 8006: (07) r4 += 2
	regs=4 stack=0 before 8005: (bf) r4 = r9
	regs=4 stack=0 before 7995: (56) if w5 != 0x0 goto pc+9
	regs=4 stack=0 before 7994: (16) if w5 == 0x2d goto pc+218
	regs=4 stack=0 before 7993: (16) if w5 == 0x1 goto pc-31
	regs=4 stack=0 before 7992: (71) r5 = *(u8 *)(r9 +0)
	 R0=pkt_end(id=0,off=0,imm=0) R1_r=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_rw=invP0 R9_r=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48_r=mmmmmmmm fp-56=00000000 fp-64_r=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160_r=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 7983 first_idx 7969
	regs=4 stack=0 before 7983: (bd) if r4 <= r1 goto pc+8
	regs=4 stack=0 before 7982: (07) r4 += 1
	regs=4 stack=0 before 7981: (bf) r4 = r9
	regs=4 stack=0 before 7972: (56) if w4 != 0x0 goto pc+8
	regs=4 stack=0 before 7971: (54) w4 &= 255
	regs=4 stack=0 before 7970: (bc) w4 = w3
	regs=4 stack=0 before 7969: (bc) w8 = w4
	 R0=pkt_end(id=0,off=0,imm=0) R1_rw=pkt_end(id=0,off=0,imm=0) R2_rw=invP15 R3_rw=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_r=invP0 R5_r=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=9,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_rw=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48_r=mmmmmmmm fp-56=00000000 fp-64_r=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160_r=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 7962 first_idx 7947
	regs=4 stack=0 before 7962: (05) goto pc+6
	regs=4 stack=0 before 7961: (04) w3 += -20
	regs=4 stack=0 before 7960: (54) w3 &= 60
	regs=4 stack=0 before 7959: (74) w3 >>= 2
	regs=4 stack=0 before 7958: (69) r3 = *(u16 *)(r8 +12)
	regs=4 stack=0 before 7957: (61) r1 = *(u32 *)(r5 +80)
	regs=4 stack=0 before 7956: (b4) w2 = 15
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=0,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=20,off=36,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8005
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=21,off=34,r=0,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=36,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8007
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=0,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=36,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=22,off=34,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=0,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=36,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=0,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=36,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7981
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=0,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP9 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4=pkt(id=25,off=36,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=25,off=34,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=0,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=36,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=0,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=36,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=27,off=34,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=0,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=36,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=0,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=36,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7981
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=0,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP4 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4=pkt(id=30,off=36,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=30,off=34,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=0,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=36,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=0,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=36,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=32,off=34,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=0,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	
	from 7994 to 8213: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP1 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=inv45 R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	8213: (bf) r2 = r9
	8214: (07) r2 += 20
	8215: (79) r5 = *(u64 *)(r10 -152)
	8216: (bc) w4 = w8
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	8217: (2d) if r2 > r0 goto pc-171
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=33,off=54,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=invP0 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	8218: (71) r2 = *(u8 *)(r9 +18)
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	8219: (56) if w2 != 0x0 goto pc+107
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=inv0 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=invP0 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	8220: (b4) w4 = -134
	; return (void *)(unsigned long)ctx->data;
	8221: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	8222: (bf) r3 = r2
	8223: (07) r3 += 34
	; if (data + tot_len > data_end)
	8224: (2d) if r3 > r1 goto pc-178
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=pkt(id=0,off=0,r=34,imm=0) R3=pkt(id=0,off=34,r=34,imm=0) R4=inv4294967162 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; masquerade_ip = ip4->saddr;
	8225: (61) r1 = *(u32 *)(r2 +26)
	; masquerade_ip = ip4->saddr;
	8226: (63) *(u32 *)(r10 -80) = r1
	; return ip4->ihl * 4;
	8227: (71) r2 = *(u8 *)(r2 +14)
	; return ip4->ihl * 4;
	8228: (64) w2 <<= 2
	8229: (54) w2 &= 60
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	8230: (04) w2 += 44
	8231: (bf) r3 = r10
	; masquerade_ip = ip4->saddr;
	8232: (07) r3 += -80
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	8233: (bf) r1 = r5
	8234: (b4) w4 = 4
	8235: (b4) w5 = 0
	8236: (85) call bpf_skb_store_bytes#9
	last_idx 8236 first_idx 8224
	regs=10 stack=0 before 8235: (b4) w5 = 0
	regs=10 stack=0 before 8234: (b4) w4 = 4
	8237: (79) r5 = *(u64 *)(r10 -152)
	8238: (b4) w4 = -141
	; if (ret < 0) return DROP_WRITE_ERROR;
	8239: (c6) if w0 s< 0x0 goto pc-193
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R4_w=inv4294967155 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	; return ctx->len;
	8240: (61) r1 = *(u32 *)(r5 +0)
	; __u64 cap_len = min_t(__u64, monitor ? : TRACE_PAYLOAD_LEN,
	8241: (bf) r3 = r1
	8242: (a6) if w1 < 0x80 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=inv(id=35,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=35,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4_w=inv4294967155 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	8243: (b7) r3 = 128
	; __notify_common_hdr(CILIUM_NOTIFY_TRACE, obs_point),
	8244: (61) r2 = *(u32 *)(r5 +68)
	8245: (b7) r4 = 327680
	; msg = (typeof(msg)) {
	8246: (7b) *(u64 *)(r10 -40) = r4
	8247: (18) r4 = 0x1
	8249: (63) *(u32 *)(r10 -48) = r4
	8250: (b4) w4 = 1
	8251: (6b) *(u16 *)(r10 -50) = r4
	8252: (63) *(u32 *)(r10 -56) = r1
	8253: (63) *(u32 *)(r10 -60) = r2
	8254: (b4) w1 = 20776196
	8255: (63) *(u32 *)(r10 -64) = r1
	8256: (b7) r1 = 0
	; case  8: jmp_8:  __it_set(d, 64);
	8257: (7b) *(u64 *)(r10 -32) = r1
	last_idx 8257 first_idx 8237
	regs=2 stack=0 before 8256: (b7) r1 = 0
	8258: (7b) *(u64 *)(r10 -24) = r1
	; msg = (typeof(msg)) {
	8259: (6b) *(u16 *)(r10 -52) = r3
	8260: (b4) w6 = 0
	8261: (63) *(u32 *)(r10 -44) = r6
	last_idx 8261 first_idx 8237
	regs=40 stack=0 before 8260: (b4) w6 = 0
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	8262: (67) r3 <<= 32
	8263: (18) r1 = 0xffffffff
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	8265: (4f) r3 |= r1
	8266: (bf) r4 = r10
	;
	8267: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP,
	8268: (bf) r1 = r5
	8269: (18) r2 = 0xffff7000722cc800
	8271: (b4) w5 = 48
	8272: (85) call bpf_perf_event_output#25
	last_idx 8272 first_idx 8237
	regs=20 stack=0 before 8271: (b4) w5 = 48
	8273: (b4) w1 = 20774914
	; struct debug_msg msg = {
	8274: (63) *(u32 *)(r10 -64) = r1
	8275: (b4) w1 = 50
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	8276: (79) r2 = *(u64 *)(r10 -152)
	8277: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	8278: (63) *(u32 *)(r10 -48) = r1
	8279: (18) r1 = 0x3200000032
	8281: (7b) *(u64 *)(r10 -56) = r1
	8282: (63) *(u32 *)(r10 -60) = r2
	8283: (bf) r4 = r10
	;
	8284: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	8285: (79) r1 = *(u64 *)(r10 -152)
	8286: (18) r2 = 0xffff7000722cc800
	8288: (18) r3 = 0xffffffff
	8290: (b4) w5 = 20
	8291: (85) call bpf_perf_event_output#25
	last_idx 8291 first_idx 8273
	regs=20 stack=0 before 8290: (b4) w5 = 20
	; cilium_dbg3(ctx, DBG_CT_LOOKUP4_1, masquerade_ip, masquerade_ip,
	8292: (61) r1 = *(u32 *)(r10 -80)
	8293: (b4) w2 = 20787202
	; struct debug_msg msg = {
	8294: (63) *(u32 *)(r10 -64) = r2
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	8295: (79) r2 = *(u64 *)(r10 -152)
	8296: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	8297: (63) *(u32 *)(r10 -56) = r1
	8298: (63) *(u32 *)(r10 -52) = r1
	8299: (63) *(u32 *)(r10 -48) = r6
	8300: (63) *(u32 *)(r10 -60) = r2
	8301: (bf) r4 = r10
	;
	8302: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	8303: (79) r1 = *(u64 *)(r10 -152)
	8304: (18) r2 = 0xffff7000722cc800
	8306: (18) r3 = 0xffffffff
	8308: (b4) w5 = 20
	8309: (85) call bpf_perf_event_output#25
	last_idx 8309 first_idx 8273
	regs=20 stack=0 before 8308: (b4) w5 = 20
	8310: (79) r5 = *(u64 *)(r10 -152)
	; return (void *)(unsigned long)ctx->data_end;
	8311: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	8312: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	8313: (07) r2 += 34
	8314: (b4) w4 = -134
	; if (data + tot_len > data_end)
	8315: (2d) if r2 > r1 goto pc-269
	 R0=inv(id=0) R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv4294967162 R5_w=ctx(id=0,off=0,imm=0) R6=invP0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-24=mmmmmmmm fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	; &redir_opt->ip1, 4, 0);
	8316: (07) r9 += 2
	; ret = ctx_store_bytes(ctx, ETH_HLEN + offsetof(struct iphdr, saddr),
	8317: (bf) r1 = r5
	8318: (b4) w2 = 26
	8319: (bf) r3 = r9
	8320: (b4) w4 = 4
	8321: (b4) w5 = 0
	8322: (85) call bpf_skb_store_bytes#9
	R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf
	processed 1463 insns (limit 1000000) max_states_per_insn 3 total_states 58 peak_states 58 mark_read 28
level=warning msg="JoinEP: Failed to load program for host endpoint (cil_to_host)" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" file-path=317_next/bpf_host.o identity=1 ipv4= ipv6= k8sPodName=/ subsys=datapath-loader veth=cilium_host
level=error msg="Error while rewriting endpoint BPF program" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting endpoint changes after BPF regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting proxy redirect removals" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting proxy redirect removals" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting proxy redirect additions" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting proxy redirect additions" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting endpoint changes after BPF regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=info msg="Wrote verifier log to endpoint directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/verifier.log identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=info msg="generating BPF for endpoint failed, keeping stale directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" file-path=317_next_fail identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=317_next_fail endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=317_next endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Completed endpoint regeneration with no pending regeneration requests" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=ready identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=warning msg="Regeneration of endpoint failed" bpfCompilation=0s bpfLoadProg=71.050666ms bpfWaitForELF="7.583µs" bpfWriteELF=2.88225ms containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ mapSync="37.833µs" policyCalculation="48.625µs" prepareBuild="970µs" proxyConfiguration="20.624µs" proxyPolicyCalculation="20.125µs" proxyWaitForAck=0s reason="retrying regeneration" subsys=endpoint total=79.648542ms waitingForCTClean=1.097292ms waitingForLock="4.209µs"
level=debug msg="Error regenerating endpoint: loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" code=Failure containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=ready identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=200
level=debug msg="EventQueue event processing statistics" eventConsumeOffQueueWaitTime="40.667µs" eventEnqueueWaitTime="24.375µs" eventHandlingDuration=79.75325ms eventType="*endpoint.EndpointRegenerationEvent" name=endpoint-317 subsys=eventqueue
level=error msg="endpoint regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Controller func execution time: 80.063334ms" name=endpoint-317-regeneration-recovery subsys=controller uuid=e7863fbe-c1cf-4ee3-ba58-7391bc06fe4a
level=debug msg="Controller run failed" consecutiveErrors=3 error="regeneration recovery failed" name=endpoint-317-regeneration-recovery subsys=controller uuid=e7863fbe-c1cf-4ee3-ba58-7391bc06fe4a
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Controller func execution time: 4.936625ms" name="sync-to-k8s-ciliumendpoint (1197)" subsys=controller uuid=fdcb02e9-f4be-47b4-bc48-d3aa990929bf
level=debug msg="Controller func execution time: 30.083µs" name=metricsmap-bpf-prom-sync subsys=controller uuid=38a9c0b7-176f-4a35-865f-69a2af221242
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Skipping CiliumEndpoint update because it has no k8s pod name" containerID= controller="sync-to-k8s-ciliumendpoint (317)" datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpointsynchronizer
level=debug msg="Controller func execution time: 71.125µs" name="sync-to-k8s-ciliumendpoint (317)" subsys=controller uuid=bb1e5172-6dc8-48cd-aba8-7e6f05e59668
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="received signal that regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Triggering endpoint regeneration due to retrying regeneration" code=OK containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=waiting-to-regenerate identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=0
level=debug msg="Dequeued endpoint from build queue" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Regenerating endpoint" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh reason="retrying regeneration" startTime="2023-07-12 21:57:00.354713167 +0000 UTC m=+23.719898720" subsys=endpoint
level=debug msg="Regenerating endpoint: retrying regeneration" code=OK containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=regenerating identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=0
level=debug msg="removing directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 directory=1197_next endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Starting policy recalculation..." containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Skipping unnecessary endpoint policy recalculation" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyChanged=true policyRevision.next=1 policyRevision.repo=1 subsys=endpoint
level=debug msg="preparing new cache transaction: upserting 1 entries, deleting 0 entries" subsys=xds xdsCachedVersion=14 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="inserting resource into cache" subsys=xds xdsCachedVersion=14 xdsResourceName=1197 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="committing cache transaction and notifying of new version" subsys=xds xdsCachedVersion=14 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="BPF header file hashed (was: \"\")" bpfHeaderfileHash=7893731b6685475dfe5360e1b8a61cf84c83a2bf5f9ee995962246f1092743d5 containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="writing header file" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 file-path=1197_next/ep_config.h identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="writing header file with DNSRules" DNSRules="map[]" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 file-path=1197_next/ep_config.h identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Preparing to compile BPF" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh regeneration-level=rewrite+load subsys=endpoint
level=debug msg="Load 1-min: 5.61 5-min: 2.62 15min: 2.07" endpointID=1197 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2467 (62.73%) Free: 72 Buffers: 10 Cached: 1382" endpointID=1197 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1011 (98.78%) Free: 12" endpointID=1197 subsys=endpoint
level=debug msg="Found variable with offset 107972" subsys=elf symbol=LXC_ID
level=debug msg="Found variable with offset 107968" subsys=elf symbol=LXC_IPV4
level=debug msg="Found variable with offset 107952" subsys=elf symbol=LXC_IP_1
level=debug msg="Found variable with offset 107956" subsys=elf symbol=LXC_IP_2
level=debug msg="Found variable with offset 107960" subsys=elf symbol=LXC_IP_3
level=debug msg="Found variable with offset 107964" subsys=elf symbol=LXC_IP_4
level=debug msg="Found variable with offset 107976" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 107980" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 107992" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 107984" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 107988" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 30" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_container" subsys=elf
level=debug msg="Skipping cil_to_container" subsys=elf
level=debug msg="Found symbol with offset 1017016" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1016648" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1020451" subsys=elf symbol=cilium_calls_65535
level=debug msg="Found symbol with offset 1017110" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1017088" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1017209" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1016781" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1017275" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1016842" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1016609" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1021710" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1017366" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1017153" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1016758" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1022539" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1017290" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1017128" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1017314" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1016902" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1017032" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1020852" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1020431" subsys=elf symbol=cilium_policy_65535
level=debug msg="Found symbol with offset 1017174" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1016869" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1017064" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1020827" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping handle_policy" subsys=elf
level=debug msg="Skipping tail_handle_arp" subsys=elf
level=debug msg="Skipping tail_handle_ipv4" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_cont" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_ipv4_ct_egress" subsys=elf
level=debug msg="Skipping tail_ipv4_ct_ingress" subsys=elf
level=debug msg="Skipping tail_ipv4_to_endpoint" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1016705" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1016888" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1016968" subsys=elf symbol=to-container
level=debug msg="Found section with offset 1016985" subsys=elf symbol=from-container
level=debug msg="Found section with offset 1017052" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1017200" subsys=elf symbol=1/0xffff
level=debug msg="Found section with offset 1017246" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1017262" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1017329" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1017427" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1017875" subsys=elf symbol=2/29
level=debug msg="Found section with offset 1018439" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1019240" subsys=elf symbol=2/27
level=debug msg="Found section with offset 1019321" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1019367" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1020020" subsys=elf symbol=2/6
level=debug msg="Found section with offset 1020628" subsys=elf symbol=2/25
level=debug msg="Found section with offset 1022452" subsys=elf symbol=2/13
level=debug msg="Found section with offset 1023900" subsys=elf symbol=2/1
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 5.16% MEM: 2.26% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 88 VMS: 850 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=1197 subsys=endpoint
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=1197_next/bpf_lxc.o subsys=elf template-path=/var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69/bpf_lxc.o
level=debug msg="Loading CollectionSpec from ELF" device=lxc102a8ca64051 ifindex=9 objPath=1197_next/bpf_lxc.o subsys=datapath-loader
level=debug msg="Loading Collection into kernel" device=lxc102a8ca64051 ifindex=9 objPath=1197_next/bpf_lxc.o subsys=datapath-loader
Verifier error: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)
Verifier log: load program: permission denied:
	btf_vmlinux is malformed
	R1 type=ctx expected=fp
	; int tail_handle_snat_fwd_ipv4(struct __ctx_buff *ctx)
	0: (bf) r5 = r1
	1: (b4) w7 = 0
	; ctx->cb[off] = data;
	2: (63) *(u32 *)(r5 +52) = r7
	; return (void *)(unsigned long)ctx->data_end;
	3: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	4: (61) r6 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	5: (bf) r2 = r6
	6: (07) r2 += 34
	7: (7b) *(u64 *)(r10 -96) = r5
	; if (data + tot_len > data_end)
	8: (2d) if r2 > r1 goto pc+224
	 R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R10=fp0 fp-96_w=ctx
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	9: (61) r1 = *(u32 *)(r6 +26)
	10: (b7) r9 = 0
	; struct endpoint_key key = {};
	11: (63) *(u32 *)(r10 -32) = r9
	last_idx 11 first_idx 0
	regs=200 stack=0 before 10: (b7) r9 = 0
	12: (63) *(u32 *)(r10 -36) = r9
	13: (63) *(u32 *)(r10 -40) = r9
	14: (63) *(u32 *)(r10 -44) = r9
	; key.ip4 = ip;
	15: (63) *(u32 *)(r10 -48) = r1
	16: (b4) w1 = 1
	; key.family = ENDPOINT_KEY_IPV4;
	17: (73) *(u8 *)(r10 -32) = r1
	18: (bf) r2 = r10
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	19: (07) r2 += -48
	; return map_lookup_elem(&ENDPOINTS_MAP, &key);
	20: (18) r1 = 0xffff700159c9b400
	22: (85) call bpf_map_lookup_elem#1
	23: (bf) r8 = r0
	; remote_ep = lookup_ip4_remote_endpoint(ip4->daddr, 0);
	24: (61) r1 = *(u32 *)(r6 +30)
	; .ip4 = addr,
	25: (7b) *(u64 *)(r10 -32) = r9
	26: (63) *(u32 *)(r10 -36) = r7
	last_idx 26 first_idx 23
	regs=80 stack=0 before 25: (7b) *(u64 *)(r10 -32) = r9
	regs=80 stack=0 before 24: (61) r1 = *(u32 *)(r6 +30)
	regs=80 stack=0 before 23: (bf) r8 = r0
	 R0_rw=map_value_or_null(id=1,off=0,ks=20,vs=48,imm=0) R6_rw=pkt(id=0,off=0,r=34,imm=0) R7_rw=invP0 R9_rw=invP0 R10=fp0 fp-32=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-96_w=ctx
	parent didn't have regs=80 stack=0 marks
	last_idx 22 first_idx 0
	regs=80 stack=0 before 22: (85) call bpf_map_lookup_elem#1
	regs=80 stack=0 before 20: (18) r1 = 0xffff700159c9b400
	regs=80 stack=0 before 19: (07) r2 += -48
	regs=80 stack=0 before 18: (bf) r2 = r10
	regs=80 stack=0 before 17: (73) *(u8 *)(r10 -32) = r1
	regs=80 stack=0 before 16: (b4) w1 = 1
	regs=80 stack=0 before 15: (63) *(u32 *)(r10 -48) = r1
	regs=80 stack=0 before 14: (63) *(u32 *)(r10 -44) = r9
	regs=80 stack=0 before 13: (63) *(u32 *)(r10 -40) = r9
	regs=80 stack=0 before 12: (63) *(u32 *)(r10 -36) = r9
	regs=80 stack=0 before 11: (63) *(u32 *)(r10 -32) = r9
	regs=80 stack=0 before 10: (b7) r9 = 0
	regs=80 stack=0 before 9: (61) r1 = *(u32 *)(r6 +26)
	regs=80 stack=0 before 8: (2d) if r2 > r1 goto pc+224
	regs=80 stack=0 before 7: (7b) *(u64 *)(r10 -96) = r5
	regs=80 stack=0 before 6: (07) r2 += 34
	regs=80 stack=0 before 5: (bf) r2 = r6
	regs=80 stack=0 before 4: (61) r6 = *(u32 *)(r5 +76)
	regs=80 stack=0 before 3: (61) r1 = *(u32 *)(r5 +80)
	regs=80 stack=0 before 2: (63) *(u32 *)(r5 +52) = r7
	regs=80 stack=0 before 1: (b4) w7 = 0
	27: (63) *(u32 *)(r10 -40) = r1
	28: (18) r1 = 0x100000000000040
	; .lpm_key = { IPCACHE_PREFIX_LEN(prefix), {} },
	30: (7b) *(u64 *)(r10 -48) = r1
	31: (bf) r2 = r10
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	32: (07) r2 += -48
	; return map_lookup_elem(map, &key);
	33: (18) r1 = 0xffff700104950c00
	35: (85) call bpf_map_lookup_elem#1
	36: (79) r5 = *(u64 *)(r10 -96)
	; if (local_ep) {
	37: (15) if r8 == 0x0 goto pc+195
	 R0_w=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8_w=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=invP0 R10=fp0 fp-32_w=mmmmmmmm fp-40=mmmmmmmm fp-48_w=mmmmmmmm fp-96=ctx
	; .daddr = ip4->daddr,
	38: (61) r1 = *(u32 *)(r6 +30)
	; struct ipv4_ct_tuple tuple = {
	39: (63) *(u32 *)(r10 -88) = r1
	; .saddr = ip4->saddr
	40: (61) r1 = *(u32 *)(r6 +26)
	; struct ipv4_ct_tuple tuple = {
	41: (63) *(u32 *)(r10 -84) = r1
	42: (b4) w2 = 0
	43: (63) *(u32 *)(r10 -80) = r2
	last_idx 43 first_idx 23
	regs=4 stack=0 before 42: (b4) w2 = 0
	; .nexthdr = ip4->protocol,
	44: (71) r1 = *(u8 *)(r6 +23)
	; struct ipv4_ct_tuple tuple = {
	45: (73) *(u8 *)(r10 -75) = r2
	;
	46: (18) r3 = 0xffff7001044a2800
	48: (16) if w1 == 0x6 goto pc+2
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=invP0 R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0?0000 fp-88=mmmmmmmm fp-96=ctx
	49: (18) r3 = 0xffff7000ef1d5000
	; struct ipv4_ct_tuple tuple = {
	51: (73) *(u8 *)(r10 -76) = r1
	; return ip4->ihl * 4;
	52: (71) r9 = *(u8 *)(r6 +14)
	; return ip4->ihl * 4;
	53: (64) w9 <<= 2
	54: (54) w9 &= 60
	; ct_is_reply4(get_ct_map4(&tuple), ctx, ETH_HLEN +
	55: (04) w9 += 14
	; switch (tuple->nexthdr) {
	56: (16) if w1 == 0x11 goto pc+38
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9_w=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	57: (16) if w1 == 0x6 goto pc+37
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	58: (56) if w1 != 0x1 goto pc+174
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv1 R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	59: (bf) r6 = r3
	60: (b4) w1 = 0
	; __be16 identifier = 0;
	61: (6b) *(u16 *)(r10 -48) = r1
	last_idx 61 first_idx 57
	regs=2 stack=0 before 60: (b4) w1 = 0
	62: (bf) r3 = r10
	;
	63: (07) r3 += -72
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	64: (bf) r1 = r5
	65: (bc) w2 = w9
	66: (b4) w4 = 1
	67: (85) call bpf_skb_load_bytes#26
	last_idx 67 first_idx 57
	regs=10 stack=0 before 66: (b4) w4 = 1
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	68: (c6) if w0 s< 0x0 goto pc+163
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	69: (71) r3 = *(u8 *)(r10 -72)
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	70: (bc) w2 = w3
	71: (44) w2 |= 8
	72: (79) r1 = *(u64 *)(r10 -96)
	73: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=ctx(id=0,off=0,imm=0) R2_w=inv(id=0,umin_value=8,umax_value=255,var_off=(0x8; 0xf7)) R3_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	74: (05) goto pc+8
	; switch (type) {
	83: (b4) w2 = 0
	; tuple->dport = 0;
	84: (63) *(u32 *)(r10 -80) = r2
	last_idx 84 first_idx 68
	regs=4 stack=0 before 83: (b4) w2 = 0
	; switch (type) {
	85: (bf) r2 = r3
	86: (66) if w2 s> 0xa goto pc+46
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=ctx(id=0,off=0,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	87: (bf) r1 = r6
	88: (16) if w2 == 0x0 goto pc+51
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	89: (16) if w2 == 0x3 goto pc+46
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	90: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	91: (05) goto pc+135
	; if (err < 0)
	227: (b4) w2 = 1
	; tuple->flags = TUPLE_F_IN;
	228: (73) *(u8 *)(r10 -75) = r2
	229: (bf) r2 = r10
	;
	230: (07) r2 += -88
	; *is_reply = map_lookup_elem(map, tuple) != NULL;
	231: (85) call bpf_map_lookup_elem#1
	232: (79) r5 = *(u64 *)(r10 -96)
	233: (b7) r1 = 0
	; struct ipv4_ct_tuple tuple = {};
	234: (7b) *(u64 *)(r10 -88) = r1
	last_idx 234 first_idx 232
	regs=2 stack=0 before 233: (b7) r1 = 0
	235: (6b) *(u16 *)(r10 -76) = r7
	236: (63) *(u32 *)(r10 -80) = r7
	; return (void *)(unsigned long)ctx->data_end;
	237: (61) r2 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	238: (61) r8 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	239: (bf) r1 = r8
	240: (07) r1 += 34
	; if (data + tot_len > data_end)
	241: (2d) if r1 > r2 goto pc+251
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=pkt(id=0,off=34,r=34,imm=0) R2_w=pkt_end(id=0,off=0,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??000000 fp-88_w=00000000 fp-96=ctx
	242: (7b) *(u64 *)(r10 -104) = r2
	243: (b4) w7 = -158
	; return ip4->frag_off & bpf_htons(0x1FFF);
	244: (69) r6 = *(u16 *)(r8 +20)
	; tuple->nexthdr = ip4->protocol;
	245: (71) r1 = *(u8 *)(r8 +23)
	; tuple->nexthdr = ip4->protocol;
	246: (73) *(u8 *)(r10 -76) = r1
	; tuple->daddr = ip4->daddr;
	247: (61) r2 = *(u32 *)(r8 +30)
	; tuple->daddr = ip4->daddr;
	248: (63) *(u32 *)(r10 -88) = r2
	; tuple->saddr = ip4->saddr;
	249: (61) r3 = *(u32 *)(r8 +26)
	; tuple->saddr = ip4->saddr;
	250: (63) *(u32 *)(r10 -84) = r3
	; switch (tuple->nexthdr) {
	251: (16) if w1 == 0x1 goto pc+120
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5_w=ctx(id=0,off=0,imm=0) R6_w=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv4294967138 R8_w=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88_w=mmmmmmmm fp-96=ctx fp-104_w=pkt_end
	;
	252: (71) r7 = *(u8 *)(r8 +14)
	; switch (tuple->nexthdr) {
	253: (16) if w1 == 0x11 goto pc+1
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	254: (56) if w1 != 0x6 goto pc+29
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv6 R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; struct ipv4_frag_id frag_id = {
	255: (63) *(u32 *)(r10 -68) = r3
	256: (63) *(u32 *)(r10 -72) = r2
	; .id = ip4->id,
	257: (69) r2 = *(u16 *)(r8 +18)
	258: (b4) w3 = 0
	; struct ipv4_frag_id frag_id = {
	259: (73) *(u8 *)(r10 -61) = r3
	last_idx 259 first_idx 253
	regs=8 stack=0 before 258: (b4) w3 = 0
	260: (73) *(u8 *)(r10 -62) = r1
	261: (6b) *(u16 *)(r10 -64) = r2
	; return ip4->frag_off & bpf_htons(0x3FFF);
	262: (bc) w1 = w6
	263: (54) w1 &= 65343
	; if (unlikely(is_fragment)) {
	264: (16) if w1 == 0x0 goto pc+46
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=65343,var_off=(0x0; 0xff3f)) R2=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R3=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; return ctx->len;
	265: (61) r9 = *(u32 *)(r5 +0)
	266: (b7) r1 = 0
	; struct metrics_value *entry, new_entry = {};
	267: (7b) *(u64 *)(r10 -40) = r1
	last_idx 267 first_idx 264
	regs=2 stack=0 before 266: (b7) r1 = 0
	268: (7b) *(u64 *)(r10 -48) = r1
	269: (b7) r1 = 521
	; struct metrics_key key = {};
	270: (7b) *(u64 *)(r10 -56) = r1
	271: (bf) r2 = r10
	;
	272: (07) r2 += -56
	; entry = map_lookup_elem(&METRICS_MAP, &key);
	273: (18) r1 = 0xffff7000ac846c00
	275: (85) call bpf_map_lookup_elem#1
	; if (entry) {
	276: (15) if r0 == 0x0 goto pc+9
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; entry->count += 1;
	277: (79) r1 = *(u64 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	278: (07) r1 += 1
	279: (7b) *(u64 *)(r0 +0) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; entry->bytes += bytes;
	280: (79) r1 = *(u64 *)(r0 +8)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	281: (0f) r1 += r9
	282: (7b) *(u64 *)(r0 +8) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	283: (05) goto pc+13
	; return ip4->frag_off & bpf_htons(0x1FFF);
	297: (69) r1 = *(u16 *)(r8 +20)
	; return ip4->frag_off & bpf_htons(0x1FFF);
	298: (54) w1 &= 65311
	299: (79) r5 = *(u64 *)(r10 -96)
	; if (likely(not_first_fragment))
	300: (16) if w1 == 0x0 goto pc+10
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0,umax_value=65311,var_off=(0x0; 0xff1f)) R5_w=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	301: (bf) r2 = r10
	;
	302: (07) r2 += -72
	; tmp = map_lookup_elem(&IPV4_FRAG_DATAGRAMS_MAP, frag_id);
	303: (18) r1 = 0xffff7001044a2400
	305: (85) call bpf_map_lookup_elem#1
	; if (!tmp)
	306: (55) if r0 != 0x0 goto pc+637
	
	from 306 to 944: R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; case  4: __it_mob(d, s, 32);
	944: (61) r1 = *(u32 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	945: (63) *(u32 *)(r10 -80) = r1
	946: (05) goto pc-577
	; map_update_elem(&METRICS_MAP, &key, &new_entry, 0);
	370: (79) r5 = *(u64 *)(r10 -96)
	371: (b4) w7 = 0
	372: (54) w6 &= -225
	373: (b4) w1 = 1
	; if (IS_ERR(ret)) goto skip_crab;
	374: (16) if w7 == 0x2 goto pc+1
	last_idx 374 first_idx 306
	regs=80 stack=0 before 373: (b4) w1 = 1
	regs=80 stack=0 before 372: (54) w6 &= -225
	regs=80 stack=0 before 371: (b4) w7 = 0
	375: (b4) w1 = 0
	; return ip4->frag_off & bpf_htons(0x1FFF);
	376: (54) w6 &= 65535
	377: (79) r0 = *(u64 *)(r10 -104)
	; if (IS_ERR(ret)) goto skip_crab;
	378: (56) if w6 != 0x0 goto pc+114
	 R0_w=pkt_end(id=0,off=0,imm=0) R1=inv0 R5=ctx(id=0,off=0,imm=0) R6_w=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	;
	379: (bc) w2 = w7
	380: (74) w2 >>= 31
	381: (4c) w2 |= w1
	; if (IS_ERR(ret)) goto skip_crab;
	382: (56) if w2 != 0x0 goto pc+110
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	383: (71) r1 = *(u8 *)(r8 +23)
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	384: (56) if w1 != 0x6 goto pc+108
	 R0=pkt_end(id=0,off=0,imm=0) R1=inv6 R2=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	385: (07) r8 += 14
	; return ip4->ihl * 4;
	386: (71) r1 = *(u8 *)(r8 +0)
	; return ip4->ihl * 4;
	387: (64) w1 <<= 2
	388: (57) r1 &= 60
	; tcph = (struct tcphdr *)((void*)ip4 + ipv4_hdrlen(ip4));
	389: (0f) r8 += r1
	last_idx 389 first_idx 384
	regs=2 stack=0 before 388: (57) r1 &= 60
	regs=2 stack=0 before 387: (64) w1 <<= 2
	regs=2 stack=0 before 386: (71) r1 = *(u8 *)(r8 +0)
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	390: (bf) r9 = r8
	391: (07) r9 += 20
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	392: (2d) if r9 > r0 goto pc+100
	 R0=pkt_end(id=0,off=0,imm=0) R1_w=invP(id=0,umax_value=60,var_off=(0x0; 0x3c)) R2=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	393: (b4) w2 = 15
	;
	394: (61) r1 = *(u32 *)(r5 +80)
	; offset = tcph->doff * 4;
	395: (69) r3 = *(u16 *)(r8 +12)
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	396: (74) w3 >>= 2
	397: (54) w3 &= 60
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	398: (04) w3 += -20
	399: (05) goto pc+5
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=inv(id=0,umax_value=252,var_off=(0x0; 0xfc)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	last_idx 404 first_idx 464
	regs=4 stack=0 before 403: (04) w2 += -1
	regs=4 stack=0 before 402: (79) r5 = *(u64 *)(r10 -96)
	regs=4 stack=0 before 467: (05) goto pc-66
	regs=4 stack=0 before 466: (1c) w3 -= w4
	regs=4 stack=0 before 465: (0f) r9 += r4
	regs=4 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=8,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_r=pkt(id=8,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 451 first_idx 433
	regs=4 stack=0 before 451: (bd) if r4 <= r1 goto pc+12
	regs=4 stack=0 before 450: (07) r4 += 2
	regs=4 stack=0 before 449: (bf) r4 = r9
	regs=4 stack=0 before 436: (56) if w5 != 0x0 goto pc+12
	regs=4 stack=0 before 435: (16) if w5 == 0x2d goto pc+265
	regs=4 stack=0 before 434: (16) if w5 == 0x1 goto pc-35
	regs=4 stack=0 before 433: (71) r5 = *(u8 *)(r9 +0)
	 R0=pkt_end(id=0,off=0,imm=0) R1_r=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7_r=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9_r=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32_r=mmmmmmmm fp-40=00000000 fp-48_r=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104_r=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 421 first_idx 405
	regs=4 stack=0 before 421: (bd) if r4 <= r1 goto pc+11
	regs=4 stack=0 before 420: (07) r4 += 1
	regs=4 stack=0 before 419: (bf) r4 = r9
	regs=4 stack=0 before 407: (56) if w4 != 0x0 goto pc+11
	regs=4 stack=0 before 406: (54) w4 &= 255
	regs=4 stack=0 before 405: (bc) w4 = w3
	 R0=pkt_end(id=0,off=0,imm=0) R1_rw=pkt_end(id=0,off=0,imm=0) R2_rw=invP15 R3_rw=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R5_r=ctx(id=0,off=0,imm=0) R6=inv0 R7_r=invP0 R8_w=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_rw=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32_r=mmmmmmmm fp-40=00000000 fp-48_r=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104_r=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 399 first_idx 384
	regs=4 stack=0 before 399: (05) goto pc+5
	regs=4 stack=0 before 398: (04) w3 += -20
	regs=4 stack=0 before 397: (54) w3 &= 60
	regs=4 stack=0 before 396: (74) w3 >>= 2
	regs=4 stack=0 before 395: (69) r3 = *(u16 *)(r8 +12)
	regs=4 stack=0 before 394: (61) r1 = *(u32 *)(r5 +80)
	regs=4 stack=0 before 393: (b4) w2 = 15
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=0,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=19,off=36,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 449
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=0,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=36,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 451
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=0,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=36,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=0,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=36,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=0,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=36,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 419
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=0,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP9 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4=pkt(id=24,off=36,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=24,off=34,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=0,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=36,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=0,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=36,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=26,off=34,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=0,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=36,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=0,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=36,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 419
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=0,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP4 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4=pkt(id=29,off=36,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=29,off=34,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=0,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=36,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=0,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=36,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=31,off=34,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=0,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	
	from 435 to 701: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP1 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=inv45 R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	701: (bf) r2 = r9
	702: (07) r2 += 20
	703: (79) r5 = *(u64 *)(r10 -96)
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	704: (2d) if r2 > r0 goto pc-212
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=32,off=54,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	705: (71) r2 = *(u8 *)(r9 +18)
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	706: (56) if w2 != 0x0 goto pc+130
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=inv0 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	707: (b4) w7 = -134
	; return (void *)(unsigned long)ctx->data;
	708: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	709: (bf) r3 = r2
	710: (07) r3 += 34
	; if (data + tot_len > data_end)
	711: (2d) if r3 > r1 goto pc-219
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=pkt(id=0,off=0,r=34,imm=0) R3=pkt(id=0,off=34,r=34,imm=0) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=inv4294967162 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; masquerade_ip = ip4->saddr;
	712: (61) r1 = *(u32 *)(r2 +26)
	; masquerade_ip = ip4->saddr;
	713: (63) *(u32 *)(r10 -72) = r1
	; return ip4->ihl * 4;
	714: (71) r2 = *(u8 *)(r2 +14)
	; return ip4->ihl * 4;
	715: (64) w2 <<= 2
	716: (54) w2 &= 60
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	717: (04) w2 += 44
	718: (bf) r3 = r10
	; masquerade_ip = ip4->saddr;
	719: (07) r3 += -72
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	720: (bf) r1 = r5
	721: (b4) w4 = 4
	722: (b4) w5 = 0
	723: (85) call bpf_skb_store_bytes#9
	last_idx 723 first_idx 711
	regs=10 stack=0 before 722: (b4) w5 = 0
	regs=10 stack=0 before 721: (b4) w4 = 4
	724: (79) r5 = *(u64 *)(r10 -96)
	725: (b4) w7 = -141
	; if (ret < 0) return DROP_WRITE_ERROR;
	726: (c6) if w0 s< 0x0 goto pc-234
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7_w=inv4294967155 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	; return ctx->len;
	727: (61) r1 = *(u32 *)(r5 +0)
	; __u64 cap_len = min_t(__u64, monitor ? : TRACE_PAYLOAD_LEN,
	728: (bf) r3 = r1
	729: (a6) if w1 < 0x80 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=inv(id=34,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=34,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7_w=inv4294967155 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	730: (b7) r3 = 128
	731: (b7) r2 = 0
	; __notify_common_hdr(CILIUM_NOTIFY_TRACE, obs_point),
	732: (61) r4 = *(u32 *)(r5 +68)
	; msg = (typeof(msg)) {
	733: (73) *(u8 *)(r10 -14) = r2
	last_idx 733 first_idx 724
	regs=4 stack=0 before 732: (61) r4 = *(u32 *)(r5 +68)
	regs=4 stack=0 before 731: (b7) r2 = 0
	734: (73) *(u8 *)(r10 -15) = r2
	735: (73) *(u8 *)(r10 -16) = r2
	736: (73) *(u8 *)(r10 -17) = r2
	737: (73) *(u8 *)(r10 -18) = r2
	738: (73) *(u8 *)(r10 -19) = r2
	739: (73) *(u8 *)(r10 -20) = r2
	740: (73) *(u8 *)(r10 -6) = r2
	741: (73) *(u8 *)(r10 -7) = r2
	742: (73) *(u8 *)(r10 -8) = r2
	743: (73) *(u8 *)(r10 -9) = r2
	744: (73) *(u8 *)(r10 -10) = r2
	745: (73) *(u8 *)(r10 -11) = r2
	746: (73) *(u8 *)(r10 -12) = r2
	747: (73) *(u8 *)(r10 -13) = r2
	748: (b4) w2 = 327680
	749: (63) *(u32 *)(r10 -24) = r2
	750: (18) r2 = 0x246c
	752: (63) *(u32 *)(r10 -32) = r2
	753: (b4) w2 = 1
	754: (6b) *(u16 *)(r10 -34) = r2
	755: (63) *(u32 *)(r10 -40) = r1
	756: (63) *(u32 *)(r10 -44) = r4
	757: (b4) w1 = 1284
	758: (6b) *(u16 *)(r10 -48) = r1
	759: (6b) *(u16 *)(r10 -36) = r3
	760: (b4) w6 = 0
	761: (73) *(u8 *)(r10 -2) = r6
	last_idx 761 first_idx 724
	regs=40 stack=0 before 760: (b4) w6 = 0
	762: (73) *(u8 *)(r10 -3) = r6
	763: (73) *(u8 *)(r10 -4) = r6
	764: (73) *(u8 *)(r10 -5) = r6
	765: (63) *(u32 *)(r10 -28) = r6
	766: (18) r7 = 0x4ad
	768: (6b) *(u16 *)(r10 -46) = r7
	769: (73) *(u8 *)(r10 -1) = r6
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	770: (67) r3 <<= 32
	771: (18) r1 = 0xffffffff
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	773: (4f) r3 |= r1
	774: (bf) r4 = r10
	;
	775: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP,
	776: (bf) r1 = r5
	777: (18) r2 = 0xffff7000722cc800
	779: (b4) w5 = 48
	780: (85) call bpf_perf_event_output#25
	last_idx 780 first_idx 724
	regs=20 stack=0 before 779: (b4) w5 = 48
	781: (b4) w1 = 2
	; struct debug_msg msg = {
	782: (6b) *(u16 *)(r10 -48) = r1
	783: (6b) *(u16 *)(r10 -46) = r7
	784: (b4) w1 = 50
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	785: (79) r2 = *(u64 *)(r10 -96)
	786: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	787: (63) *(u32 *)(r10 -32) = r1
	788: (18) r1 = 0x3200000032
	790: (7b) *(u64 *)(r10 -40) = r1
	791: (63) *(u32 *)(r10 -44) = r2
	792: (bf) r4 = r10
	;
	793: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	794: (79) r1 = *(u64 *)(r10 -96)
	795: (18) r2 = 0xffff7000722cc800
	797: (18) r3 = 0xffffffff
	799: (b4) w5 = 20
	800: (85) call bpf_perf_event_output#25
	last_idx 800 first_idx 781
	regs=20 stack=0 before 799: (b4) w5 = 20
	; cilium_dbg3(ctx, DBG_CT_LOOKUP4_1, masquerade_ip, masquerade_ip,
	801: (61) r1 = *(u32 *)(r10 -72)
	; struct debug_msg msg = {
	802: (6b) *(u16 *)(r10 -46) = r7
	803: (b4) w2 = 12290
	804: (6b) *(u16 *)(r10 -48) = r2
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	805: (79) r2 = *(u64 *)(r10 -96)
	806: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	807: (63) *(u32 *)(r10 -32) = r6
	808: (63) *(u32 *)(r10 -36) = r1
	809: (63) *(u32 *)(r10 -40) = r1
	810: (63) *(u32 *)(r10 -44) = r2
	811: (bf) r4 = r10
	;
	812: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	813: (79) r1 = *(u64 *)(r10 -96)
	814: (18) r2 = 0xffff7000722cc800
	816: (18) r3 = 0xffffffff
	818: (b4) w5 = 20
	819: (85) call bpf_perf_event_output#25
	last_idx 819 first_idx 781
	regs=20 stack=0 before 818: (b4) w5 = 20
	820: (79) r5 = *(u64 *)(r10 -96)
	; return (void *)(unsigned long)ctx->data_end;
	821: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	822: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	823: (07) r2 += 34
	824: (b4) w7 = -134
	; if (data + tot_len > data_end)
	825: (2d) if r2 > r1 goto pc-333
	 R0=inv(id=0) R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=invP0 R7_w=inv4294967162 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmmmmmm fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	; &redir_opt->ip1, 4, 0);
	826: (07) r9 += 2
	; ret = ctx_store_bytes(ctx, ETH_HLEN + offsetof(struct iphdr, saddr),
	827: (bf) r1 = r5
	828: (b4) w2 = 26
	829: (bf) r3 = r9
	830: (b4) w4 = 4
	831: (b4) w5 = 0
	832: (85) call bpf_skb_store_bytes#9
	R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf
	processed 1623 insns (limit 1000000) max_states_per_insn 3 total_states 55 peak_states 55 mark_read 27
level=warning msg="JoinEP: Failed to attach program(s)" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" file-path=1197_next/bpf_lxc.o identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=datapath-loader veth=lxc102a8ca64051
level=error msg="Error while rewriting endpoint BPF program" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Reverting endpoint changes after BPF regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Reverting proxy redirect removals" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Finished reverting proxy redirect removals" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Reverting xDS network policy update" subsys=envoy-manager
level=debug msg="preparing new cache transaction: upserting 0 entries, deleting 1 entries" subsys=xds xdsCachedVersion=15 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="deleting resource from cache" subsys=xds xdsCachedVersion=15 xdsResourceName=1197 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="committing cache transaction and notifying of new version" subsys=xds xdsCachedVersion=15 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="Finished reverting xDS network policy update" subsys=envoy-manager
level=debug msg="Reverting proxy redirect additions" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Finished reverting proxy redirect additions" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Finished reverting endpoint changes after BPF regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=info msg="Wrote verifier log to endpoint directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 file-path=1197_next/verifier.log identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=info msg="generating BPF for endpoint failed, keeping stale directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" file-path=1197_next_fail identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="removing directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 directory=1197_next_fail endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="removing directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 directory=1197_next endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Completed endpoint regeneration with no pending regeneration requests" code=OK containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=ready identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=0
level=warning msg="Regeneration of endpoint failed" bpfCompilation=0s bpfLoadProg=36.77225ms bpfWaitForELF="8.25µs" bpfWriteELF=1.3535ms containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh mapSync="65.208µs" policyCalculation=3.910041ms prepareBuild=5.708291ms proxyConfiguration="36.833µs" proxyPolicyCalculation="216.417µs" proxyWaitForAck=0s reason="retrying regeneration" subsys=endpoint total=53.222958ms waitingForCTClean=1.237917ms waitingForLock="8µs"
level=debug msg="Error regenerating endpoint: loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" code=Failure containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=ready identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=200
level=debug msg="EventQueue event processing statistics" eventConsumeOffQueueWaitTime="54.625µs" eventEnqueueWaitTime="24.209µs" eventHandlingDuration=53.624ms eventType="*endpoint.EndpointRegenerationEvent" name=endpoint-1197 subsys=eventqueue
level=error msg="endpoint regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Controller func execution time: 55.125458ms" name=endpoint-1197-regeneration-recovery subsys=controller uuid=8ad41e88-742f-451d-9f1b-b8a945514606
level=debug msg="Controller run failed" consecutiveErrors=4 error="regeneration recovery failed" name=endpoint-1197-regeneration-recovery subsys=controller uuid=8ad41e88-742f-451d-9f1b-b8a945514606
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Skipping CiliumEndpoint update because it has no k8s pod name" containerID= controller="sync-to-k8s-ciliumendpoint (767)" datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpointsynchronizer
level=debug msg="Controller func execution time: 347.834µs" name="sync-to-k8s-ciliumendpoint (767)" subsys=controller uuid=5039eeaf-3bc8-4a34-86d2-ee0a245eba33
level=debug msg="received signal that regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Triggering endpoint regeneration due to retrying regeneration" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=waiting-to-regenerate identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="Dequeued endpoint from build queue" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Regenerating endpoint" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ reason="retrying regeneration" startTime="2023-07-12 21:57:01.744769042 +0000 UTC m=+25.109954554" subsys=endpoint
level=debug msg="Regenerating endpoint: retrying regeneration" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=regenerating identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=317_next endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Starting policy recalculation..." containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Skipping unnecessary endpoint policy recalculation" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ policyChanged=true policyRevision.next=1 policyRevision.repo=1 subsys=endpoint
level=debug msg="Endpoint has no IP addresses" endpointID=317 subsys=envoy-manager
level=debug msg="BPF header file hashed (was: \"\")" bpfHeaderfileHash=0f5fa9a0ac774df439d9f3dc0bdbff52d824f5c229dffe9c8ab4b3a39b7c2977 containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="writing header file" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/ep_config.h identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="writing header file with DNSRules" DNSRules="map[]" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/ep_config.h identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Preparing to compile BPF" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ regeneration-level=rewrite+load subsys=endpoint
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_65535
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_65535
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="Load 1-min: 5.16 5-min: 2.58 15min: 2.06" endpointID=317 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2460 (62.56%) Free: 82 Buffers: 10 Cached: 1378" endpointID=317 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1012 (98.87%) Free: 11" endpointID=317 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 5.08% MEM: 2.26% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 88 VMS: 850 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_host.o subsys=elf template-path=/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e/bpf_host.o
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_00317
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_00317
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_host_cilium_net.o subsys=elf template-path=317_next/bpf_host.o
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_00317
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_00317
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_netdev_eth0.o subsys=elf template-path=317_next/bpf_host.o
level=debug msg="Loading CollectionSpec from ELF" device=cilium_host ifindex=5 objPath=317_next/bpf_host.o subsys=datapath-loader
level=debug msg="Loading Collection into kernel" device=cilium_host ifindex=5 objPath=317_next/bpf_host.o subsys=datapath-loader
Verifier error: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)
Verifier log: load program: permission denied:
	btf_vmlinux is malformed
	R1 type=ctx expected=fp
	; int tail_handle_snat_fwd_ipv4(struct __ctx_buff *ctx)
	0: (bf) r5 = r1
	1: (b4) w9 = 0
	; ctx->cb[off] = data;
	2: (63) *(u32 *)(r5 +52) = r9
	; return (void *)(unsigned long)ctx->data_end;
	3: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	4: (61) r6 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	5: (bf) r2 = r6
	6: (07) r2 += 34
	; __s8 ext_err = 0;
	7: (b4) w7 = 0
	8: (b4) w4 = 0
	9: (7b) *(u64 *)(r10 -152) = r5
	; if (data + tot_len > data_end)
	10: (2d) if r2 > r1 goto pc+7173
	 R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	;
	11: (61) r1 = *(u32 *)(r6 +26)
	; if (DIRECT_ROUTING_DEV_IFINDEX == NATIVE_DEV_IFINDEX &&
	12: (56) if w1 != 0x20015ac goto pc+3
	 R1_w=inv33559980 R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	13: (18) r2 = 0x0
	15: (16) if w2 == 0x41 goto pc+85
	last_idx 15 first_idx 15
	 R1_w=inv33559980 R2_rw=invP0 R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	parent didn't have regs=4 stack=0 marks
	last_idx 13 first_idx 0
	regs=4 stack=0 before 13: (18) r2 = 0x0
	; key.ip4 = ip;
	16: (63) *(u32 *)(r10 -64) = r1
	17: (b7) r7 = 0
	; struct endpoint_key key = {};
	18: (63) *(u32 *)(r10 -48) = r7
	last_idx 18 first_idx 15
	regs=80 stack=0 before 17: (b7) r7 = 0
	19: (63) *(u32 *)(r10 -52) = r7
	20: (63) *(u32 *)(r10 -56) = r7
	21: (63) *(u32 *)(r10 -60) = r7
	22: (b4) w1 = 1
	; key.family = ENDPOINT_KEY_IPV4;
	23: (73) *(u8 *)(r10 -48) = r1
	24: (bf) r2 = r10
	;
	25: (07) r2 += -64
	; return map_lookup_elem(&ENDPOINTS_MAP, &key);
	26: (18) r1 = 0xffff700159c9b400
	28: (85) call bpf_map_lookup_elem#1
	29: (bf) r8 = r0
	; remote_ep = lookup_ip4_remote_endpoint(ip4->daddr, 0);
	30: (61) r1 = *(u32 *)(r6 +30)
	; .ip4 = addr,
	31: (7b) *(u64 *)(r10 -48) = r7
	32: (63) *(u32 *)(r10 -56) = r1
	33: (18) r1 = 0x100000000000040
	; .lpm_key = { IPCACHE_PREFIX_LEN(prefix), {} },
	35: (7b) *(u64 *)(r10 -64) = r1
	36: (b4) w7 = 0
	; .ip4 = addr,
	37: (63) *(u32 *)(r10 -52) = r7
	last_idx 37 first_idx 29
	regs=80 stack=0 before 36: (b4) w7 = 0
	38: (bf) r2 = r10
	;
	39: (07) r2 += -64
	; return map_lookup_elem(map, &key);
	40: (18) r1 = 0xffff700104950c00
	42: (85) call bpf_map_lookup_elem#1
	43: (79) r5 = *(u64 *)(r10 -152)
	44: (b4) w4 = 0
	; if (local_ep) {
	45: (15) if r8 == 0x0 goto pc+7138
	 R0_w=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=invP0 R8_w=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv0 R10=fp0 fp-48_w=mmmmmmmm fp-56=mmmmmmmm fp-64_w=mmmmmmmm fp-152=ctx
	; .daddr = ip4->daddr,
	46: (61) r1 = *(u32 *)(r6 +30)
	; struct ipv4_ct_tuple tuple = {
	47: (63) *(u32 *)(r10 -128) = r1
	; .saddr = ip4->saddr
	48: (61) r1 = *(u32 *)(r6 +26)
	; struct ipv4_ct_tuple tuple = {
	49: (63) *(u32 *)(r10 -124) = r1
	50: (b4) w2 = 0
	51: (63) *(u32 *)(r10 -120) = r2
	last_idx 51 first_idx 29
	regs=4 stack=0 before 50: (b4) w2 = 0
	; .nexthdr = ip4->protocol,
	52: (71) r1 = *(u8 *)(r6 +23)
	; struct ipv4_ct_tuple tuple = {
	53: (73) *(u8 *)(r10 -115) = r2
	;
	54: (18) r7 = 0xffff7001044a2800
	56: (16) if w1 == 0x6 goto pc+2
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0?0000 fp-128=mmmmmmmm fp-152=ctx
	57: (18) r7 = 0xffff7000ef1d5000
	; struct ipv4_ct_tuple tuple = {
	59: (73) *(u8 *)(r10 -116) = r1
	; return ip4->ihl * 4;
	60: (71) r8 = *(u8 *)(r6 +14)
	; return ip4->ihl * 4;
	61: (64) w8 <<= 2
	62: (54) w8 &= 60
	; ct_is_reply4(get_ct_map4(&tuple), ctx, ETH_HLEN +
	63: (04) w8 += 14
	; switch (tuple->nexthdr) {
	64: (16) if w1 == 0x11 goto pc+114
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8_w=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	65: (16) if w1 == 0x6 goto pc+113
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	66: (56) if w1 != 0x1 goto pc+6938
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv1 R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	67: (b4) w1 = 0
	; __be16 identifier = 0;
	68: (6b) *(u16 *)(r10 -64) = r1
	last_idx 68 first_idx 65
	regs=2 stack=0 before 67: (b4) w1 = 0
	69: (bf) r3 = r10
	;
	70: (07) r3 += -80
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	71: (bf) r1 = r5
	72: (bc) w2 = w8
	73: (b4) w4 = 1
	74: (85) call bpf_skb_load_bytes#26
	last_idx 74 first_idx 65
	regs=10 stack=0 before 73: (b4) w4 = 1
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	75: (c6) if w0 s< 0x0 goto pc+6928
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	76: (71) r3 = *(u8 *)(r10 -80)
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	77: (bc) w2 = w3
	78: (44) w2 |= 8
	79: (79) r1 = *(u64 *)(r10 -152)
	80: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=ctx(id=0,off=0,imm=0) R2_w=inv(id=0,umin_value=8,umax_value=255,var_off=(0x8; 0xf7)) R3_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	81: (05) goto pc+8
	; switch (type) {
	90: (b4) w2 = 0
	; tuple->dport = 0;
	91: (63) *(u32 *)(r10 -120) = r2
	last_idx 91 first_idx 75
	regs=4 stack=0 before 90: (b4) w2 = 0
	; switch (type) {
	92: (bf) r1 = r3
	93: (66) if w1 s> 0xa goto pc+6400
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	94: (16) if w1 == 0x0 goto pc+6512
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	95: (16) if w1 == 0x3 goto pc+6400
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	96: (16) if w1 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	97: (05) goto pc+6900
	; if (err < 0)
	6998: (b4) w1 = 1
	; tuple->flags = TUPLE_F_IN;
	6999: (73) *(u8 *)(r10 -115) = r1
	7000: (bf) r2 = r10
	;
	7001: (07) r2 += -128
	; *is_reply = map_lookup_elem(map, tuple) != NULL;
	7002: (bf) r1 = r7
	7003: (85) call bpf_map_lookup_elem#1
	7004: (79) r5 = *(u64 *)(r10 -152)
	7005: (b4) w7 = 0
	7006: (b4) w4 = 0
	7007: (05) goto pc+175
	; if (ret == NAT_PUNT_TO_STACK)
	7183: (b4) w9 = 0
	; struct ipv4_ct_tuple tuple = {};
	7184: (6b) *(u16 *)(r10 -116) = r9
	last_idx 7184 first_idx 7004
	regs=200 stack=0 before 7183: (b4) w9 = 0
	7185: (63) *(u32 *)(r10 -120) = r9
	7186: (b7) r1 = 0
	7187: (7b) *(u64 *)(r10 -128) = r1
	last_idx 7187 first_idx 7004
	regs=2 stack=0 before 7186: (b7) r1 = 0
	; return (void *)(unsigned long)ctx->data_end;
	7188: (61) r2 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	7189: (61) r8 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	7190: (bf) r1 = r8
	7191: (07) r1 += 34
	; if (data + tot_len > data_end)
	7192: (2d) if r1 > r2 goto pc+854
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=pkt(id=0,off=34,r=34,imm=0) R2_w=pkt_end(id=0,off=0,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9_w=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??000000 fp-128_w=00000000 fp-152=ctx
	7193: (7b) *(u64 *)(r10 -160) = r2
	7194: (b4) w4 = -158
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7195: (69) r6 = *(u16 *)(r8 +20)
	; tuple->nexthdr = ip4->protocol;
	7196: (71) r1 = *(u8 *)(r8 +23)
	; tuple->nexthdr = ip4->protocol;
	7197: (73) *(u8 *)(r10 -116) = r1
	; tuple->daddr = ip4->daddr;
	7198: (61) r2 = *(u32 *)(r8 +30)
	; tuple->daddr = ip4->daddr;
	7199: (63) *(u32 *)(r10 -128) = r2
	; tuple->saddr = ip4->saddr;
	7200: (61) r3 = *(u32 *)(r8 +26)
	; tuple->saddr = ip4->saddr;
	7201: (63) *(u32 *)(r10 -124) = r3
	; switch (tuple->nexthdr) {
	7202: (16) if w1 == 0x1 goto pc+732
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv0 R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end
	7203: (63) *(u32 *)(r10 -168) = r7
	last_idx 7203 first_idx 7202
	regs=80 stack=0 before 7202: (16) if w1 == 0x1 goto pc+732
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_rw=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4_w=inv4294967138 R5_w=ctx(id=0,off=0,imm=0) R6_w=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_rw=invP0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9_w=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128_w=mmmmmmmm fp-152=ctx fp-160_w=pkt_end
	parent didn't have regs=80 stack=0 marks
	last_idx 7201 first_idx 7004
	regs=80 stack=0 before 7201: (63) *(u32 *)(r10 -124) = r3
	regs=80 stack=0 before 7200: (61) r3 = *(u32 *)(r8 +26)
	regs=80 stack=0 before 7199: (63) *(u32 *)(r10 -128) = r2
	regs=80 stack=0 before 7198: (61) r2 = *(u32 *)(r8 +30)
	regs=80 stack=0 before 7197: (73) *(u8 *)(r10 -116) = r1
	regs=80 stack=0 before 7196: (71) r1 = *(u8 *)(r8 +23)
	regs=80 stack=0 before 7195: (69) r6 = *(u16 *)(r8 +20)
	regs=80 stack=0 before 7194: (b4) w4 = -158
	regs=80 stack=0 before 7193: (7b) *(u64 *)(r10 -160) = r2
	regs=80 stack=0 before 7192: (2d) if r1 > r2 goto pc+854
	regs=80 stack=0 before 7191: (07) r1 += 34
	regs=80 stack=0 before 7190: (bf) r1 = r8
	regs=80 stack=0 before 7189: (61) r8 = *(u32 *)(r5 +76)
	regs=80 stack=0 before 7188: (61) r2 = *(u32 *)(r5 +80)
	regs=80 stack=0 before 7187: (7b) *(u64 *)(r10 -128) = r1
	regs=80 stack=0 before 7186: (b7) r1 = 0
	regs=80 stack=0 before 7185: (63) *(u32 *)(r10 -120) = r9
	regs=80 stack=0 before 7184: (6b) *(u16 *)(r10 -116) = r9
	regs=80 stack=0 before 7183: (b4) w9 = 0
	regs=80 stack=0 before 7007: (05) goto pc+175
	regs=80 stack=0 before 7006: (b4) w4 = 0
	regs=80 stack=0 before 7005: (b4) w7 = 0
	;
	7204: (71) r7 = *(u8 *)(r8 +14)
	; switch (tuple->nexthdr) {
	7205: (16) if w1 == 0x11 goto pc+1
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7206: (56) if w1 != 0x6 goto pc+29
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv6 R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; struct ipv4_frag_id frag_id = {
	7207: (63) *(u32 *)(r10 -76) = r3
	7208: (63) *(u32 *)(r10 -80) = r2
	; .id = ip4->id,
	7209: (69) r2 = *(u16 *)(r8 +18)
	7210: (b4) w3 = 0
	; struct ipv4_frag_id frag_id = {
	7211: (73) *(u8 *)(r10 -69) = r3
	last_idx 7211 first_idx 7202
	regs=8 stack=0 before 7210: (b4) w3 = 0
	7212: (73) *(u8 *)(r10 -70) = r1
	7213: (6b) *(u16 *)(r10 -72) = r2
	; return ip4->frag_off & bpf_htons(0x3FFF);
	7214: (bc) w1 = w6
	7215: (54) w1 &= 65343
	; if (unlikely(is_fragment)) {
	7216: (16) if w1 == 0x0 goto pc+654
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=65343,var_off=(0x0; 0xff3f)) R2=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R3=invP0 R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; return ctx->len;
	7217: (61) r9 = *(u32 *)(r5 +0)
	7218: (b7) r1 = 0
	; struct metrics_value *entry, new_entry = {};
	7219: (7b) *(u64 *)(r10 -56) = r1
	last_idx 7219 first_idx 7216
	regs=2 stack=0 before 7218: (b7) r1 = 0
	7220: (7b) *(u64 *)(r10 -64) = r1
	7221: (b7) r1 = 521
	; struct metrics_key key = {};
	7222: (7b) *(u64 *)(r10 -144) = r1
	7223: (bf) r2 = r10
	;
	7224: (07) r2 += -144
	; entry = map_lookup_elem(&METRICS_MAP, &key);
	7225: (18) r1 = 0xffff7000ac846c00
	7227: (85) call bpf_map_lookup_elem#1
	; if (entry) {
	7228: (15) if r0 == 0x0 goto pc+616
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; entry->count += 1;
	7229: (79) r1 = *(u64 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7230: (07) r1 += 1
	7231: (7b) *(u64 *)(r0 +0) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; entry->bytes += bytes;
	7232: (79) r1 = *(u64 *)(r0 +8)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7233: (0f) r1 += r9
	7234: (7b) *(u64 *)(r0 +8) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7235: (05) goto pc+620
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7856: (69) r1 = *(u16 *)(r8 +20)
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7857: (54) w1 &= 65311
	7858: (79) r5 = *(u64 *)(r10 -152)
	; if (likely(not_first_fragment))
	7859: (16) if w1 == 0x0 goto pc+11
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0,umax_value=65311,var_off=(0x0; 0xff1f)) R5_w=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7860: (bf) r2 = r10
	;
	7861: (07) r2 += -80
	; tmp = map_lookup_elem(&IPV4_FRAG_DATAGRAMS_MAP, frag_id);
	7862: (18) r1 = 0xffff7001044a2400
	7864: (85) call bpf_map_lookup_elem#1
	; if (!tmp)
	7865: (55) if r0 != 0x0 goto pc+548
	
	from 7865 to 8414: R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; case  4: __it_mob(d, s, 32);
	8414: (61) r1 = *(u32 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	8415: (63) *(u32 *)(r10 -120) = r1
	8416: (05) goto pc-485
	; map_update_elem(&METRICS_MAP, &key, &new_entry, 0);
	7932: (79) r5 = *(u64 *)(r10 -152)
	7933: (61) r7 = *(u32 *)(r10 -168)
	7934: (b4) w4 = 0
	7935: (54) w6 &= -225
	7936: (b4) w1 = 1
	; if (IS_ERR(ret)) goto skip_crab;
	7937: (16) if w4 == 0x2 goto pc+1
	last_idx 7937 first_idx 8414
	regs=10 stack=0 before 7936: (b4) w1 = 1
	regs=10 stack=0 before 7935: (54) w6 &= -225
	regs=10 stack=0 before 7934: (b4) w4 = 0
	7938: (b4) w1 = 0
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7939: (54) w6 &= 65535
	7940: (79) r0 = *(u64 *)(r10 -160)
	; if (IS_ERR(ret)) goto skip_crab;
	7941: (56) if w6 != 0x0 goto pc+105
	 R0_w=pkt_end(id=0,off=0,imm=0) R1=inv0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6_w=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	;
	7942: (bc) w2 = w4
	7943: (74) w2 >>= 31
	7944: (4c) w2 |= w1
	; if (IS_ERR(ret)) goto skip_crab;
	7945: (56) if w2 != 0x0 goto pc+101
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	7946: (71) r1 = *(u8 *)(r8 +23)
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	7947: (56) if w1 != 0x6 goto pc+99
	 R0=pkt_end(id=0,off=0,imm=0) R1=inv6 R2=invP0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7948: (07) r8 += 14
	; return ip4->ihl * 4;
	7949: (71) r1 = *(u8 *)(r8 +0)
	; return ip4->ihl * 4;
	7950: (64) w1 <<= 2
	7951: (57) r1 &= 60
	; tcph = (struct tcphdr *)((void*)ip4 + ipv4_hdrlen(ip4));
	7952: (0f) r8 += r1
	last_idx 7952 first_idx 7947
	regs=2 stack=0 before 7951: (57) r1 &= 60
	regs=2 stack=0 before 7950: (64) w1 <<= 2
	regs=2 stack=0 before 7949: (71) r1 = *(u8 *)(r8 +0)
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	7953: (bf) r9 = r8
	7954: (07) r9 += 20
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	7955: (2d) if r9 > r0 goto pc+91
	 R0=pkt_end(id=0,off=0,imm=0) R1_w=invP(id=0,umax_value=60,var_off=(0x0; 0x3c)) R2=invP0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=9,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7956: (b4) w2 = 15
	;
	7957: (61) r1 = *(u32 *)(r5 +80)
	; offset = tcph->doff * 4;
	7958: (69) r3 = *(u16 *)(r8 +12)
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	7959: (74) w3 >>= 2
	7960: (54) w3 &= 60
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	7961: (04) w3 += -20
	7962: (05) goto pc+6
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=inv(id=0,umax_value=252,var_off=(0x0; 0xfc)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	last_idx 7968 first_idx 8017
	regs=4 stack=0 before 7967: (bc) w4 = w8
	regs=4 stack=0 before 7966: (04) w2 += -1
	regs=4 stack=0 before 7965: (79) r5 = *(u64 *)(r10 -152)
	regs=4 stack=0 before 8020: (05) goto pc-56
	regs=4 stack=0 before 8019: (1c) w3 -= w4
	regs=4 stack=0 before 8018: (0f) r9 += r4
	regs=4 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=9,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_r=invP0 R9_r=pkt(id=9,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 8007 first_idx 7992
	regs=4 stack=0 before 8007: (bd) if r4 <= r1 goto pc+9
	regs=4 stack=0 before 8006: (07) r4 += 2
	regs=4 stack=0 before 8005: (bf) r4 = r9
	regs=4 stack=0 before 7995: (56) if w5 != 0x0 goto pc+9
	regs=4 stack=0 before 7994: (16) if w5 == 0x2d goto pc+218
	regs=4 stack=0 before 7993: (16) if w5 == 0x1 goto pc-31
	regs=4 stack=0 before 7992: (71) r5 = *(u8 *)(r9 +0)
	 R0=pkt_end(id=0,off=0,imm=0) R1_r=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_rw=invP0 R9_r=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48_r=mmmmmmmm fp-56=00000000 fp-64_r=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160_r=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 7983 first_idx 7969
	regs=4 stack=0 before 7983: (bd) if r4 <= r1 goto pc+8
	regs=4 stack=0 before 7982: (07) r4 += 1
	regs=4 stack=0 before 7981: (bf) r4 = r9
	regs=4 stack=0 before 7972: (56) if w4 != 0x0 goto pc+8
	regs=4 stack=0 before 7971: (54) w4 &= 255
	regs=4 stack=0 before 7970: (bc) w4 = w3
	regs=4 stack=0 before 7969: (bc) w8 = w4
	 R0=pkt_end(id=0,off=0,imm=0) R1_rw=pkt_end(id=0,off=0,imm=0) R2_rw=invP15 R3_rw=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_r=invP0 R5_r=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=9,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_rw=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48_r=mmmmmmmm fp-56=00000000 fp-64_r=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160_r=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 7962 first_idx 7947
	regs=4 stack=0 before 7962: (05) goto pc+6
	regs=4 stack=0 before 7961: (04) w3 += -20
	regs=4 stack=0 before 7960: (54) w3 &= 60
	regs=4 stack=0 before 7959: (74) w3 >>= 2
	regs=4 stack=0 before 7958: (69) r3 = *(u16 *)(r8 +12)
	regs=4 stack=0 before 7957: (61) r1 = *(u32 *)(r5 +80)
	regs=4 stack=0 before 7956: (b4) w2 = 15
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=0,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=20,off=36,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8005
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=21,off=34,r=0,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=36,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8007
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=0,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=36,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=22,off=34,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=0,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=36,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=0,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=36,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7981
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=0,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP9 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4=pkt(id=25,off=36,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=25,off=34,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=0,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=36,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=0,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=36,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=27,off=34,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=0,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=36,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=0,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=36,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7981
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=0,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP4 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4=pkt(id=30,off=36,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=30,off=34,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=0,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=36,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=0,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=36,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=32,off=34,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=0,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	
	from 7994 to 8213: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP1 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=inv45 R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	8213: (bf) r2 = r9
	8214: (07) r2 += 20
	8215: (79) r5 = *(u64 *)(r10 -152)
	8216: (bc) w4 = w8
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	8217: (2d) if r2 > r0 goto pc-171
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=33,off=54,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=invP0 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	8218: (71) r2 = *(u8 *)(r9 +18)
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	8219: (56) if w2 != 0x0 goto pc+107
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=inv0 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=invP0 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	8220: (b4) w4 = -134
	; return (void *)(unsigned long)ctx->data;
	8221: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	8222: (bf) r3 = r2
	8223: (07) r3 += 34
	; if (data + tot_len > data_end)
	8224: (2d) if r3 > r1 goto pc-178
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=pkt(id=0,off=0,r=34,imm=0) R3=pkt(id=0,off=34,r=34,imm=0) R4=inv4294967162 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; masquerade_ip = ip4->saddr;
	8225: (61) r1 = *(u32 *)(r2 +26)
	; masquerade_ip = ip4->saddr;
	8226: (63) *(u32 *)(r10 -80) = r1
	; return ip4->ihl * 4;
	8227: (71) r2 = *(u8 *)(r2 +14)
	; return ip4->ihl * 4;
	8228: (64) w2 <<= 2
	8229: (54) w2 &= 60
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	8230: (04) w2 += 44
	8231: (bf) r3 = r10
	; masquerade_ip = ip4->saddr;
	8232: (07) r3 += -80
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	8233: (bf) r1 = r5
	8234: (b4) w4 = 4
	8235: (b4) w5 = 0
	8236: (85) call bpf_skb_store_bytes#9
	last_idx 8236 first_idx 8224
	regs=10 stack=0 before 8235: (b4) w5 = 0
	regs=10 stack=0 before 8234: (b4) w4 = 4
	8237: (79) r5 = *(u64 *)(r10 -152)
	8238: (b4) w4 = -141
	; if (ret < 0) return DROP_WRITE_ERROR;
	8239: (c6) if w0 s< 0x0 goto pc-193
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R4_w=inv4294967155 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	; return ctx->len;
	8240: (61) r1 = *(u32 *)(r5 +0)
	; __u64 cap_len = min_t(__u64, monitor ? : TRACE_PAYLOAD_LEN,
	8241: (bf) r3 = r1
	8242: (a6) if w1 < 0x80 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=inv(id=35,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=35,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4_w=inv4294967155 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	8243: (b7) r3 = 128
	; __notify_common_hdr(CILIUM_NOTIFY_TRACE, obs_point),
	8244: (61) r2 = *(u32 *)(r5 +68)
	8245: (b7) r4 = 327680
	; msg = (typeof(msg)) {
	8246: (7b) *(u64 *)(r10 -40) = r4
	8247: (18) r4 = 0x1
	8249: (63) *(u32 *)(r10 -48) = r4
	8250: (b4) w4 = 1
	8251: (6b) *(u16 *)(r10 -50) = r4
	8252: (63) *(u32 *)(r10 -56) = r1
	8253: (63) *(u32 *)(r10 -60) = r2
	8254: (b4) w1 = 20776196
	8255: (63) *(u32 *)(r10 -64) = r1
	8256: (b7) r1 = 0
	; case  8: jmp_8:  __it_set(d, 64);
	8257: (7b) *(u64 *)(r10 -32) = r1
	last_idx 8257 first_idx 8237
	regs=2 stack=0 before 8256: (b7) r1 = 0
	8258: (7b) *(u64 *)(r10 -24) = r1
	; msg = (typeof(msg)) {
	8259: (6b) *(u16 *)(r10 -52) = r3
	8260: (b4) w6 = 0
	8261: (63) *(u32 *)(r10 -44) = r6
	last_idx 8261 first_idx 8237
	regs=40 stack=0 before 8260: (b4) w6 = 0
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	8262: (67) r3 <<= 32
	8263: (18) r1 = 0xffffffff
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	8265: (4f) r3 |= r1
	8266: (bf) r4 = r10
	;
	8267: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP,
	8268: (bf) r1 = r5
	8269: (18) r2 = 0xffff7000722cc800
	8271: (b4) w5 = 48
	8272: (85) call bpf_perf_event_output#25
	last_idx 8272 first_idx 8237
	regs=20 stack=0 before 8271: (b4) w5 = 48
	8273: (b4) w1 = 20774914
	; struct debug_msg msg = {
	8274: (63) *(u32 *)(r10 -64) = r1
	8275: (b4) w1 = 50
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	8276: (79) r2 = *(u64 *)(r10 -152)
	8277: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	8278: (63) *(u32 *)(r10 -48) = r1
	8279: (18) r1 = 0x3200000032
	8281: (7b) *(u64 *)(r10 -56) = r1
	8282: (63) *(u32 *)(r10 -60) = r2
	8283: (bf) r4 = r10
	;
	8284: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	8285: (79) r1 = *(u64 *)(r10 -152)
	8286: (18) r2 = 0xffff7000722cc800
	8288: (18) r3 = 0xffffffff
	8290: (b4) w5 = 20
	8291: (85) call bpf_perf_event_output#25
	last_idx 8291 first_idx 8273
	regs=20 stack=0 before 8290: (b4) w5 = 20
	; cilium_dbg3(ctx, DBG_CT_LOOKUP4_1, masquerade_ip, masquerade_ip,
	8292: (61) r1 = *(u32 *)(r10 -80)
	8293: (b4) w2 = 20787202
	; struct debug_msg msg = {
	8294: (63) *(u32 *)(r10 -64) = r2
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	8295: (79) r2 = *(u64 *)(r10 -152)
	8296: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	8297: (63) *(u32 *)(r10 -56) = r1
	8298: (63) *(u32 *)(r10 -52) = r1
	8299: (63) *(u32 *)(r10 -48) = r6
	8300: (63) *(u32 *)(r10 -60) = r2
	8301: (bf) r4 = r10
	;
	8302: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	8303: (79) r1 = *(u64 *)(r10 -152)
	8304: (18) r2 = 0xffff7000722cc800
	8306: (18) r3 = 0xffffffff
	8308: (b4) w5 = 20
	8309: (85) call bpf_perf_event_output#25
	last_idx 8309 first_idx 8273
	regs=20 stack=0 before 8308: (b4) w5 = 20
	8310: (79) r5 = *(u64 *)(r10 -152)
	; return (void *)(unsigned long)ctx->data_end;
	8311: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	8312: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	8313: (07) r2 += 34
	8314: (b4) w4 = -134
	; if (data + tot_len > data_end)
	8315: (2d) if r2 > r1 goto pc-269
	 R0=inv(id=0) R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv4294967162 R5_w=ctx(id=0,off=0,imm=0) R6=invP0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-24=mmmmmmmm fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	; &redir_opt->ip1, 4, 0);
	8316: (07) r9 += 2
	; ret = ctx_store_bytes(ctx, ETH_HLEN + offsetof(struct iphdr, saddr),
	8317: (bf) r1 = r5
	8318: (b4) w2 = 26
	8319: (bf) r3 = r9
	8320: (b4) w4 = 4
	8321: (b4) w5 = 0
	8322: (85) call bpf_skb_store_bytes#9
	R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf
	processed 1463 insns (limit 1000000) max_states_per_insn 3 total_states 58 peak_states 58 mark_read 28
level=warning msg="JoinEP: Failed to load program for host endpoint (cil_to_host)" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" file-path=317_next/bpf_host.o identity=1 ipv4= ipv6= k8sPodName=/ subsys=datapath-loader veth=cilium_host
level=error msg="Error while rewriting endpoint BPF program" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting endpoint changes after BPF regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting proxy redirect removals" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting proxy redirect removals" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting proxy redirect additions" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting proxy redirect additions" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting endpoint changes after BPF regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=info msg="Wrote verifier log to endpoint directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/verifier.log identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=info msg="generating BPF for endpoint failed, keeping stale directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" file-path=317_next_fail identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=317_next_fail endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=317_next endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Completed endpoint regeneration with no pending regeneration requests" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=ready identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=warning msg="Regeneration of endpoint failed" bpfCompilation=0s bpfLoadProg=34.763042ms bpfWaitForELF="9.167µs" bpfWriteELF=2.163167ms containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ mapSync="30.875µs" policyCalculation="195µs" prepareBuild="921.042µs" proxyConfiguration="19µs" proxyPolicyCalculation="72.542µs" proxyWaitForAck=0s reason="retrying regeneration" subsys=endpoint total=43.877292ms waitingForCTClean=1.201375ms waitingForLock="2.124µs"
level=debug msg="Error regenerating endpoint: loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" code=Failure containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=ready identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=200
level=debug msg="EventQueue event processing statistics" eventConsumeOffQueueWaitTime="32.458µs" eventEnqueueWaitTime="18.334µs" eventHandlingDuration=44.170625ms eventType="*endpoint.EndpointRegenerationEvent" name=endpoint-317 subsys=eventqueue
level=error msg="endpoint regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Controller func execution time: 44.617959ms" name=endpoint-317-regeneration-recovery subsys=controller uuid=e7863fbe-c1cf-4ee3-ba58-7391bc06fe4a
level=debug msg="Controller run failed" consecutiveErrors=4 error="regeneration recovery failed" name=endpoint-317-regeneration-recovery subsys=controller uuid=e7863fbe-c1cf-4ee3-ba58-7391bc06fe4a
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Controller func execution time: 28.834µs" name=metricsmap-bpf-prom-sync subsys=controller uuid=38a9c0b7-176f-4a35-865f-69a2af221242
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Controller func execution time: 3.739ms" name=k8s-heartbeat subsys=controller uuid=45972407-ff91-4e18-a82f-32a4ebdfb07b
level=debug msg="Skipping CiliumEndpoint update because it has not changed" containerID=972758c29d controller="sync-to-k8s-ciliumendpoint (1197)" datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpointsynchronizer
level=debug msg="Controller func execution time: 283µs" name="sync-to-k8s-ciliumendpoint (1197)" subsys=controller uuid=fdcb02e9-f4be-47b4-bc48-d3aa990929bf
level=debug msg="Controller func execution time: 44.125µs" name=metricsmap-bpf-prom-sync subsys=controller uuid=38a9c0b7-176f-4a35-865f-69a2af221242
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="received signal that regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Triggering endpoint regeneration due to retrying regeneration" code=OK containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=waiting-to-regenerate identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=0
level=debug msg="Dequeued endpoint from build queue" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Regenerating endpoint" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh reason="retrying regeneration" startTime="2023-07-12 21:57:08.409037045 +0000 UTC m=+31.774222515" subsys=endpoint
level=debug msg="Regenerating endpoint: retrying regeneration" code=OK containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=regenerating identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=0
level=debug msg="removing directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 directory=1197_next endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Starting policy recalculation..." containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Skipping unnecessary endpoint policy recalculation" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyChanged=true policyRevision.next=1 policyRevision.repo=1 subsys=endpoint
level=debug msg="preparing new cache transaction: upserting 1 entries, deleting 0 entries" subsys=xds xdsCachedVersion=16 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="inserting resource into cache" subsys=xds xdsCachedVersion=16 xdsResourceName=1197 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="committing cache transaction and notifying of new version" subsys=xds xdsCachedVersion=16 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="BPF header file hashed (was: \"\")" bpfHeaderfileHash=7893731b6685475dfe5360e1b8a61cf84c83a2bf5f9ee995962246f1092743d5 containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="writing header file" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 file-path=1197_next/ep_config.h identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="writing header file with DNSRules" DNSRules="map[]" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 file-path=1197_next/ep_config.h identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Preparing to compile BPF" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh regeneration-level=rewrite+load subsys=endpoint
level=debug msg="Found variable with offset 107972" subsys=elf symbol=LXC_ID
level=debug msg="Found variable with offset 107968" subsys=elf symbol=LXC_IPV4
level=debug msg="Found variable with offset 107952" subsys=elf symbol=LXC_IP_1
level=debug msg="Found variable with offset 107956" subsys=elf symbol=LXC_IP_2
level=debug msg="Found variable with offset 107960" subsys=elf symbol=LXC_IP_3
level=debug msg="Found variable with offset 107964" subsys=elf symbol=LXC_IP_4
level=debug msg="Found variable with offset 107976" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 107980" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 107992" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 107984" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 107988" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 30" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_container" subsys=elf
level=debug msg="Skipping cil_to_container" subsys=elf
level=debug msg="Found symbol with offset 1017016" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1016648" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1020451" subsys=elf symbol=cilium_calls_65535
level=debug msg="Found symbol with offset 1017110" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1017088" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1017209" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1016781" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1017275" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1016842" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1016609" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1021710" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1017366" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1017153" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1016758" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1022539" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1017290" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1017128" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1017314" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1016902" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1017032" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1020852" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1020431" subsys=elf symbol=cilium_policy_65535
level=debug msg="Found symbol with offset 1017174" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1016869" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1017064" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1020827" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping handle_policy" subsys=elf
level=debug msg="Skipping tail_handle_arp" subsys=elf
level=debug msg="Skipping tail_handle_ipv4" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_cont" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_ipv4_ct_egress" subsys=elf
level=debug msg="Skipping tail_ipv4_ct_ingress" subsys=elf
level=debug msg="Skipping tail_ipv4_to_endpoint" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1016705" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1016888" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1016968" subsys=elf symbol=to-container
level=debug msg="Found section with offset 1016985" subsys=elf symbol=from-container
level=debug msg="Found section with offset 1017052" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1017200" subsys=elf symbol=1/0xffff
level=debug msg="Found section with offset 1017246" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1017262" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1017329" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1017427" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1017875" subsys=elf symbol=2/29
level=debug msg="Found section with offset 1018439" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1019240" subsys=elf symbol=2/27
level=debug msg="Found section with offset 1019321" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1019367" subsys=elf symbol=2/7
level=debug msg="Load 1-min: 4.75 5-min: 2.53 15min: 2.05" endpointID=1197 subsys=endpoint
level=debug msg="Found section with offset 1020020" subsys=elf symbol=2/6
level=debug msg="Found section with offset 1020628" subsys=elf symbol=2/25
level=debug msg="Memory: Total: 3933 Used: 2475 (62.94%) Free: 76 Buffers: 19 Cached: 1361" endpointID=1197 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1016 (99.24%) Free: 7" endpointID=1197 subsys=endpoint
level=debug msg="Found section with offset 1022452" subsys=elf symbol=2/13
level=debug msg="Found section with offset 1023900" subsys=elf symbol=2/1
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 4.37% MEM: 2.42% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 95 VMS: 850 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=1197 subsys=endpoint
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=1197_next/bpf_lxc.o subsys=elf template-path=/var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69/bpf_lxc.o
level=debug msg="Loading CollectionSpec from ELF" device=lxc102a8ca64051 ifindex=9 objPath=1197_next/bpf_lxc.o subsys=datapath-loader
level=debug msg="Loading Collection into kernel" device=lxc102a8ca64051 ifindex=9 objPath=1197_next/bpf_lxc.o subsys=datapath-loader
Verifier error: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)
Verifier log: load program: permission denied:
	btf_vmlinux is malformed
	R1 type=ctx expected=fp
	; int tail_handle_snat_fwd_ipv4(struct __ctx_buff *ctx)
	0: (bf) r5 = r1
	1: (b4) w7 = 0
	; ctx->cb[off] = data;
	2: (63) *(u32 *)(r5 +52) = r7
	; return (void *)(unsigned long)ctx->data_end;
	3: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	4: (61) r6 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	5: (bf) r2 = r6
	6: (07) r2 += 34
	7: (7b) *(u64 *)(r10 -96) = r5
	; if (data + tot_len > data_end)
	8: (2d) if r2 > r1 goto pc+224
	 R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R10=fp0 fp-96_w=ctx
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	9: (61) r1 = *(u32 *)(r6 +26)
	10: (b7) r9 = 0
	; struct endpoint_key key = {};
	11: (63) *(u32 *)(r10 -32) = r9
	last_idx 11 first_idx 0
	regs=200 stack=0 before 10: (b7) r9 = 0
	12: (63) *(u32 *)(r10 -36) = r9
	13: (63) *(u32 *)(r10 -40) = r9
	14: (63) *(u32 *)(r10 -44) = r9
	; key.ip4 = ip;
	15: (63) *(u32 *)(r10 -48) = r1
	16: (b4) w1 = 1
	; key.family = ENDPOINT_KEY_IPV4;
	17: (73) *(u8 *)(r10 -32) = r1
	18: (bf) r2 = r10
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	19: (07) r2 += -48
	; return map_lookup_elem(&ENDPOINTS_MAP, &key);
	20: (18) r1 = 0xffff700159c9b400
	22: (85) call bpf_map_lookup_elem#1
	23: (bf) r8 = r0
	; remote_ep = lookup_ip4_remote_endpoint(ip4->daddr, 0);
	24: (61) r1 = *(u32 *)(r6 +30)
	; .ip4 = addr,
	25: (7b) *(u64 *)(r10 -32) = r9
	26: (63) *(u32 *)(r10 -36) = r7
	last_idx 26 first_idx 23
	regs=80 stack=0 before 25: (7b) *(u64 *)(r10 -32) = r9
	regs=80 stack=0 before 24: (61) r1 = *(u32 *)(r6 +30)
	regs=80 stack=0 before 23: (bf) r8 = r0
	 R0_rw=map_value_or_null(id=1,off=0,ks=20,vs=48,imm=0) R6_rw=pkt(id=0,off=0,r=34,imm=0) R7_rw=invP0 R9_rw=invP0 R10=fp0 fp-32=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-96_w=ctx
	parent didn't have regs=80 stack=0 marks
	last_idx 22 first_idx 0
	regs=80 stack=0 before 22: (85) call bpf_map_lookup_elem#1
	regs=80 stack=0 before 20: (18) r1 = 0xffff700159c9b400
	regs=80 stack=0 before 19: (07) r2 += -48
	regs=80 stack=0 before 18: (bf) r2 = r10
	regs=80 stack=0 before 17: (73) *(u8 *)(r10 -32) = r1
	regs=80 stack=0 before 16: (b4) w1 = 1
	regs=80 stack=0 before 15: (63) *(u32 *)(r10 -48) = r1
	regs=80 stack=0 before 14: (63) *(u32 *)(r10 -44) = r9
	regs=80 stack=0 before 13: (63) *(u32 *)(r10 -40) = r9
	regs=80 stack=0 before 12: (63) *(u32 *)(r10 -36) = r9
	regs=80 stack=0 before 11: (63) *(u32 *)(r10 -32) = r9
	regs=80 stack=0 before 10: (b7) r9 = 0
	regs=80 stack=0 before 9: (61) r1 = *(u32 *)(r6 +26)
	regs=80 stack=0 before 8: (2d) if r2 > r1 goto pc+224
	regs=80 stack=0 before 7: (7b) *(u64 *)(r10 -96) = r5
	regs=80 stack=0 before 6: (07) r2 += 34
	regs=80 stack=0 before 5: (bf) r2 = r6
	regs=80 stack=0 before 4: (61) r6 = *(u32 *)(r5 +76)
	regs=80 stack=0 before 3: (61) r1 = *(u32 *)(r5 +80)
	regs=80 stack=0 before 2: (63) *(u32 *)(r5 +52) = r7
	regs=80 stack=0 before 1: (b4) w7 = 0
	27: (63) *(u32 *)(r10 -40) = r1
	28: (18) r1 = 0x100000000000040
	; .lpm_key = { IPCACHE_PREFIX_LEN(prefix), {} },
	30: (7b) *(u64 *)(r10 -48) = r1
	31: (bf) r2 = r10
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	32: (07) r2 += -48
	; return map_lookup_elem(map, &key);
	33: (18) r1 = 0xffff700104950c00
	35: (85) call bpf_map_lookup_elem#1
	36: (79) r5 = *(u64 *)(r10 -96)
	; if (local_ep) {
	37: (15) if r8 == 0x0 goto pc+195
	 R0_w=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8_w=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=invP0 R10=fp0 fp-32_w=mmmmmmmm fp-40=mmmmmmmm fp-48_w=mmmmmmmm fp-96=ctx
	; .daddr = ip4->daddr,
	38: (61) r1 = *(u32 *)(r6 +30)
	; struct ipv4_ct_tuple tuple = {
	39: (63) *(u32 *)(r10 -88) = r1
	; .saddr = ip4->saddr
	40: (61) r1 = *(u32 *)(r6 +26)
	; struct ipv4_ct_tuple tuple = {
	41: (63) *(u32 *)(r10 -84) = r1
	42: (b4) w2 = 0
	43: (63) *(u32 *)(r10 -80) = r2
	last_idx 43 first_idx 23
	regs=4 stack=0 before 42: (b4) w2 = 0
	; .nexthdr = ip4->protocol,
	44: (71) r1 = *(u8 *)(r6 +23)
	; struct ipv4_ct_tuple tuple = {
	45: (73) *(u8 *)(r10 -75) = r2
	;
	46: (18) r3 = 0xffff7001044a2800
	48: (16) if w1 == 0x6 goto pc+2
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=invP0 R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0?0000 fp-88=mmmmmmmm fp-96=ctx
	49: (18) r3 = 0xffff7000ef1d5000
	; struct ipv4_ct_tuple tuple = {
	51: (73) *(u8 *)(r10 -76) = r1
	; return ip4->ihl * 4;
	52: (71) r9 = *(u8 *)(r6 +14)
	; return ip4->ihl * 4;
	53: (64) w9 <<= 2
	54: (54) w9 &= 60
	; ct_is_reply4(get_ct_map4(&tuple), ctx, ETH_HLEN +
	55: (04) w9 += 14
	; switch (tuple->nexthdr) {
	56: (16) if w1 == 0x11 goto pc+38
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9_w=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	57: (16) if w1 == 0x6 goto pc+37
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	58: (56) if w1 != 0x1 goto pc+174
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv1 R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	59: (bf) r6 = r3
	60: (b4) w1 = 0
	; __be16 identifier = 0;
	61: (6b) *(u16 *)(r10 -48) = r1
	last_idx 61 first_idx 57
	regs=2 stack=0 before 60: (b4) w1 = 0
	62: (bf) r3 = r10
	;
	63: (07) r3 += -72
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	64: (bf) r1 = r5
	65: (bc) w2 = w9
	66: (b4) w4 = 1
	67: (85) call bpf_skb_load_bytes#26
	last_idx 67 first_idx 57
	regs=10 stack=0 before 66: (b4) w4 = 1
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	68: (c6) if w0 s< 0x0 goto pc+163
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	69: (71) r3 = *(u8 *)(r10 -72)
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	70: (bc) w2 = w3
	71: (44) w2 |= 8
	72: (79) r1 = *(u64 *)(r10 -96)
	73: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=ctx(id=0,off=0,imm=0) R2_w=inv(id=0,umin_value=8,umax_value=255,var_off=(0x8; 0xf7)) R3_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	74: (05) goto pc+8
	; switch (type) {
	83: (b4) w2 = 0
	; tuple->dport = 0;
	84: (63) *(u32 *)(r10 -80) = r2
	last_idx 84 first_idx 68
	regs=4 stack=0 before 83: (b4) w2 = 0
	; switch (type) {
	85: (bf) r2 = r3
	86: (66) if w2 s> 0xa goto pc+46
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=ctx(id=0,off=0,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	87: (bf) r1 = r6
	88: (16) if w2 == 0x0 goto pc+51
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	89: (16) if w2 == 0x3 goto pc+46
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	90: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	91: (05) goto pc+135
	; if (err < 0)
	227: (b4) w2 = 1
	; tuple->flags = TUPLE_F_IN;
	228: (73) *(u8 *)(r10 -75) = r2
	229: (bf) r2 = r10
	;
	230: (07) r2 += -88
	; *is_reply = map_lookup_elem(map, tuple) != NULL;
	231: (85) call bpf_map_lookup_elem#1
	232: (79) r5 = *(u64 *)(r10 -96)
	233: (b7) r1 = 0
	; struct ipv4_ct_tuple tuple = {};
	234: (7b) *(u64 *)(r10 -88) = r1
	last_idx 234 first_idx 232
	regs=2 stack=0 before 233: (b7) r1 = 0
	235: (6b) *(u16 *)(r10 -76) = r7
	236: (63) *(u32 *)(r10 -80) = r7
	; return (void *)(unsigned long)ctx->data_end;
	237: (61) r2 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	238: (61) r8 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	239: (bf) r1 = r8
	240: (07) r1 += 34
	; if (data + tot_len > data_end)
	241: (2d) if r1 > r2 goto pc+251
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=pkt(id=0,off=34,r=34,imm=0) R2_w=pkt_end(id=0,off=0,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??000000 fp-88_w=00000000 fp-96=ctx
	242: (7b) *(u64 *)(r10 -104) = r2
	243: (b4) w7 = -158
	; return ip4->frag_off & bpf_htons(0x1FFF);
	244: (69) r6 = *(u16 *)(r8 +20)
	; tuple->nexthdr = ip4->protocol;
	245: (71) r1 = *(u8 *)(r8 +23)
	; tuple->nexthdr = ip4->protocol;
	246: (73) *(u8 *)(r10 -76) = r1
	; tuple->daddr = ip4->daddr;
	247: (61) r2 = *(u32 *)(r8 +30)
	; tuple->daddr = ip4->daddr;
	248: (63) *(u32 *)(r10 -88) = r2
	; tuple->saddr = ip4->saddr;
	249: (61) r3 = *(u32 *)(r8 +26)
	; tuple->saddr = ip4->saddr;
	250: (63) *(u32 *)(r10 -84) = r3
	; switch (tuple->nexthdr) {
	251: (16) if w1 == 0x1 goto pc+120
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5_w=ctx(id=0,off=0,imm=0) R6_w=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv4294967138 R8_w=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88_w=mmmmmmmm fp-96=ctx fp-104_w=pkt_end
	;
	252: (71) r7 = *(u8 *)(r8 +14)
	; switch (tuple->nexthdr) {
	253: (16) if w1 == 0x11 goto pc+1
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	254: (56) if w1 != 0x6 goto pc+29
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv6 R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; struct ipv4_frag_id frag_id = {
	255: (63) *(u32 *)(r10 -68) = r3
	256: (63) *(u32 *)(r10 -72) = r2
	; .id = ip4->id,
	257: (69) r2 = *(u16 *)(r8 +18)
	258: (b4) w3 = 0
	; struct ipv4_frag_id frag_id = {
	259: (73) *(u8 *)(r10 -61) = r3
	last_idx 259 first_idx 253
	regs=8 stack=0 before 258: (b4) w3 = 0
	260: (73) *(u8 *)(r10 -62) = r1
	261: (6b) *(u16 *)(r10 -64) = r2
	; return ip4->frag_off & bpf_htons(0x3FFF);
	262: (bc) w1 = w6
	263: (54) w1 &= 65343
	; if (unlikely(is_fragment)) {
	264: (16) if w1 == 0x0 goto pc+46
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=65343,var_off=(0x0; 0xff3f)) R2=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R3=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; return ctx->len;
	265: (61) r9 = *(u32 *)(r5 +0)
	266: (b7) r1 = 0
	; struct metrics_value *entry, new_entry = {};
	267: (7b) *(u64 *)(r10 -40) = r1
	last_idx 267 first_idx 264
	regs=2 stack=0 before 266: (b7) r1 = 0
	268: (7b) *(u64 *)(r10 -48) = r1
	269: (b7) r1 = 521
	; struct metrics_key key = {};
	270: (7b) *(u64 *)(r10 -56) = r1
	271: (bf) r2 = r10
	;
	272: (07) r2 += -56
	; entry = map_lookup_elem(&METRICS_MAP, &key);
	273: (18) r1 = 0xffff7000ac846c00
	275: (85) call bpf_map_lookup_elem#1
	; if (entry) {
	276: (15) if r0 == 0x0 goto pc+9
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; entry->count += 1;
	277: (79) r1 = *(u64 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	278: (07) r1 += 1
	279: (7b) *(u64 *)(r0 +0) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; entry->bytes += bytes;
	280: (79) r1 = *(u64 *)(r0 +8)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	281: (0f) r1 += r9
	282: (7b) *(u64 *)(r0 +8) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	283: (05) goto pc+13
	; return ip4->frag_off & bpf_htons(0x1FFF);
	297: (69) r1 = *(u16 *)(r8 +20)
	; return ip4->frag_off & bpf_htons(0x1FFF);
	298: (54) w1 &= 65311
	299: (79) r5 = *(u64 *)(r10 -96)
	; if (likely(not_first_fragment))
	300: (16) if w1 == 0x0 goto pc+10
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0,umax_value=65311,var_off=(0x0; 0xff1f)) R5_w=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	301: (bf) r2 = r10
	;
	302: (07) r2 += -72
	; tmp = map_lookup_elem(&IPV4_FRAG_DATAGRAMS_MAP, frag_id);
	303: (18) r1 = 0xffff7001044a2400
	305: (85) call bpf_map_lookup_elem#1
	; if (!tmp)
	306: (55) if r0 != 0x0 goto pc+637
	
	from 306 to 944: R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; case  4: __it_mob(d, s, 32);
	944: (61) r1 = *(u32 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	945: (63) *(u32 *)(r10 -80) = r1
	946: (05) goto pc-577
	; map_update_elem(&METRICS_MAP, &key, &new_entry, 0);
	370: (79) r5 = *(u64 *)(r10 -96)
	371: (b4) w7 = 0
	372: (54) w6 &= -225
	373: (b4) w1 = 1
	; if (IS_ERR(ret)) goto skip_crab;
	374: (16) if w7 == 0x2 goto pc+1
	last_idx 374 first_idx 306
	regs=80 stack=0 before 373: (b4) w1 = 1
	regs=80 stack=0 before 372: (54) w6 &= -225
	regs=80 stack=0 before 371: (b4) w7 = 0
	375: (b4) w1 = 0
	; return ip4->frag_off & bpf_htons(0x1FFF);
	376: (54) w6 &= 65535
	377: (79) r0 = *(u64 *)(r10 -104)
	; if (IS_ERR(ret)) goto skip_crab;
	378: (56) if w6 != 0x0 goto pc+114
	 R0_w=pkt_end(id=0,off=0,imm=0) R1=inv0 R5=ctx(id=0,off=0,imm=0) R6_w=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	;
	379: (bc) w2 = w7
	380: (74) w2 >>= 31
	381: (4c) w2 |= w1
	; if (IS_ERR(ret)) goto skip_crab;
	382: (56) if w2 != 0x0 goto pc+110
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	383: (71) r1 = *(u8 *)(r8 +23)
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	384: (56) if w1 != 0x6 goto pc+108
	 R0=pkt_end(id=0,off=0,imm=0) R1=inv6 R2=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	385: (07) r8 += 14
	; return ip4->ihl * 4;
	386: (71) r1 = *(u8 *)(r8 +0)
	; return ip4->ihl * 4;
	387: (64) w1 <<= 2
	388: (57) r1 &= 60
	; tcph = (struct tcphdr *)((void*)ip4 + ipv4_hdrlen(ip4));
	389: (0f) r8 += r1
	last_idx 389 first_idx 384
	regs=2 stack=0 before 388: (57) r1 &= 60
	regs=2 stack=0 before 387: (64) w1 <<= 2
	regs=2 stack=0 before 386: (71) r1 = *(u8 *)(r8 +0)
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	390: (bf) r9 = r8
	391: (07) r9 += 20
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	392: (2d) if r9 > r0 goto pc+100
	 R0=pkt_end(id=0,off=0,imm=0) R1_w=invP(id=0,umax_value=60,var_off=(0x0; 0x3c)) R2=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	393: (b4) w2 = 15
	;
	394: (61) r1 = *(u32 *)(r5 +80)
	; offset = tcph->doff * 4;
	395: (69) r3 = *(u16 *)(r8 +12)
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	396: (74) w3 >>= 2
	397: (54) w3 &= 60
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	398: (04) w3 += -20
	399: (05) goto pc+5
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=inv(id=0,umax_value=252,var_off=(0x0; 0xfc)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	last_idx 404 first_idx 464
	regs=4 stack=0 before 403: (04) w2 += -1
	regs=4 stack=0 before 402: (79) r5 = *(u64 *)(r10 -96)
	regs=4 stack=0 before 467: (05) goto pc-66
	regs=4 stack=0 before 466: (1c) w3 -= w4
	regs=4 stack=0 before 465: (0f) r9 += r4
	regs=4 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=8,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_r=pkt(id=8,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 451 first_idx 433
	regs=4 stack=0 before 451: (bd) if r4 <= r1 goto pc+12
	regs=4 stack=0 before 450: (07) r4 += 2
	regs=4 stack=0 before 449: (bf) r4 = r9
	regs=4 stack=0 before 436: (56) if w5 != 0x0 goto pc+12
	regs=4 stack=0 before 435: (16) if w5 == 0x2d goto pc+265
	regs=4 stack=0 before 434: (16) if w5 == 0x1 goto pc-35
	regs=4 stack=0 before 433: (71) r5 = *(u8 *)(r9 +0)
	 R0=pkt_end(id=0,off=0,imm=0) R1_r=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7_r=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9_r=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32_r=mmmmmmmm fp-40=00000000 fp-48_r=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104_r=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 421 first_idx 405
	regs=4 stack=0 before 421: (bd) if r4 <= r1 goto pc+11
	regs=4 stack=0 before 420: (07) r4 += 1
	regs=4 stack=0 before 419: (bf) r4 = r9
	regs=4 stack=0 before 407: (56) if w4 != 0x0 goto pc+11
	regs=4 stack=0 before 406: (54) w4 &= 255
	regs=4 stack=0 before 405: (bc) w4 = w3
	 R0=pkt_end(id=0,off=0,imm=0) R1_rw=pkt_end(id=0,off=0,imm=0) R2_rw=invP15 R3_rw=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R5_r=ctx(id=0,off=0,imm=0) R6=inv0 R7_r=invP0 R8_w=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_rw=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32_r=mmmmmmmm fp-40=00000000 fp-48_r=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104_r=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 399 first_idx 384
	regs=4 stack=0 before 399: (05) goto pc+5
	regs=4 stack=0 before 398: (04) w3 += -20
	regs=4 stack=0 before 397: (54) w3 &= 60
	regs=4 stack=0 before 396: (74) w3 >>= 2
	regs=4 stack=0 before 395: (69) r3 = *(u16 *)(r8 +12)
	regs=4 stack=0 before 394: (61) r1 = *(u32 *)(r5 +80)
	regs=4 stack=0 before 393: (b4) w2 = 15
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=0,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=19,off=36,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 449
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=0,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=36,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 451
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=0,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=36,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=0,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=36,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=0,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=36,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 419
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=0,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP9 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4=pkt(id=24,off=36,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=24,off=34,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=0,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=36,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=0,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=36,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=26,off=34,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=0,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=36,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=0,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=36,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 419
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=0,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP4 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4=pkt(id=29,off=36,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=29,off=34,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=0,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=36,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=0,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=36,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=31,off=34,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=0,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	
	from 435 to 701: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP1 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=inv45 R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	701: (bf) r2 = r9
	702: (07) r2 += 20
	703: (79) r5 = *(u64 *)(r10 -96)
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	704: (2d) if r2 > r0 goto pc-212
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=32,off=54,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	705: (71) r2 = *(u8 *)(r9 +18)
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	706: (56) if w2 != 0x0 goto pc+130
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=inv0 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	707: (b4) w7 = -134
	; return (void *)(unsigned long)ctx->data;
	708: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	709: (bf) r3 = r2
	710: (07) r3 += 34
	; if (data + tot_len > data_end)
	711: (2d) if r3 > r1 goto pc-219
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=pkt(id=0,off=0,r=34,imm=0) R3=pkt(id=0,off=34,r=34,imm=0) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=inv4294967162 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; masquerade_ip = ip4->saddr;
	712: (61) r1 = *(u32 *)(r2 +26)
	; masquerade_ip = ip4->saddr;
	713: (63) *(u32 *)(r10 -72) = r1
	; return ip4->ihl * 4;
	714: (71) r2 = *(u8 *)(r2 +14)
	; return ip4->ihl * 4;
	715: (64) w2 <<= 2
	716: (54) w2 &= 60
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	717: (04) w2 += 44
	718: (bf) r3 = r10
	; masquerade_ip = ip4->saddr;
	719: (07) r3 += -72
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	720: (bf) r1 = r5
	721: (b4) w4 = 4
	722: (b4) w5 = 0
	723: (85) call bpf_skb_store_bytes#9
	last_idx 723 first_idx 711
	regs=10 stack=0 before 722: (b4) w5 = 0
	regs=10 stack=0 before 721: (b4) w4 = 4
	724: (79) r5 = *(u64 *)(r10 -96)
	725: (b4) w7 = -141
	; if (ret < 0) return DROP_WRITE_ERROR;
	726: (c6) if w0 s< 0x0 goto pc-234
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7_w=inv4294967155 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	; return ctx->len;
	727: (61) r1 = *(u32 *)(r5 +0)
	; __u64 cap_len = min_t(__u64, monitor ? : TRACE_PAYLOAD_LEN,
	728: (bf) r3 = r1
	729: (a6) if w1 < 0x80 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=inv(id=34,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=34,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7_w=inv4294967155 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	730: (b7) r3 = 128
	731: (b7) r2 = 0
	; __notify_common_hdr(CILIUM_NOTIFY_TRACE, obs_point),
	732: (61) r4 = *(u32 *)(r5 +68)
	; msg = (typeof(msg)) {
	733: (73) *(u8 *)(r10 -14) = r2
	last_idx 733 first_idx 724
	regs=4 stack=0 before 732: (61) r4 = *(u32 *)(r5 +68)
	regs=4 stack=0 before 731: (b7) r2 = 0
	734: (73) *(u8 *)(r10 -15) = r2
	735: (73) *(u8 *)(r10 -16) = r2
	736: (73) *(u8 *)(r10 -17) = r2
	737: (73) *(u8 *)(r10 -18) = r2
	738: (73) *(u8 *)(r10 -19) = r2
	739: (73) *(u8 *)(r10 -20) = r2
	740: (73) *(u8 *)(r10 -6) = r2
	741: (73) *(u8 *)(r10 -7) = r2
	742: (73) *(u8 *)(r10 -8) = r2
	743: (73) *(u8 *)(r10 -9) = r2
	744: (73) *(u8 *)(r10 -10) = r2
	745: (73) *(u8 *)(r10 -11) = r2
	746: (73) *(u8 *)(r10 -12) = r2
	747: (73) *(u8 *)(r10 -13) = r2
	748: (b4) w2 = 327680
	749: (63) *(u32 *)(r10 -24) = r2
	750: (18) r2 = 0x246c
	752: (63) *(u32 *)(r10 -32) = r2
	753: (b4) w2 = 1
	754: (6b) *(u16 *)(r10 -34) = r2
	755: (63) *(u32 *)(r10 -40) = r1
	756: (63) *(u32 *)(r10 -44) = r4
	757: (b4) w1 = 1284
	758: (6b) *(u16 *)(r10 -48) = r1
	759: (6b) *(u16 *)(r10 -36) = r3
	760: (b4) w6 = 0
	761: (73) *(u8 *)(r10 -2) = r6
	last_idx 761 first_idx 724
	regs=40 stack=0 before 760: (b4) w6 = 0
	762: (73) *(u8 *)(r10 -3) = r6
	763: (73) *(u8 *)(r10 -4) = r6
	764: (73) *(u8 *)(r10 -5) = r6
	765: (63) *(u32 *)(r10 -28) = r6
	766: (18) r7 = 0x4ad
	768: (6b) *(u16 *)(r10 -46) = r7
	769: (73) *(u8 *)(r10 -1) = r6
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	770: (67) r3 <<= 32
	771: (18) r1 = 0xffffffff
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	773: (4f) r3 |= r1
	774: (bf) r4 = r10
	;
	775: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP,
	776: (bf) r1 = r5
	777: (18) r2 = 0xffff7000722cc800
	779: (b4) w5 = 48
	780: (85) call bpf_perf_event_output#25
	last_idx 780 first_idx 724
	regs=20 stack=0 before 779: (b4) w5 = 48
	781: (b4) w1 = 2
	; struct debug_msg msg = {
	782: (6b) *(u16 *)(r10 -48) = r1
	783: (6b) *(u16 *)(r10 -46) = r7
	784: (b4) w1 = 50
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	785: (79) r2 = *(u64 *)(r10 -96)
	786: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	787: (63) *(u32 *)(r10 -32) = r1
	788: (18) r1 = 0x3200000032
	790: (7b) *(u64 *)(r10 -40) = r1
	791: (63) *(u32 *)(r10 -44) = r2
	792: (bf) r4 = r10
	;
	793: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	794: (79) r1 = *(u64 *)(r10 -96)
	795: (18) r2 = 0xffff7000722cc800
	797: (18) r3 = 0xffffffff
	799: (b4) w5 = 20
	800: (85) call bpf_perf_event_output#25
	last_idx 800 first_idx 781
	regs=20 stack=0 before 799: (b4) w5 = 20
	; cilium_dbg3(ctx, DBG_CT_LOOKUP4_1, masquerade_ip, masquerade_ip,
	801: (61) r1 = *(u32 *)(r10 -72)
	; struct debug_msg msg = {
	802: (6b) *(u16 *)(r10 -46) = r7
	803: (b4) w2 = 12290
	804: (6b) *(u16 *)(r10 -48) = r2
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	805: (79) r2 = *(u64 *)(r10 -96)
	806: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	807: (63) *(u32 *)(r10 -32) = r6
	808: (63) *(u32 *)(r10 -36) = r1
	809: (63) *(u32 *)(r10 -40) = r1
	810: (63) *(u32 *)(r10 -44) = r2
	811: (bf) r4 = r10
	;
	812: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	813: (79) r1 = *(u64 *)(r10 -96)
	814: (18) r2 = 0xffff7000722cc800
	816: (18) r3 = 0xffffffff
	818: (b4) w5 = 20
	819: (85) call bpf_perf_event_output#25
	last_idx 819 first_idx 781
	regs=20 stack=0 before 818: (b4) w5 = 20
	820: (79) r5 = *(u64 *)(r10 -96)
	; return (void *)(unsigned long)ctx->data_end;
	821: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	822: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	823: (07) r2 += 34
	824: (b4) w7 = -134
	; if (data + tot_len > data_end)
	825: (2d) if r2 > r1 goto pc-333
	 R0=inv(id=0) R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=invP0 R7_w=inv4294967162 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmmmmmm fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	; &redir_opt->ip1, 4, 0);
	826: (07) r9 += 2
	; ret = ctx_store_bytes(ctx, ETH_HLEN + offsetof(struct iphdr, saddr),
	827: (bf) r1 = r5
	828: (b4) w2 = 26
	829: (bf) r3 = r9
	830: (b4) w4 = 4
	831: (b4) w5 = 0
	832: (85) call bpf_skb_store_bytes#9
	R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf
	processed 1623 insns (limit 1000000) max_states_per_insn 3 total_states 55 peak_states 55 mark_read 27
level=warning msg="JoinEP: Failed to attach program(s)" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" file-path=1197_next/bpf_lxc.o identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=datapath-loader veth=lxc102a8ca64051
level=error msg="Error while rewriting endpoint BPF program" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Reverting endpoint changes after BPF regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Reverting proxy redirect removals" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Finished reverting proxy redirect removals" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Reverting xDS network policy update" subsys=envoy-manager
level=debug msg="preparing new cache transaction: upserting 0 entries, deleting 1 entries" subsys=xds xdsCachedVersion=17 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="deleting resource from cache" subsys=xds xdsCachedVersion=17 xdsResourceName=1197 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="committing cache transaction and notifying of new version" subsys=xds xdsCachedVersion=17 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="Finished reverting xDS network policy update" subsys=envoy-manager
level=debug msg="Reverting proxy redirect additions" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Finished reverting proxy redirect additions" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Finished reverting endpoint changes after BPF regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=info msg="Wrote verifier log to endpoint directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 file-path=1197_next/verifier.log identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=info msg="generating BPF for endpoint failed, keeping stale directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" file-path=1197_next_fail identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="removing directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 directory=1197_next_fail endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="removing directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 directory=1197_next endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Completed endpoint regeneration with no pending regeneration requests" code=OK containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=ready identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=0
level=warning msg="Regeneration of endpoint failed" bpfCompilation=0s bpfLoadProg=8.199667ms bpfWaitForELF="3.833µs" bpfWriteELF="742.417µs" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh mapSync="15.5µs" policyCalculation="20.417µs" prepareBuild="246.624µs" proxyConfiguration="6.916µs" proxyPolicyCalculation="32.959µs" proxyWaitForAck=0s reason="retrying regeneration" subsys=endpoint total=11.645958ms waitingForCTClean="491.125µs" waitingForLock="1.001µs"
level=debug msg="Error regenerating endpoint: loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" code=Failure containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=ready identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=200
level=debug msg="EventQueue event processing statistics" eventConsumeOffQueueWaitTime="11.25µs" eventEnqueueWaitTime="5.875µs" eventHandlingDuration=11.732709ms eventType="*endpoint.EndpointRegenerationEvent" name=endpoint-1197 subsys=eventqueue
level=error msg="endpoint regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Controller func execution time: 11.895916ms" name=endpoint-1197-regeneration-recovery subsys=controller uuid=8ad41e88-742f-451d-9f1b-b8a945514606
level=debug msg="Controller run failed" consecutiveErrors=5 error="regeneration recovery failed" name=endpoint-1197-regeneration-recovery subsys=controller uuid=8ad41e88-742f-451d-9f1b-b8a945514606
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Skipping CiliumEndpoint update because it has no k8s pod name" containerID= controller="sync-to-k8s-ciliumendpoint (317)" datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpointsynchronizer
level=debug msg="Controller func execution time: 59.042µs" name="sync-to-k8s-ciliumendpoint (317)" subsys=controller uuid=bb1e5172-6dc8-48cd-aba8-7e6f05e59668
level=debug msg="received signal that regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Triggering endpoint regeneration due to retrying regeneration" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=waiting-to-regenerate identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="Dequeued endpoint from build queue" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Regenerating endpoint" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ reason="retrying regeneration" startTime="2023-07-12 21:57:09.789863088 +0000 UTC m=+33.155048599" subsys=endpoint
level=debug msg="Regenerating endpoint: retrying regeneration" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=regenerating identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=317_next endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Starting policy recalculation..." containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Skipping unnecessary endpoint policy recalculation" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ policyChanged=true policyRevision.next=1 policyRevision.repo=1 subsys=endpoint
level=debug msg="Endpoint has no IP addresses" endpointID=317 subsys=envoy-manager
level=debug msg="BPF header file hashed (was: \"\")" bpfHeaderfileHash=0f5fa9a0ac774df439d9f3dc0bdbff52d824f5c229dffe9c8ab4b3a39b7c2977 containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="writing header file" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/ep_config.h identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="writing header file with DNSRules" DNSRules="map[]" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/ep_config.h identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Preparing to compile BPF" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ regeneration-level=rewrite+load subsys=endpoint
level=debug msg="Load 1-min: 4.75 5-min: 2.53 15min: 2.05" endpointID=317 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2483 (63.13%) Free: 69 Buffers: 28 Cached: 1352" endpointID=317 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1016 (99.32%) Free: 7" endpointID=317 subsys=endpoint
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_65535
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_65535
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 4.23% MEM: 2.40% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 94 VMS: 850 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_host.o subsys=elf template-path=/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e/bpf_host.o
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_00317
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_00317
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_host_cilium_net.o subsys=elf template-path=317_next/bpf_host.o
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_00317
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_00317
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_netdev_eth0.o subsys=elf template-path=317_next/bpf_host.o
level=debug msg="Loading CollectionSpec from ELF" device=cilium_host ifindex=5 objPath=317_next/bpf_host.o subsys=datapath-loader
level=debug msg="Loading Collection into kernel" device=cilium_host ifindex=5 objPath=317_next/bpf_host.o subsys=datapath-loader
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
Verifier error: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)
Verifier log: load program: permission denied:
	btf_vmlinux is malformed
	R1 type=ctx expected=fp
	; int tail_handle_snat_fwd_ipv4(struct __ctx_buff *ctx)
	0: (bf) r5 = r1
	1: (b4) w9 = 0
	; ctx->cb[off] = data;
	2: (63) *(u32 *)(r5 +52) = r9
	; return (void *)(unsigned long)ctx->data_end;
	3: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	4: (61) r6 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	5: (bf) r2 = r6
	6: (07) r2 += 34
	; __s8 ext_err = 0;
	7: (b4) w7 = 0
	8: (b4) w4 = 0
	9: (7b) *(u64 *)(r10 -152) = r5
	; if (data + tot_len > data_end)
	10: (2d) if r2 > r1 goto pc+7173
	 R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	;
	11: (61) r1 = *(u32 *)(r6 +26)
	; if (DIRECT_ROUTING_DEV_IFINDEX == NATIVE_DEV_IFINDEX &&
	12: (56) if w1 != 0x20015ac goto pc+3
	 R1_w=inv33559980 R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	13: (18) r2 = 0x0
	15: (16) if w2 == 0x41 goto pc+85
	last_idx 15 first_idx 15
	 R1_w=inv33559980 R2_rw=invP0 R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	parent didn't have regs=4 stack=0 marks
	last_idx 13 first_idx 0
	regs=4 stack=0 before 13: (18) r2 = 0x0
	; key.ip4 = ip;
	16: (63) *(u32 *)(r10 -64) = r1
	17: (b7) r7 = 0
	; struct endpoint_key key = {};
	18: (63) *(u32 *)(r10 -48) = r7
	last_idx 18 first_idx 15
	regs=80 stack=0 before 17: (b7) r7 = 0
	19: (63) *(u32 *)(r10 -52) = r7
	20: (63) *(u32 *)(r10 -56) = r7
	21: (63) *(u32 *)(r10 -60) = r7
	22: (b4) w1 = 1
	; key.family = ENDPOINT_KEY_IPV4;
	23: (73) *(u8 *)(r10 -48) = r1
	24: (bf) r2 = r10
	;
	25: (07) r2 += -64
	; return map_lookup_elem(&ENDPOINTS_MAP, &key);
	26: (18) r1 = 0xffff700159c9b400
	28: (85) call bpf_map_lookup_elem#1
	29: (bf) r8 = r0
	; remote_ep = lookup_ip4_remote_endpoint(ip4->daddr, 0);
	30: (61) r1 = *(u32 *)(r6 +30)
	; .ip4 = addr,
	31: (7b) *(u64 *)(r10 -48) = r7
	32: (63) *(u32 *)(r10 -56) = r1
	33: (18) r1 = 0x100000000000040
	; .lpm_key = { IPCACHE_PREFIX_LEN(prefix), {} },
	35: (7b) *(u64 *)(r10 -64) = r1
	36: (b4) w7 = 0
	; .ip4 = addr,
	37: (63) *(u32 *)(r10 -52) = r7
	last_idx 37 first_idx 29
	regs=80 stack=0 before 36: (b4) w7 = 0
	38: (bf) r2 = r10
	;
	39: (07) r2 += -64
	; return map_lookup_elem(map, &key);
	40: (18) r1 = 0xffff700104950c00
	42: (85) call bpf_map_lookup_elem#1
	43: (79) r5 = *(u64 *)(r10 -152)
	44: (b4) w4 = 0
	; if (local_ep) {
	45: (15) if r8 == 0x0 goto pc+7138
	 R0_w=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=invP0 R8_w=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv0 R10=fp0 fp-48_w=mmmmmmmm fp-56=mmmmmmmm fp-64_w=mmmmmmmm fp-152=ctx
	; .daddr = ip4->daddr,
	46: (61) r1 = *(u32 *)(r6 +30)
	; struct ipv4_ct_tuple tuple = {
	47: (63) *(u32 *)(r10 -128) = r1
	; .saddr = ip4->saddr
	48: (61) r1 = *(u32 *)(r6 +26)
	; struct ipv4_ct_tuple tuple = {
	49: (63) *(u32 *)(r10 -124) = r1
	50: (b4) w2 = 0
	51: (63) *(u32 *)(r10 -120) = r2
	last_idx 51 first_idx 29
	regs=4 stack=0 before 50: (b4) w2 = 0
	; .nexthdr = ip4->protocol,
	52: (71) r1 = *(u8 *)(r6 +23)
	; struct ipv4_ct_tuple tuple = {
	53: (73) *(u8 *)(r10 -115) = r2
	;
	54: (18) r7 = 0xffff7001044a2800
	56: (16) if w1 == 0x6 goto pc+2
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0?0000 fp-128=mmmmmmmm fp-152=ctx
	57: (18) r7 = 0xffff7000ef1d5000
	; struct ipv4_ct_tuple tuple = {
	59: (73) *(u8 *)(r10 -116) = r1
	; return ip4->ihl * 4;
	60: (71) r8 = *(u8 *)(r6 +14)
	; return ip4->ihl * 4;
	61: (64) w8 <<= 2
	62: (54) w8 &= 60
	; ct_is_reply4(get_ct_map4(&tuple), ctx, ETH_HLEN +
	63: (04) w8 += 14
	; switch (tuple->nexthdr) {
	64: (16) if w1 == 0x11 goto pc+114
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8_w=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	65: (16) if w1 == 0x6 goto pc+113
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	66: (56) if w1 != 0x1 goto pc+6938
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv1 R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	67: (b4) w1 = 0
	; __be16 identifier = 0;
	68: (6b) *(u16 *)(r10 -64) = r1
	last_idx 68 first_idx 65
	regs=2 stack=0 before 67: (b4) w1 = 0
	69: (bf) r3 = r10
	;
	70: (07) r3 += -80
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	71: (bf) r1 = r5
	72: (bc) w2 = w8
	73: (b4) w4 = 1
	74: (85) call bpf_skb_load_bytes#26
	last_idx 74 first_idx 65
	regs=10 stack=0 before 73: (b4) w4 = 1
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	75: (c6) if w0 s< 0x0 goto pc+6928
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	76: (71) r3 = *(u8 *)(r10 -80)
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	77: (bc) w2 = w3
	78: (44) w2 |= 8
	79: (79) r1 = *(u64 *)(r10 -152)
	80: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=ctx(id=0,off=0,imm=0) R2_w=inv(id=0,umin_value=8,umax_value=255,var_off=(0x8; 0xf7)) R3_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	81: (05) goto pc+8
	; switch (type) {
	90: (b4) w2 = 0
	; tuple->dport = 0;
	91: (63) *(u32 *)(r10 -120) = r2
	last_idx 91 first_idx 75
	regs=4 stack=0 before 90: (b4) w2 = 0
	; switch (type) {
	92: (bf) r1 = r3
	93: (66) if w1 s> 0xa goto pc+6400
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	94: (16) if w1 == 0x0 goto pc+6512
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	95: (16) if w1 == 0x3 goto pc+6400
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	96: (16) if w1 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	97: (05) goto pc+6900
	; if (err < 0)
	6998: (b4) w1 = 1
	; tuple->flags = TUPLE_F_IN;
	6999: (73) *(u8 *)(r10 -115) = r1
	7000: (bf) r2 = r10
	;
	7001: (07) r2 += -128
	; *is_reply = map_lookup_elem(map, tuple) != NULL;
	7002: (bf) r1 = r7
	7003: (85) call bpf_map_lookup_elem#1
	7004: (79) r5 = *(u64 *)(r10 -152)
	7005: (b4) w7 = 0
	7006: (b4) w4 = 0
	7007: (05) goto pc+175
	; if (ret == NAT_PUNT_TO_STACK)
	7183: (b4) w9 = 0
	; struct ipv4_ct_tuple tuple = {};
	7184: (6b) *(u16 *)(r10 -116) = r9
	last_idx 7184 first_idx 7004
	regs=200 stack=0 before 7183: (b4) w9 = 0
	7185: (63) *(u32 *)(r10 -120) = r9
	7186: (b7) r1 = 0
	7187: (7b) *(u64 *)(r10 -128) = r1
	last_idx 7187 first_idx 7004
	regs=2 stack=0 before 7186: (b7) r1 = 0
	; return (void *)(unsigned long)ctx->data_end;
	7188: (61) r2 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	7189: (61) r8 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	7190: (bf) r1 = r8
	7191: (07) r1 += 34
	; if (data + tot_len > data_end)
	7192: (2d) if r1 > r2 goto pc+854
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=pkt(id=0,off=34,r=34,imm=0) R2_w=pkt_end(id=0,off=0,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9_w=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??000000 fp-128_w=00000000 fp-152=ctx
	7193: (7b) *(u64 *)(r10 -160) = r2
	7194: (b4) w4 = -158
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7195: (69) r6 = *(u16 *)(r8 +20)
	; tuple->nexthdr = ip4->protocol;
	7196: (71) r1 = *(u8 *)(r8 +23)
	; tuple->nexthdr = ip4->protocol;
	7197: (73) *(u8 *)(r10 -116) = r1
	; tuple->daddr = ip4->daddr;
	7198: (61) r2 = *(u32 *)(r8 +30)
	; tuple->daddr = ip4->daddr;
	7199: (63) *(u32 *)(r10 -128) = r2
	; tuple->saddr = ip4->saddr;
	7200: (61) r3 = *(u32 *)(r8 +26)
	; tuple->saddr = ip4->saddr;
	7201: (63) *(u32 *)(r10 -124) = r3
	; switch (tuple->nexthdr) {
	7202: (16) if w1 == 0x1 goto pc+732
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv0 R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end
	7203: (63) *(u32 *)(r10 -168) = r7
	last_idx 7203 first_idx 7202
	regs=80 stack=0 before 7202: (16) if w1 == 0x1 goto pc+732
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_rw=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4_w=inv4294967138 R5_w=ctx(id=0,off=0,imm=0) R6_w=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_rw=invP0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9_w=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128_w=mmmmmmmm fp-152=ctx fp-160_w=pkt_end
	parent didn't have regs=80 stack=0 marks
	last_idx 7201 first_idx 7004
	regs=80 stack=0 before 7201: (63) *(u32 *)(r10 -124) = r3
	regs=80 stack=0 before 7200: (61) r3 = *(u32 *)(r8 +26)
	regs=80 stack=0 before 7199: (63) *(u32 *)(r10 -128) = r2
	regs=80 stack=0 before 7198: (61) r2 = *(u32 *)(r8 +30)
	regs=80 stack=0 before 7197: (73) *(u8 *)(r10 -116) = r1
	regs=80 stack=0 before 7196: (71) r1 = *(u8 *)(r8 +23)
	regs=80 stack=0 before 7195: (69) r6 = *(u16 *)(r8 +20)
	regs=80 stack=0 before 7194: (b4) w4 = -158
	regs=80 stack=0 before 7193: (7b) *(u64 *)(r10 -160) = r2
	regs=80 stack=0 before 7192: (2d) if r1 > r2 goto pc+854
	regs=80 stack=0 before 7191: (07) r1 += 34
	regs=80 stack=0 before 7190: (bf) r1 = r8
	regs=80 stack=0 before 7189: (61) r8 = *(u32 *)(r5 +76)
	regs=80 stack=0 before 7188: (61) r2 = *(u32 *)(r5 +80)
	regs=80 stack=0 before 7187: (7b) *(u64 *)(r10 -128) = r1
	regs=80 stack=0 before 7186: (b7) r1 = 0
	regs=80 stack=0 before 7185: (63) *(u32 *)(r10 -120) = r9
	regs=80 stack=0 before 7184: (6b) *(u16 *)(r10 -116) = r9
	regs=80 stack=0 before 7183: (b4) w9 = 0
	regs=80 stack=0 before 7007: (05) goto pc+175
	regs=80 stack=0 before 7006: (b4) w4 = 0
	regs=80 stack=0 before 7005: (b4) w7 = 0
	;
	7204: (71) r7 = *(u8 *)(r8 +14)
	; switch (tuple->nexthdr) {
	7205: (16) if w1 == 0x11 goto pc+1
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7206: (56) if w1 != 0x6 goto pc+29
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv6 R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; struct ipv4_frag_id frag_id = {
	7207: (63) *(u32 *)(r10 -76) = r3
	7208: (63) *(u32 *)(r10 -80) = r2
	; .id = ip4->id,
	7209: (69) r2 = *(u16 *)(r8 +18)
	7210: (b4) w3 = 0
	; struct ipv4_frag_id frag_id = {
	7211: (73) *(u8 *)(r10 -69) = r3
	last_idx 7211 first_idx 7202
	regs=8 stack=0 before 7210: (b4) w3 = 0
	7212: (73) *(u8 *)(r10 -70) = r1
	7213: (6b) *(u16 *)(r10 -72) = r2
	; return ip4->frag_off & bpf_htons(0x3FFF);
	7214: (bc) w1 = w6
	7215: (54) w1 &= 65343
	; if (unlikely(is_fragment)) {
	7216: (16) if w1 == 0x0 goto pc+654
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=65343,var_off=(0x0; 0xff3f)) R2=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R3=invP0 R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; return ctx->len;
	7217: (61) r9 = *(u32 *)(r5 +0)
	7218: (b7) r1 = 0
	; struct metrics_value *entry, new_entry = {};
	7219: (7b) *(u64 *)(r10 -56) = r1
	last_idx 7219 first_idx 7216
	regs=2 stack=0 before 7218: (b7) r1 = 0
	7220: (7b) *(u64 *)(r10 -64) = r1
	7221: (b7) r1 = 521
	; struct metrics_key key = {};
	7222: (7b) *(u64 *)(r10 -144) = r1
	7223: (bf) r2 = r10
	;
	7224: (07) r2 += -144
	; entry = map_lookup_elem(&METRICS_MAP, &key);
	7225: (18) r1 = 0xffff7000ac846c00
	7227: (85) call bpf_map_lookup_elem#1
	; if (entry) {
	7228: (15) if r0 == 0x0 goto pc+616
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; entry->count += 1;
	7229: (79) r1 = *(u64 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7230: (07) r1 += 1
	7231: (7b) *(u64 *)(r0 +0) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; entry->bytes += bytes;
	7232: (79) r1 = *(u64 *)(r0 +8)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7233: (0f) r1 += r9
	7234: (7b) *(u64 *)(r0 +8) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7235: (05) goto pc+620
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7856: (69) r1 = *(u16 *)(r8 +20)
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7857: (54) w1 &= 65311
	7858: (79) r5 = *(u64 *)(r10 -152)
	; if (likely(not_first_fragment))
	7859: (16) if w1 == 0x0 goto pc+11
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0,umax_value=65311,var_off=(0x0; 0xff1f)) R5_w=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7860: (bf) r2 = r10
	;
	7861: (07) r2 += -80
	; tmp = map_lookup_elem(&IPV4_FRAG_DATAGRAMS_MAP, frag_id);
	7862: (18) r1 = 0xffff7001044a2400
	7864: (85) call bpf_map_lookup_elem#1
	; if (!tmp)
	7865: (55) if r0 != 0x0 goto pc+548
	
	from 7865 to 8414: R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; case  4: __it_mob(d, s, 32);
	8414: (61) r1 = *(u32 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	8415: (63) *(u32 *)(r10 -120) = r1
	8416: (05) goto pc-485
	; map_update_elem(&METRICS_MAP, &key, &new_entry, 0);
	7932: (79) r5 = *(u64 *)(r10 -152)
	7933: (61) r7 = *(u32 *)(r10 -168)
	7934: (b4) w4 = 0
	7935: (54) w6 &= -225
	7936: (b4) w1 = 1
	; if (IS_ERR(ret)) goto skip_crab;
	7937: (16) if w4 == 0x2 goto pc+1
	last_idx 7937 first_idx 8414
	regs=10 stack=0 before 7936: (b4) w1 = 1
	regs=10 stack=0 before 7935: (54) w6 &= -225
	regs=10 stack=0 before 7934: (b4) w4 = 0
	7938: (b4) w1 = 0
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7939: (54) w6 &= 65535
	7940: (79) r0 = *(u64 *)(r10 -160)
	; if (IS_ERR(ret)) goto skip_crab;
	7941: (56) if w6 != 0x0 goto pc+105
	 R0_w=pkt_end(id=0,off=0,imm=0) R1=inv0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6_w=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	;
	7942: (bc) w2 = w4
	7943: (74) w2 >>= 31
	7944: (4c) w2 |= w1
	; if (IS_ERR(ret)) goto skip_crab;
	7945: (56) if w2 != 0x0 goto pc+101
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	7946: (71) r1 = *(u8 *)(r8 +23)
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	7947: (56) if w1 != 0x6 goto pc+99
	 R0=pkt_end(id=0,off=0,imm=0) R1=inv6 R2=invP0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7948: (07) r8 += 14
	; return ip4->ihl * 4;
	7949: (71) r1 = *(u8 *)(r8 +0)
	; return ip4->ihl * 4;
	7950: (64) w1 <<= 2
	7951: (57) r1 &= 60
	; tcph = (struct tcphdr *)((void*)ip4 + ipv4_hdrlen(ip4));
	7952: (0f) r8 += r1
	last_idx 7952 first_idx 7947
	regs=2 stack=0 before 7951: (57) r1 &= 60
	regs=2 stack=0 before 7950: (64) w1 <<= 2
	regs=2 stack=0 before 7949: (71) r1 = *(u8 *)(r8 +0)
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	7953: (bf) r9 = r8
	7954: (07) r9 += 20
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	7955: (2d) if r9 > r0 goto pc+91
	 R0=pkt_end(id=0,off=0,imm=0) R1_w=invP(id=0,umax_value=60,var_off=(0x0; 0x3c)) R2=invP0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=9,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7956: (b4) w2 = 15
	;
	7957: (61) r1 = *(u32 *)(r5 +80)
	; offset = tcph->doff * 4;
	7958: (69) r3 = *(u16 *)(r8 +12)
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	7959: (74) w3 >>= 2
	7960: (54) w3 &= 60
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	7961: (04) w3 += -20
	7962: (05) goto pc+6
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=inv(id=0,umax_value=252,var_off=(0x0; 0xfc)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	last_idx 7968 first_idx 8017
	regs=4 stack=0 before 7967: (bc) w4 = w8
	regs=4 stack=0 before 7966: (04) w2 += -1
	regs=4 stack=0 before 7965: (79) r5 = *(u64 *)(r10 -152)
	regs=4 stack=0 before 8020: (05) goto pc-56
	regs=4 stack=0 before 8019: (1c) w3 -= w4
	regs=4 stack=0 before 8018: (0f) r9 += r4
	regs=4 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=9,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_r=invP0 R9_r=pkt(id=9,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 8007 first_idx 7992
	regs=4 stack=0 before 8007: (bd) if r4 <= r1 goto pc+9
	regs=4 stack=0 before 8006: (07) r4 += 2
	regs=4 stack=0 before 8005: (bf) r4 = r9
	regs=4 stack=0 before 7995: (56) if w5 != 0x0 goto pc+9
	regs=4 stack=0 before 7994: (16) if w5 == 0x2d goto pc+218
	regs=4 stack=0 before 7993: (16) if w5 == 0x1 goto pc-31
	regs=4 stack=0 before 7992: (71) r5 = *(u8 *)(r9 +0)
	 R0=pkt_end(id=0,off=0,imm=0) R1_r=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_rw=invP0 R9_r=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48_r=mmmmmmmm fp-56=00000000 fp-64_r=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160_r=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 7983 first_idx 7969
	regs=4 stack=0 before 7983: (bd) if r4 <= r1 goto pc+8
	regs=4 stack=0 before 7982: (07) r4 += 1
	regs=4 stack=0 before 7981: (bf) r4 = r9
	regs=4 stack=0 before 7972: (56) if w4 != 0x0 goto pc+8
	regs=4 stack=0 before 7971: (54) w4 &= 255
	regs=4 stack=0 before 7970: (bc) w4 = w3
	regs=4 stack=0 before 7969: (bc) w8 = w4
	 R0=pkt_end(id=0,off=0,imm=0) R1_rw=pkt_end(id=0,off=0,imm=0) R2_rw=invP15 R3_rw=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_r=invP0 R5_r=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=9,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_rw=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48_r=mmmmmmmm fp-56=00000000 fp-64_r=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160_r=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 7962 first_idx 7947
	regs=4 stack=0 before 7962: (05) goto pc+6
	regs=4 stack=0 before 7961: (04) w3 += -20
	regs=4 stack=0 before 7960: (54) w3 &= 60
	regs=4 stack=0 before 7959: (74) w3 >>= 2
	regs=4 stack=0 before 7958: (69) r3 = *(u16 *)(r8 +12)
	regs=4 stack=0 before 7957: (61) r1 = *(u32 *)(r5 +80)
	regs=4 stack=0 before 7956: (b4) w2 = 15
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=0,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=20,off=36,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8005
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=21,off=34,r=0,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=36,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8007
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=0,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=36,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=22,off=34,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=0,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=36,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=0,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=36,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7981
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=0,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP9 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4=pkt(id=25,off=36,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=25,off=34,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=0,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=36,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=0,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=36,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=27,off=34,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=0,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=36,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=0,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=36,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7981
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=0,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP4 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4=pkt(id=30,off=36,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=30,off=34,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=0,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=36,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=0,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=36,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=32,off=34,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=0,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	
	from 7994 to 8213: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP1 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=inv45 R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	8213: (bf) r2 = r9
	8214: (07) r2 += 20
	8215: (79) r5 = *(u64 *)(r10 -152)
	8216: (bc) w4 = w8
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	8217: (2d) if r2 > r0 goto pc-171
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=33,off=54,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=invP0 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	8218: (71) r2 = *(u8 *)(r9 +18)
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	8219: (56) if w2 != 0x0 goto pc+107
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=inv0 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=invP0 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	8220: (b4) w4 = -134
	; return (void *)(unsigned long)ctx->data;
	8221: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	8222: (bf) r3 = r2
	8223: (07) r3 += 34
	; if (data + tot_len > data_end)
	8224: (2d) if r3 > r1 goto pc-178
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=pkt(id=0,off=0,r=34,imm=0) R3=pkt(id=0,off=34,r=34,imm=0) R4=inv4294967162 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; masquerade_ip = ip4->saddr;
	8225: (61) r1 = *(u32 *)(r2 +26)
	; masquerade_ip = ip4->saddr;
	8226: (63) *(u32 *)(r10 -80) = r1
	; return ip4->ihl * 4;
	8227: (71) r2 = *(u8 *)(r2 +14)
	; return ip4->ihl * 4;
	8228: (64) w2 <<= 2
	8229: (54) w2 &= 60
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	8230: (04) w2 += 44
	8231: (bf) r3 = r10
	; masquerade_ip = ip4->saddr;
	8232: (07) r3 += -80
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	8233: (bf) r1 = r5
	8234: (b4) w4 = 4
	8235: (b4) w5 = 0
	8236: (85) call bpf_skb_store_bytes#9
	last_idx 8236 first_idx 8224
	regs=10 stack=0 before 8235: (b4) w5 = 0
	regs=10 stack=0 before 8234: (b4) w4 = 4
	8237: (79) r5 = *(u64 *)(r10 -152)
	8238: (b4) w4 = -141
	; if (ret < 0) return DROP_WRITE_ERROR;
	8239: (c6) if w0 s< 0x0 goto pc-193
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R4_w=inv4294967155 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	; return ctx->len;
	8240: (61) r1 = *(u32 *)(r5 +0)
	; __u64 cap_len = min_t(__u64, monitor ? : TRACE_PAYLOAD_LEN,
	8241: (bf) r3 = r1
	8242: (a6) if w1 < 0x80 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=inv(id=35,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=35,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4_w=inv4294967155 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	8243: (b7) r3 = 128
	; __notify_common_hdr(CILIUM_NOTIFY_TRACE, obs_point),
	8244: (61) r2 = *(u32 *)(r5 +68)
	8245: (b7) r4 = 327680
	; msg = (typeof(msg)) {
	8246: (7b) *(u64 *)(r10 -40) = r4
	8247: (18) r4 = 0x1
	8249: (63) *(u32 *)(r10 -48) = r4
	8250: (b4) w4 = 1
	8251: (6b) *(u16 *)(r10 -50) = r4
	8252: (63) *(u32 *)(r10 -56) = r1
	8253: (63) *(u32 *)(r10 -60) = r2
	8254: (b4) w1 = 20776196
	8255: (63) *(u32 *)(r10 -64) = r1
	8256: (b7) r1 = 0
	; case  8: jmp_8:  __it_set(d, 64);
	8257: (7b) *(u64 *)(r10 -32) = r1
	last_idx 8257 first_idx 8237
	regs=2 stack=0 before 8256: (b7) r1 = 0
	8258: (7b) *(u64 *)(r10 -24) = r1
	; msg = (typeof(msg)) {
	8259: (6b) *(u16 *)(r10 -52) = r3
	8260: (b4) w6 = 0
	8261: (63) *(u32 *)(r10 -44) = r6
	last_idx 8261 first_idx 8237
	regs=40 stack=0 before 8260: (b4) w6 = 0
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	8262: (67) r3 <<= 32
	8263: (18) r1 = 0xffffffff
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	8265: (4f) r3 |= r1
	8266: (bf) r4 = r10
	;
	8267: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP,
	8268: (bf) r1 = r5
	8269: (18) r2 = 0xffff7000722cc800
	8271: (b4) w5 = 48
	8272: (85) call bpf_perf_event_output#25
	last_idx 8272 first_idx 8237
	regs=20 stack=0 before 8271: (b4) w5 = 48
	8273: (b4) w1 = 20774914
	; struct debug_msg msg = {
	8274: (63) *(u32 *)(r10 -64) = r1
	8275: (b4) w1 = 50
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	8276: (79) r2 = *(u64 *)(r10 -152)
	8277: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	8278: (63) *(u32 *)(r10 -48) = r1
	8279: (18) r1 = 0x3200000032
	8281: (7b) *(u64 *)(r10 -56) = r1
	8282: (63) *(u32 *)(r10 -60) = r2
	8283: (bf) r4 = r10
	;
	8284: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	8285: (79) r1 = *(u64 *)(r10 -152)
	8286: (18) r2 = 0xffff7000722cc800
	8288: (18) r3 = 0xffffffff
	8290: (b4) w5 = 20
	8291: (85) call bpf_perf_event_output#25
	last_idx 8291 first_idx 8273
	regs=20 stack=0 before 8290: (b4) w5 = 20
	; cilium_dbg3(ctx, DBG_CT_LOOKUP4_1, masquerade_ip, masquerade_ip,
	8292: (61) r1 = *(u32 *)(r10 -80)
	8293: (b4) w2 = 20787202
	; struct debug_msg msg = {
	8294: (63) *(u32 *)(r10 -64) = r2
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	8295: (79) r2 = *(u64 *)(r10 -152)
	8296: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	8297: (63) *(u32 *)(r10 -56) = r1
	8298: (63) *(u32 *)(r10 -52) = r1
	8299: (63) *(u32 *)(r10 -48) = r6
	8300: (63) *(u32 *)(r10 -60) = r2
	8301: (bf) r4 = r10
	;
	8302: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	8303: (79) r1 = *(u64 *)(r10 -152)
	8304: (18) r2 = 0xffff7000722cc800
	8306: (18) r3 = 0xffffffff
	8308: (b4) w5 = 20
	8309: (85) call bpf_perf_event_output#25
	last_idx 8309 first_idx 8273
	regs=20 stack=0 before 8308: (b4) w5 = 20
	8310: (79) r5 = *(u64 *)(r10 -152)
	; return (void *)(unsigned long)ctx->data_end;
	8311: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	8312: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	8313: (07) r2 += 34
	8314: (b4) w4 = -134
	; if (data + tot_len > data_end)
	8315: (2d) if r2 > r1 goto pc-269
	 R0=inv(id=0) R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv4294967162 R5_w=ctx(id=0,off=0,imm=0) R6=invP0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-24=mmmmmmmm fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	; &redir_opt->ip1, 4, 0);
	8316: (07) r9 += 2
	; ret = ctx_store_bytes(ctx, ETH_HLEN + offsetof(struct iphdr, saddr),
	8317: (bf) r1 = r5
	8318: (b4) w2 = 26
	8319: (bf) r3 = r9
	8320: (b4) w4 = 4
	8321: (b4) w5 = 0
	8322: (85) call bpf_skb_store_bytes#9
	R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf
	processed 1463 insns (limit 1000000) max_states_per_insn 3 total_states 58 peak_states 58 mark_read 28
level=warning msg="JoinEP: Failed to load program for host endpoint (cil_to_host)" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" file-path=317_next/bpf_host.o identity=1 ipv4= ipv6= k8sPodName=/ subsys=datapath-loader veth=cilium_host
level=error msg="Error while rewriting endpoint BPF program" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting endpoint changes after BPF regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting proxy redirect removals" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting proxy redirect removals" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting proxy redirect additions" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting proxy redirect additions" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting endpoint changes after BPF regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=info msg="Wrote verifier log to endpoint directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/verifier.log identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=info msg="generating BPF for endpoint failed, keeping stale directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" file-path=317_next_fail identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=317_next_fail endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=317_next endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Completed endpoint regeneration with no pending regeneration requests" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=ready identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=warning msg="Regeneration of endpoint failed" bpfCompilation=0s bpfLoadProg=28.002333ms bpfWaitForELF="3.584µs" bpfWriteELF=1.200458ms containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ mapSync="15.708µs" policyCalculation="26.166µs" prepareBuild="385.833µs" proxyConfiguration="7.083µs" proxyPolicyCalculation="7.125µs" proxyWaitForAck=0s reason="retrying regeneration" subsys=endpoint total=33.254458ms waitingForCTClean="633.584µs" waitingForLock="1.042µs"
level=debug msg="Error regenerating endpoint: loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" code=Failure containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=ready identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=200
level=debug msg="EventQueue event processing statistics" eventConsumeOffQueueWaitTime="15.125µs" eventEnqueueWaitTime="10µs" eventHandlingDuration=33.350334ms eventType="*endpoint.EndpointRegenerationEvent" name=endpoint-317 subsys=eventqueue
level=error msg="endpoint regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Controller func execution time: 33.470583ms" name=endpoint-317-regeneration-recovery subsys=controller uuid=e7863fbe-c1cf-4ee3-ba58-7391bc06fe4a
level=debug msg="Controller run failed" consecutiveErrors=5 error="regeneration recovery failed" name=endpoint-317-regeneration-recovery subsys=controller uuid=e7863fbe-c1cf-4ee3-ba58-7391bc06fe4a
level=debug msg="Controller func execution time: 15.583µs" name=neighbor-table-refresh subsys=controller uuid=5f42d2e2-48d7-4982-91cd-822a315d5338
level=debug msg="Controller func execution time: 175.625µs" name=link-cache subsys=controller uuid=943db86b-b8d5-4ac1-9d64-5a68b09b3280
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Skipping CiliumEndpoint update because it has no k8s pod name" containerID= controller="sync-to-k8s-ciliumendpoint (767)" datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpointsynchronizer
level=debug msg="Controller func execution time: 57.5µs" name="sync-to-k8s-ciliumendpoint (767)" subsys=controller uuid=5039eeaf-3bc8-4a34-86d2-ee0a245eba33
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Greeting failed" error="Get \"http://10.244.2.82:4240/hello\": context deadline exceeded (Client.Timeout exceeded while awaiting headers)" host="http://10.244.2.82:4240" ipAddr=10.244.2.82 nodeName=kind-kind/kind-worker2 path="Via L3" subsys=health-server
level=debug msg="Failed to probe: Get \"http://10.244.2.82:4240/hello\": context deadline exceeded (Client.Timeout exceeded while awaiting headers)" ipAddr=10.244.2.82 nodeName=kind-kind/kind-worker2 port=4240 subsys=health-server
level=debug msg="Greeting host" host="http://172.21.0.2:4240" ipAddr=172.21.0.2 nodeName=kind-kind/kind-worker4 path="Via L3" subsys=health-server
level=debug msg="Greeting successful" host="http://172.21.0.2:4240" ipAddr=172.21.0.2 nodeName=kind-kind/kind-worker4 path="Via L3" rtt="996.166µs" subsys=health-server
level=debug msg="Greeting host" host="http://10.244.1.174:4240" ipAddr=10.244.1.174 nodeName=kind-kind/kind-worker4 path="Via L3" subsys=health-server
level=debug msg="Controller func execution time: 60.209µs" name=metricsmap-bpf-prom-sync subsys=controller uuid=38a9c0b7-176f-4a35-865f-69a2af221242
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Skipping CiliumEndpoint update because it has not changed" containerID=972758c29d controller="sync-to-k8s-ciliumendpoint (1197)" datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpointsynchronizer
level=debug msg="Controller func execution time: 643.708µs" name="sync-to-k8s-ciliumendpoint (1197)" subsys=controller uuid=fdcb02e9-f4be-47b4-bc48-d3aa990929bf
level=debug msg="Controller func execution time: 32.292µs" name=metricsmap-bpf-prom-sync subsys=controller uuid=38a9c0b7-176f-4a35-865f-69a2af221242
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="received signal that regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Triggering endpoint regeneration due to retrying regeneration" code=OK containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=waiting-to-regenerate identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=0
level=debug msg="Dequeued endpoint from build queue" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Regenerating endpoint" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh reason="retrying regeneration" startTime="2023-07-12 21:57:18.422435675 +0000 UTC m=+41.787621228" subsys=endpoint
level=debug msg="Regenerating endpoint: retrying regeneration" code=OK containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=regenerating identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=0
level=debug msg="removing directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 directory=1197_next endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Starting policy recalculation..." containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Skipping unnecessary endpoint policy recalculation" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyChanged=true policyRevision.next=1 policyRevision.repo=1 subsys=endpoint
level=debug msg="preparing new cache transaction: upserting 1 entries, deleting 0 entries" subsys=xds xdsCachedVersion=18 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="inserting resource into cache" subsys=xds xdsCachedVersion=18 xdsResourceName=1197 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="committing cache transaction and notifying of new version" subsys=xds xdsCachedVersion=18 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="BPF header file hashed (was: \"\")" bpfHeaderfileHash=7893731b6685475dfe5360e1b8a61cf84c83a2bf5f9ee995962246f1092743d5 containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="writing header file" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 file-path=1197_next/ep_config.h identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="writing header file with DNSRules" DNSRules="map[]" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 file-path=1197_next/ep_config.h identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Preparing to compile BPF" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh regeneration-level=rewrite+load subsys=endpoint
level=debug msg="Found variable with offset 107972" subsys=elf symbol=LXC_ID
level=debug msg="Found variable with offset 107968" subsys=elf symbol=LXC_IPV4
level=debug msg="Found variable with offset 107952" subsys=elf symbol=LXC_IP_1
level=debug msg="Found variable with offset 107956" subsys=elf symbol=LXC_IP_2
level=debug msg="Found variable with offset 107960" subsys=elf symbol=LXC_IP_3
level=debug msg="Found variable with offset 107964" subsys=elf symbol=LXC_IP_4
level=debug msg="Found variable with offset 107976" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 107980" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 107992" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 107984" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 107988" subsys=elf symbol=SECLABEL_NB
level=debug msg="Load 1-min: 4.02 5-min: 2.45 15min: 2.03" endpointID=1197 subsys=endpoint
level=debug msg="Found symbol referring to unknown section id 30" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_container" subsys=elf
level=debug msg="Skipping cil_to_container" subsys=elf
level=debug msg="Found symbol with offset 1017016" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1016648" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1020451" subsys=elf symbol=cilium_calls_65535
level=debug msg="Found symbol with offset 1017110" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1017088" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1017209" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1016781" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1017275" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1016842" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1016609" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1021710" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1017366" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1017153" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1016758" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1022539" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1017290" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1017128" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1017314" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1016902" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1017032" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1020852" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1020431" subsys=elf symbol=cilium_policy_65535
level=debug msg="Found symbol with offset 1017174" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1016869" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1017064" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1020827" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping handle_policy" subsys=elf
level=debug msg="Skipping tail_handle_arp" subsys=elf
level=debug msg="Skipping tail_handle_ipv4" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_cont" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_ipv4_ct_egress" subsys=elf
level=debug msg="Skipping tail_ipv4_ct_ingress" subsys=elf
level=debug msg="Skipping tail_ipv4_to_endpoint" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1016705" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1016888" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1016968" subsys=elf symbol=to-container
level=debug msg="Found section with offset 1016985" subsys=elf symbol=from-container
level=debug msg="Found section with offset 1017052" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1017200" subsys=elf symbol=1/0xffff
level=debug msg="Found section with offset 1017246" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1017262" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1017329" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1017427" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1017875" subsys=elf symbol=2/29
level=debug msg="Found section with offset 1018439" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1019240" subsys=elf symbol=2/27
level=debug msg="Found section with offset 1019321" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1019367" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1020020" subsys=elf symbol=2/6
level=debug msg="Found section with offset 1020628" subsys=elf symbol=2/25
level=debug msg="Found section with offset 1022452" subsys=elf symbol=2/13
level=debug msg="Found section with offset 1023900" subsys=elf symbol=2/1
level=debug msg="Memory: Total: 3933 Used: 2505 (63.71%) Free: 75 Buffers: 27 Cached: 1324" endpointID=1197 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1020 (99.61%) Free: 3" endpointID=1197 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 3.73% MEM: 2.40% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 94 VMS: 850 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=1197 subsys=endpoint
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=1197_next/bpf_lxc.o subsys=elf template-path=/var/run/cilium/state/templates/e267396d7dbbfc90d60aeb96a7aa0e409dd813966a4eebf57fd2c06da7576b69/bpf_lxc.o
level=debug msg="Loading CollectionSpec from ELF" device=lxc102a8ca64051 ifindex=9 objPath=1197_next/bpf_lxc.o subsys=datapath-loader
level=debug msg="Loading Collection into kernel" device=lxc102a8ca64051 ifindex=9 objPath=1197_next/bpf_lxc.o subsys=datapath-loader
Verifier error: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)
Verifier log: load program: permission denied:
	btf_vmlinux is malformed
	R1 type=ctx expected=fp
	; int tail_handle_snat_fwd_ipv4(struct __ctx_buff *ctx)
	0: (bf) r5 = r1
	1: (b4) w7 = 0
	; ctx->cb[off] = data;
	2: (63) *(u32 *)(r5 +52) = r7
	; return (void *)(unsigned long)ctx->data_end;
	3: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	4: (61) r6 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	5: (bf) r2 = r6
	6: (07) r2 += 34
	7: (7b) *(u64 *)(r10 -96) = r5
	; if (data + tot_len > data_end)
	8: (2d) if r2 > r1 goto pc+224
	 R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R10=fp0 fp-96_w=ctx
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	9: (61) r1 = *(u32 *)(r6 +26)
	10: (b7) r9 = 0
	; struct endpoint_key key = {};
	11: (63) *(u32 *)(r10 -32) = r9
	last_idx 11 first_idx 0
	regs=200 stack=0 before 10: (b7) r9 = 0
	12: (63) *(u32 *)(r10 -36) = r9
	13: (63) *(u32 *)(r10 -40) = r9
	14: (63) *(u32 *)(r10 -44) = r9
	; key.ip4 = ip;
	15: (63) *(u32 *)(r10 -48) = r1
	16: (b4) w1 = 1
	; key.family = ENDPOINT_KEY_IPV4;
	17: (73) *(u8 *)(r10 -32) = r1
	18: (bf) r2 = r10
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	19: (07) r2 += -48
	; return map_lookup_elem(&ENDPOINTS_MAP, &key);
	20: (18) r1 = 0xffff700159c9b400
	22: (85) call bpf_map_lookup_elem#1
	23: (bf) r8 = r0
	; remote_ep = lookup_ip4_remote_endpoint(ip4->daddr, 0);
	24: (61) r1 = *(u32 *)(r6 +30)
	; .ip4 = addr,
	25: (7b) *(u64 *)(r10 -32) = r9
	26: (63) *(u32 *)(r10 -36) = r7
	last_idx 26 first_idx 23
	regs=80 stack=0 before 25: (7b) *(u64 *)(r10 -32) = r9
	regs=80 stack=0 before 24: (61) r1 = *(u32 *)(r6 +30)
	regs=80 stack=0 before 23: (bf) r8 = r0
	 R0_rw=map_value_or_null(id=1,off=0,ks=20,vs=48,imm=0) R6_rw=pkt(id=0,off=0,r=34,imm=0) R7_rw=invP0 R9_rw=invP0 R10=fp0 fp-32=????mmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-96_w=ctx
	parent didn't have regs=80 stack=0 marks
	last_idx 22 first_idx 0
	regs=80 stack=0 before 22: (85) call bpf_map_lookup_elem#1
	regs=80 stack=0 before 20: (18) r1 = 0xffff700159c9b400
	regs=80 stack=0 before 19: (07) r2 += -48
	regs=80 stack=0 before 18: (bf) r2 = r10
	regs=80 stack=0 before 17: (73) *(u8 *)(r10 -32) = r1
	regs=80 stack=0 before 16: (b4) w1 = 1
	regs=80 stack=0 before 15: (63) *(u32 *)(r10 -48) = r1
	regs=80 stack=0 before 14: (63) *(u32 *)(r10 -44) = r9
	regs=80 stack=0 before 13: (63) *(u32 *)(r10 -40) = r9
	regs=80 stack=0 before 12: (63) *(u32 *)(r10 -36) = r9
	regs=80 stack=0 before 11: (63) *(u32 *)(r10 -32) = r9
	regs=80 stack=0 before 10: (b7) r9 = 0
	regs=80 stack=0 before 9: (61) r1 = *(u32 *)(r6 +26)
	regs=80 stack=0 before 8: (2d) if r2 > r1 goto pc+224
	regs=80 stack=0 before 7: (7b) *(u64 *)(r10 -96) = r5
	regs=80 stack=0 before 6: (07) r2 += 34
	regs=80 stack=0 before 5: (bf) r2 = r6
	regs=80 stack=0 before 4: (61) r6 = *(u32 *)(r5 +76)
	regs=80 stack=0 before 3: (61) r1 = *(u32 *)(r5 +80)
	regs=80 stack=0 before 2: (63) *(u32 *)(r5 +52) = r7
	regs=80 stack=0 before 1: (b4) w7 = 0
	27: (63) *(u32 *)(r10 -40) = r1
	28: (18) r1 = 0x100000000000040
	; .lpm_key = { IPCACHE_PREFIX_LEN(prefix), {} },
	30: (7b) *(u64 *)(r10 -48) = r1
	31: (bf) r2 = r10
	; local_ep = __lookup_ip4_endpoint(ip4->saddr);
	32: (07) r2 += -48
	; return map_lookup_elem(map, &key);
	33: (18) r1 = 0xffff700104950c00
	35: (85) call bpf_map_lookup_elem#1
	36: (79) r5 = *(u64 *)(r10 -96)
	; if (local_ep) {
	37: (15) if r8 == 0x0 goto pc+195
	 R0_w=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8_w=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=invP0 R10=fp0 fp-32_w=mmmmmmmm fp-40=mmmmmmmm fp-48_w=mmmmmmmm fp-96=ctx
	; .daddr = ip4->daddr,
	38: (61) r1 = *(u32 *)(r6 +30)
	; struct ipv4_ct_tuple tuple = {
	39: (63) *(u32 *)(r10 -88) = r1
	; .saddr = ip4->saddr
	40: (61) r1 = *(u32 *)(r6 +26)
	; struct ipv4_ct_tuple tuple = {
	41: (63) *(u32 *)(r10 -84) = r1
	42: (b4) w2 = 0
	43: (63) *(u32 *)(r10 -80) = r2
	last_idx 43 first_idx 23
	regs=4 stack=0 before 42: (b4) w2 = 0
	; .nexthdr = ip4->protocol,
	44: (71) r1 = *(u8 *)(r6 +23)
	; struct ipv4_ct_tuple tuple = {
	45: (73) *(u8 *)(r10 -75) = r2
	;
	46: (18) r3 = 0xffff7001044a2800
	48: (16) if w1 == 0x6 goto pc+2
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=invP0 R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0?0000 fp-88=mmmmmmmm fp-96=ctx
	49: (18) r3 = 0xffff7000ef1d5000
	; struct ipv4_ct_tuple tuple = {
	51: (73) *(u8 *)(r10 -76) = r1
	; return ip4->ihl * 4;
	52: (71) r9 = *(u8 *)(r6 +14)
	; return ip4->ihl * 4;
	53: (64) w9 <<= 2
	54: (54) w9 &= 60
	; ct_is_reply4(get_ct_map4(&tuple), ctx, ETH_HLEN +
	55: (04) w9 += 14
	; switch (tuple->nexthdr) {
	56: (16) if w1 == 0x11 goto pc+38
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9_w=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	57: (16) if w1 == 0x6 goto pc+37
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	58: (56) if w1 != 0x1 goto pc+174
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv1 R2=invP0 R3=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	59: (bf) r6 = r3
	60: (b4) w1 = 0
	; __be16 identifier = 0;
	61: (6b) *(u16 *)(r10 -48) = r1
	last_idx 61 first_idx 57
	regs=2 stack=0 before 60: (b4) w1 = 0
	62: (bf) r3 = r10
	;
	63: (07) r3 += -72
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	64: (bf) r1 = r5
	65: (bc) w2 = w9
	66: (b4) w4 = 1
	67: (85) call bpf_skb_load_bytes#26
	last_idx 67 first_idx 57
	regs=10 stack=0 before 66: (b4) w4 = 1
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	68: (c6) if w0 s< 0x0 goto pc+163
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	69: (71) r3 = *(u8 *)(r10 -72)
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	70: (bc) w2 = w3
	71: (44) w2 |= 8
	72: (79) r1 = *(u64 *)(r10 -96)
	73: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=ctx(id=0,off=0,imm=0) R2_w=inv(id=0,umin_value=8,umax_value=255,var_off=(0x8; 0xf7)) R3_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	74: (05) goto pc+8
	; switch (type) {
	83: (b4) w2 = 0
	; tuple->dport = 0;
	84: (63) *(u32 *)(r10 -80) = r2
	last_idx 84 first_idx 68
	regs=4 stack=0 before 83: (b4) w2 = 0
	; switch (type) {
	85: (bf) r2 = r3
	86: (66) if w2 s> 0xa goto pc+46
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=ctx(id=0,off=0,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	87: (bf) r1 = r6
	88: (16) if w2 == 0x0 goto pc+51
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	89: (16) if w2 == 0x3 goto pc+46
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	90: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R2=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx
	91: (05) goto pc+135
	; if (err < 0)
	227: (b4) w2 = 1
	; tuple->flags = TUPLE_F_IN;
	228: (73) *(u8 *)(r10 -75) = r2
	229: (bf) r2 = r10
	;
	230: (07) r2 += -88
	; *is_reply = map_lookup_elem(map, tuple) != NULL;
	231: (85) call bpf_map_lookup_elem#1
	232: (79) r5 = *(u64 *)(r10 -96)
	233: (b7) r1 = 0
	; struct ipv4_ct_tuple tuple = {};
	234: (7b) *(u64 *)(r10 -88) = r1
	last_idx 234 first_idx 232
	regs=2 stack=0 before 233: (b7) r1 = 0
	235: (6b) *(u16 *)(r10 -76) = r7
	236: (63) *(u32 *)(r10 -80) = r7
	; return (void *)(unsigned long)ctx->data_end;
	237: (61) r2 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	238: (61) r8 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	239: (bf) r1 = r8
	240: (07) r1 += 34
	; if (data + tot_len > data_end)
	241: (2d) if r1 > r2 goto pc+251
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=pkt(id=0,off=34,r=34,imm=0) R2_w=pkt_end(id=0,off=0,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R7=invP0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??000000 fp-88_w=00000000 fp-96=ctx
	242: (7b) *(u64 *)(r10 -104) = r2
	243: (b4) w7 = -158
	; return ip4->frag_off & bpf_htons(0x1FFF);
	244: (69) r6 = *(u16 *)(r8 +20)
	; tuple->nexthdr = ip4->protocol;
	245: (71) r1 = *(u8 *)(r8 +23)
	; tuple->nexthdr = ip4->protocol;
	246: (73) *(u8 *)(r10 -76) = r1
	; tuple->daddr = ip4->daddr;
	247: (61) r2 = *(u32 *)(r8 +30)
	; tuple->daddr = ip4->daddr;
	248: (63) *(u32 *)(r10 -88) = r2
	; tuple->saddr = ip4->saddr;
	249: (61) r3 = *(u32 *)(r8 +26)
	; tuple->saddr = ip4->saddr;
	250: (63) *(u32 *)(r10 -84) = r3
	; switch (tuple->nexthdr) {
	251: (16) if w1 == 0x1 goto pc+120
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5_w=ctx(id=0,off=0,imm=0) R6_w=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv4294967138 R8_w=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88_w=mmmmmmmm fp-96=ctx fp-104_w=pkt_end
	;
	252: (71) r7 = *(u8 *)(r8 +14)
	; switch (tuple->nexthdr) {
	253: (16) if w1 == 0x11 goto pc+1
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	254: (56) if w1 != 0x6 goto pc+29
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv6 R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-72=???????m fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; struct ipv4_frag_id frag_id = {
	255: (63) *(u32 *)(r10 -68) = r3
	256: (63) *(u32 *)(r10 -72) = r2
	; .id = ip4->id,
	257: (69) r2 = *(u16 *)(r8 +18)
	258: (b4) w3 = 0
	; struct ipv4_frag_id frag_id = {
	259: (73) *(u8 *)(r10 -61) = r3
	last_idx 259 first_idx 253
	regs=8 stack=0 before 258: (b4) w3 = 0
	260: (73) *(u8 *)(r10 -62) = r1
	261: (6b) *(u16 *)(r10 -64) = r2
	; return ip4->frag_off & bpf_htons(0x3FFF);
	262: (bc) w1 = w6
	263: (54) w1 &= 65343
	; if (unlikely(is_fragment)) {
	264: (16) if w1 == 0x0 goto pc+46
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=65343,var_off=(0x0; 0xff3f)) R2=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R3=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R10=fp0 fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmm00 fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; return ctx->len;
	265: (61) r9 = *(u32 *)(r5 +0)
	266: (b7) r1 = 0
	; struct metrics_value *entry, new_entry = {};
	267: (7b) *(u64 *)(r10 -40) = r1
	last_idx 267 first_idx 264
	regs=2 stack=0 before 266: (b7) r1 = 0
	268: (7b) *(u64 *)(r10 -48) = r1
	269: (b7) r1 = 521
	; struct metrics_key key = {};
	270: (7b) *(u64 *)(r10 -56) = r1
	271: (bf) r2 = r10
	;
	272: (07) r2 += -56
	; entry = map_lookup_elem(&METRICS_MAP, &key);
	273: (18) r1 = 0xffff7000ac846c00
	275: (85) call bpf_map_lookup_elem#1
	; if (entry) {
	276: (15) if r0 == 0x0 goto pc+9
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; entry->count += 1;
	277: (79) r1 = *(u64 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	278: (07) r1 += 1
	279: (7b) *(u64 *)(r0 +0) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; entry->bytes += bytes;
	280: (79) r1 = *(u64 *)(r0 +8)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	281: (0f) r1 += r9
	282: (7b) *(u64 *)(r0 +8) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	283: (05) goto pc+13
	; return ip4->frag_off & bpf_htons(0x1FFF);
	297: (69) r1 = *(u16 *)(r8 +20)
	; return ip4->frag_off & bpf_htons(0x1FFF);
	298: (54) w1 &= 65311
	299: (79) r5 = *(u64 *)(r10 -96)
	; if (likely(not_first_fragment))
	300: (16) if w1 == 0x0 goto pc+10
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0,umax_value=65311,var_off=(0x0; 0xff1f)) R5_w=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????0mmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	301: (bf) r2 = r10
	;
	302: (07) r2 += -72
	; tmp = map_lookup_elem(&IPV4_FRAG_DATAGRAMS_MAP, frag_id);
	303: (18) r1 = 0xffff7001044a2400
	305: (85) call bpf_map_lookup_elem#1
	; if (!tmp)
	306: (55) if r0 != 0x0 goto pc+637
	
	from 306 to 944: R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; case  4: __it_mob(d, s, 32);
	944: (61) r1 = *(u32 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0m0000 fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	945: (63) *(u32 *)(r10 -80) = r1
	946: (05) goto pc-577
	; map_update_elem(&METRICS_MAP, &key, &new_entry, 0);
	370: (79) r5 = *(u64 *)(r10 -96)
	371: (b4) w7 = 0
	372: (54) w6 &= -225
	373: (b4) w1 = 1
	; if (IS_ERR(ret)) goto skip_crab;
	374: (16) if w7 == 0x2 goto pc+1
	last_idx 374 first_idx 306
	regs=80 stack=0 before 373: (b4) w1 = 1
	regs=80 stack=0 before 372: (54) w6 &= -225
	regs=80 stack=0 before 371: (b4) w7 = 0
	375: (b4) w1 = 0
	; return ip4->frag_off & bpf_htons(0x1FFF);
	376: (54) w6 &= 65535
	377: (79) r0 = *(u64 *)(r10 -104)
	; if (IS_ERR(ret)) goto skip_crab;
	378: (56) if w6 != 0x0 goto pc+114
	 R0_w=pkt_end(id=0,off=0,imm=0) R1=inv0 R5=ctx(id=0,off=0,imm=0) R6_w=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	;
	379: (bc) w2 = w7
	380: (74) w2 >>= 31
	381: (4c) w2 |= w1
	; if (IS_ERR(ret)) goto skip_crab;
	382: (56) if w2 != 0x0 goto pc+110
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	383: (71) r1 = *(u8 *)(r8 +23)
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	384: (56) if w1 != 0x6 goto pc+108
	 R0=pkt_end(id=0,off=0,imm=0) R1=inv6 R2=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	385: (07) r8 += 14
	; return ip4->ihl * 4;
	386: (71) r1 = *(u8 *)(r8 +0)
	; return ip4->ihl * 4;
	387: (64) w1 <<= 2
	388: (57) r1 &= 60
	; tcph = (struct tcphdr *)((void*)ip4 + ipv4_hdrlen(ip4));
	389: (0f) r8 += r1
	last_idx 389 first_idx 384
	regs=2 stack=0 before 388: (57) r1 &= 60
	regs=2 stack=0 before 387: (64) w1 <<= 2
	regs=2 stack=0 before 386: (71) r1 = *(u8 *)(r8 +0)
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	390: (bf) r9 = r8
	391: (07) r9 += 20
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	392: (2d) if r9 > r0 goto pc+100
	 R0=pkt_end(id=0,off=0,imm=0) R1_w=invP(id=0,umax_value=60,var_off=(0x0; 0x3c)) R2=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	393: (b4) w2 = 15
	;
	394: (61) r1 = *(u32 *)(r5 +80)
	; offset = tcph->doff * 4;
	395: (69) r3 = *(u16 *)(r8 +12)
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	396: (74) w3 >>= 2
	397: (54) w3 &= 60
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	398: (04) w3 += -20
	399: (05) goto pc+5
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=inv(id=0,umax_value=252,var_off=(0x0; 0xfc)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=8,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=8,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	last_idx 404 first_idx 464
	regs=4 stack=0 before 403: (04) w2 += -1
	regs=4 stack=0 before 402: (79) r5 = *(u64 *)(r10 -96)
	regs=4 stack=0 before 467: (05) goto pc-66
	regs=4 stack=0 before 466: (1c) w3 -= w4
	regs=4 stack=0 before 465: (0f) r9 += r4
	regs=4 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=8,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_r=pkt(id=8,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 451 first_idx 433
	regs=4 stack=0 before 451: (bd) if r4 <= r1 goto pc+12
	regs=4 stack=0 before 450: (07) r4 += 2
	regs=4 stack=0 before 449: (bf) r4 = r9
	regs=4 stack=0 before 436: (56) if w5 != 0x0 goto pc+12
	regs=4 stack=0 before 435: (16) if w5 == 0x2d goto pc+265
	regs=4 stack=0 before 434: (16) if w5 == 0x1 goto pc-35
	regs=4 stack=0 before 433: (71) r5 = *(u8 *)(r9 +0)
	 R0=pkt_end(id=0,off=0,imm=0) R1_r=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=8,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7_r=invP0 R8=pkt(id=8,off=14,r=35,umax_value=60,var_off=(0x0; 0x3c)) R9_r=pkt(id=8,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32_r=mmmmmmmm fp-40=00000000 fp-48_r=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104_r=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 421 first_idx 405
	regs=4 stack=0 before 421: (bd) if r4 <= r1 goto pc+11
	regs=4 stack=0 before 420: (07) r4 += 1
	regs=4 stack=0 before 419: (bf) r4 = r9
	regs=4 stack=0 before 407: (56) if w4 != 0x0 goto pc+11
	regs=4 stack=0 before 406: (54) w4 &= 255
	regs=4 stack=0 before 405: (bc) w4 = w3
	 R0=pkt_end(id=0,off=0,imm=0) R1_rw=pkt_end(id=0,off=0,imm=0) R2_rw=invP15 R3_rw=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R5_r=ctx(id=0,off=0,imm=0) R6=inv0 R7_r=invP0 R8_w=pkt(id=8,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_rw=pkt(id=8,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-32_r=mmmmmmmm fp-40=00000000 fp-48_r=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96_r=ctx fp-104_r=pkt_end
	parent didn't have regs=4 stack=0 marks
	last_idx 399 first_idx 384
	regs=4 stack=0 before 399: (05) goto pc+5
	regs=4 stack=0 before 398: (04) w3 += -20
	regs=4 stack=0 before 397: (54) w3 &= 60
	regs=4 stack=0 before 396: (74) w3 >>= 2
	regs=4 stack=0 before 395: (69) r3 = *(u16 *)(r8 +12)
	regs=4 stack=0 before 394: (61) r1 = *(u32 *)(r5 +80)
	regs=4 stack=0 before 393: (b4) w2 = 15
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=0,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=19,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=19,off=36,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=19,off=34,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 449
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=0,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=20,off=36,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=20,off=34,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 451
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=0,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=21,off=36,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=21,off=34,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=0,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=22,off=36,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=22,off=34,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=0,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=23,off=36,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=23,off=34,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 419
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=0,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=24,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP9 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4=pkt(id=24,off=36,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=24,off=34,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=0,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=25,off=36,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=25,off=34,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=0,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4=pkt(id=26,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=26,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=26,off=36,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=26,off=34,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=0,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=27,off=36,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=27,off=34,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=0,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=28,off=36,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=28,off=34,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 419
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=0,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=29,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP4 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4=pkt(id=29,off=36,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=29,off=34,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=0,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=30,off=36,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=30,off=34,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 464
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=0,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	436: (56) if w5 != 0x0 goto pc+12
	
	from 436 to 449: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4=pkt(id=31,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=31,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)parser->cur_pos + 2 > data_end){
	449: (bf) r4 = r9
	450: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	451: (bd) if r4 <= r1 goto pc+12
	
	from 451 to 464: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=31,off=36,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=31,off=34,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; parser->cur_size = parser->cur_pos[1];
	464: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	465: (0f) r9 += r4
	last_idx 465 first_idx 436
	regs=10 stack=0 before 464: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	466: (1c) w3 -= w4
	467: (05) goto pc-66
	;
	402: (79) r5 = *(u64 *)(r10 -96)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	403: (04) w2 += -1
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	404: (16) if w2 == 0x0 goto pc+88
	; if (parser->rest_len <= 0) {
	405: (bc) w4 = w3
	406: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	407: (56) if w4 != 0x0 goto pc+11
	
	from 407 to 419: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=0,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	419: (bf) r4 = r9
	420: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	421: (bd) if r4 <= r1 goto pc+11
	
	from 421 to 433: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; opt_type = parser->cur_pos[0];
	433: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	434: (16) if w5 == 0x1 goto pc-35
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	435: (16) if w5 == 0x2d goto pc+265
	
	from 435 to 701: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP1 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=inv45 R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	701: (bf) r2 = r9
	702: (07) r2 += 20
	703: (79) r5 = *(u64 *)(r10 -96)
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	704: (2d) if r2 > r0 goto pc-212
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=32,off=54,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	705: (71) r2 = *(u8 *)(r9 +18)
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	706: (56) if w2 != 0x0 goto pc+130
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=inv0 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	707: (b4) w7 = -134
	; return (void *)(unsigned long)ctx->data;
	708: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	709: (bf) r3 = r2
	710: (07) r3 += 34
	; if (data + tot_len > data_end)
	711: (2d) if r3 > r1 goto pc-219
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=pkt(id=0,off=0,r=34,imm=0) R3=pkt(id=0,off=34,r=34,imm=0) R4=pkt(id=32,off=35,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=inv4294967162 R8=pkt(id=8,off=14,r=36,umax_value=60,var_off=(0x0; 0x3c)) R9=pkt(id=32,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=pkt_end
	; masquerade_ip = ip4->saddr;
	712: (61) r1 = *(u32 *)(r2 +26)
	; masquerade_ip = ip4->saddr;
	713: (63) *(u32 *)(r10 -72) = r1
	; return ip4->ihl * 4;
	714: (71) r2 = *(u8 *)(r2 +14)
	; return ip4->ihl * 4;
	715: (64) w2 <<= 2
	716: (54) w2 &= 60
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	717: (04) w2 += 44
	718: (bf) r3 = r10
	; masquerade_ip = ip4->saddr;
	719: (07) r3 += -72
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	720: (bf) r1 = r5
	721: (b4) w4 = 4
	722: (b4) w5 = 0
	723: (85) call bpf_skb_store_bytes#9
	last_idx 723 first_idx 711
	regs=10 stack=0 before 722: (b4) w5 = 0
	regs=10 stack=0 before 721: (b4) w4 = 4
	724: (79) r5 = *(u64 *)(r10 -96)
	725: (b4) w7 = -141
	; if (ret < 0) return DROP_WRITE_ERROR;
	726: (c6) if w0 s< 0x0 goto pc-234
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7_w=inv4294967155 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	; return ctx->len;
	727: (61) r1 = *(u32 *)(r5 +0)
	; __u64 cap_len = min_t(__u64, monitor ? : TRACE_PAYLOAD_LEN,
	728: (bf) r3 = r1
	729: (a6) if w1 < 0x80 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=inv(id=34,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=34,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7_w=inv4294967155 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-32=mmmmmmmm fp-40=00000000 fp-48=00000000 fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	730: (b7) r3 = 128
	731: (b7) r2 = 0
	; __notify_common_hdr(CILIUM_NOTIFY_TRACE, obs_point),
	732: (61) r4 = *(u32 *)(r5 +68)
	; msg = (typeof(msg)) {
	733: (73) *(u8 *)(r10 -14) = r2
	last_idx 733 first_idx 724
	regs=4 stack=0 before 732: (61) r4 = *(u32 *)(r5 +68)
	regs=4 stack=0 before 731: (b7) r2 = 0
	734: (73) *(u8 *)(r10 -15) = r2
	735: (73) *(u8 *)(r10 -16) = r2
	736: (73) *(u8 *)(r10 -17) = r2
	737: (73) *(u8 *)(r10 -18) = r2
	738: (73) *(u8 *)(r10 -19) = r2
	739: (73) *(u8 *)(r10 -20) = r2
	740: (73) *(u8 *)(r10 -6) = r2
	741: (73) *(u8 *)(r10 -7) = r2
	742: (73) *(u8 *)(r10 -8) = r2
	743: (73) *(u8 *)(r10 -9) = r2
	744: (73) *(u8 *)(r10 -10) = r2
	745: (73) *(u8 *)(r10 -11) = r2
	746: (73) *(u8 *)(r10 -12) = r2
	747: (73) *(u8 *)(r10 -13) = r2
	748: (b4) w2 = 327680
	749: (63) *(u32 *)(r10 -24) = r2
	750: (18) r2 = 0x246c
	752: (63) *(u32 *)(r10 -32) = r2
	753: (b4) w2 = 1
	754: (6b) *(u16 *)(r10 -34) = r2
	755: (63) *(u32 *)(r10 -40) = r1
	756: (63) *(u32 *)(r10 -44) = r4
	757: (b4) w1 = 1284
	758: (6b) *(u16 *)(r10 -48) = r1
	759: (6b) *(u16 *)(r10 -36) = r3
	760: (b4) w6 = 0
	761: (73) *(u8 *)(r10 -2) = r6
	last_idx 761 first_idx 724
	regs=40 stack=0 before 760: (b4) w6 = 0
	762: (73) *(u8 *)(r10 -3) = r6
	763: (73) *(u8 *)(r10 -4) = r6
	764: (73) *(u8 *)(r10 -5) = r6
	765: (63) *(u32 *)(r10 -28) = r6
	766: (18) r7 = 0x4ad
	768: (6b) *(u16 *)(r10 -46) = r7
	769: (73) *(u8 *)(r10 -1) = r6
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	770: (67) r3 <<= 32
	771: (18) r1 = 0xffffffff
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	773: (4f) r3 |= r1
	774: (bf) r4 = r10
	;
	775: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP,
	776: (bf) r1 = r5
	777: (18) r2 = 0xffff7000722cc800
	779: (b4) w5 = 48
	780: (85) call bpf_perf_event_output#25
	last_idx 780 first_idx 724
	regs=20 stack=0 before 779: (b4) w5 = 48
	781: (b4) w1 = 2
	; struct debug_msg msg = {
	782: (6b) *(u16 *)(r10 -48) = r1
	783: (6b) *(u16 *)(r10 -46) = r7
	784: (b4) w1 = 50
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	785: (79) r2 = *(u64 *)(r10 -96)
	786: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	787: (63) *(u32 *)(r10 -32) = r1
	788: (18) r1 = 0x3200000032
	790: (7b) *(u64 *)(r10 -40) = r1
	791: (63) *(u32 *)(r10 -44) = r2
	792: (bf) r4 = r10
	;
	793: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	794: (79) r1 = *(u64 *)(r10 -96)
	795: (18) r2 = 0xffff7000722cc800
	797: (18) r3 = 0xffffffff
	799: (b4) w5 = 20
	800: (85) call bpf_perf_event_output#25
	last_idx 800 first_idx 781
	regs=20 stack=0 before 799: (b4) w5 = 20
	; cilium_dbg3(ctx, DBG_CT_LOOKUP4_1, masquerade_ip, masquerade_ip,
	801: (61) r1 = *(u32 *)(r10 -72)
	; struct debug_msg msg = {
	802: (6b) *(u16 *)(r10 -46) = r7
	803: (b4) w2 = 12290
	804: (6b) *(u16 *)(r10 -48) = r2
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	805: (79) r2 = *(u64 *)(r10 -96)
	806: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	807: (63) *(u32 *)(r10 -32) = r6
	808: (63) *(u32 *)(r10 -36) = r1
	809: (63) *(u32 *)(r10 -40) = r1
	810: (63) *(u32 *)(r10 -44) = r2
	811: (bf) r4 = r10
	;
	812: (07) r4 += -48
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	813: (79) r1 = *(u64 *)(r10 -96)
	814: (18) r2 = 0xffff7000722cc800
	816: (18) r3 = 0xffffffff
	818: (b4) w5 = 20
	819: (85) call bpf_perf_event_output#25
	last_idx 819 first_idx 781
	regs=20 stack=0 before 818: (b4) w5 = 20
	820: (79) r5 = *(u64 *)(r10 -96)
	; return (void *)(unsigned long)ctx->data_end;
	821: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	822: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	823: (07) r2 += 34
	824: (b4) w7 = -134
	; if (data + tot_len > data_end)
	825: (2d) if r2 > r1 goto pc-333
	 R0=inv(id=0) R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R5_w=ctx(id=0,off=0,imm=0) R6=invP0 R7_w=inv4294967162 R8=inv(id=0) R9=inv(id=0) R10=fp0 fp-8=mmmmmmmm fp-16=mmmmmmmm fp-24=mmmmmmmm fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=????mmmm fp-72=mmmmmmmm fp-80=??0mmmmm fp-88=mmmmmmmm fp-96=ctx fp-104=inv
	; &redir_opt->ip1, 4, 0);
	826: (07) r9 += 2
	; ret = ctx_store_bytes(ctx, ETH_HLEN + offsetof(struct iphdr, saddr),
	827: (bf) r1 = r5
	828: (b4) w2 = 26
	829: (bf) r3 = r9
	830: (b4) w4 = 4
	831: (b4) w5 = 0
	832: (85) call bpf_skb_store_bytes#9
	R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf
	processed 1623 insns (limit 1000000) max_states_per_insn 3 total_states 55 peak_states 55 mark_read 27
level=warning msg="JoinEP: Failed to attach program(s)" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" file-path=1197_next/bpf_lxc.o identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=datapath-loader veth=lxc102a8ca64051
level=error msg="Error while rewriting endpoint BPF program" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Reverting endpoint changes after BPF regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Reverting proxy redirect removals" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Finished reverting proxy redirect removals" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Reverting xDS network policy update" subsys=envoy-manager
level=debug msg="preparing new cache transaction: upserting 0 entries, deleting 1 entries" subsys=xds xdsCachedVersion=19 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="deleting resource from cache" subsys=xds xdsCachedVersion=19 xdsResourceName=1197 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="committing cache transaction and notifying of new version" subsys=xds xdsCachedVersion=19 xdsTypeURL=type.googleapis.com/cilium.NetworkPolicy
level=debug msg="Finished reverting xDS network policy update" subsys=envoy-manager
level=debug msg="Reverting proxy redirect additions" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Finished reverting proxy redirect additions" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Finished reverting endpoint changes after BPF regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=info msg="Wrote verifier log to endpoint directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 file-path=1197_next/verifier.log identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=info msg="generating BPF for endpoint failed, keeping stale directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" file-path=1197_next_fail identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="removing directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 directory=1197_next_fail endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="removing directory" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 directory=1197_next endpointID=1197 identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Completed endpoint regeneration with no pending regeneration requests" code=OK containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=ready identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=0
level=warning msg="Regeneration of endpoint failed" bpfCompilation=0s bpfLoadProg=56.259916ms bpfWaitForELF="17.792µs" bpfWriteELF=2.187584ms containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh mapSync="71.917µs" policyCalculation="164.625µs" prepareBuild=1.405667ms proxyConfiguration="48.75µs" proxyPolicyCalculation="205.666µs" proxyWaitForAck=0s reason="retrying regeneration" subsys=endpoint total=73.144084ms waitingForCTClean=2.092041ms waitingForLock="4.583µs"
level=debug msg="Error regenerating endpoint: loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" code=Failure containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 endpointState=ready identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh policyRevision=0 subsys=endpoint type=200
level=debug msg="EventQueue event processing statistics" eventConsumeOffQueueWaitTime="63.292µs" eventEnqueueWaitTime="29µs" eventHandlingDuration=73.337959ms eventType="*endpoint.EndpointRegenerationEvent" name=endpoint-1197 subsys=eventqueue
level=error msg="endpoint regeneration failed" containerID=972758c29d datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=1197 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 832: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1240 line(s) omitted)" identity=9324 ipv4=10.244.1.205 ipv6= k8sPodName=kube-system/coredns-565d847f94-wkwzh subsys=endpoint
level=debug msg="Controller func execution time: 74.007292ms" name=endpoint-1197-regeneration-recovery subsys=controller uuid=8ad41e88-742f-451d-9f1b-b8a945514606
level=debug msg="Controller run failed" consecutiveErrors=6 error="regeneration recovery failed" name=endpoint-1197-regeneration-recovery subsys=controller uuid=8ad41e88-742f-451d-9f1b-b8a945514606
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Skipping CiliumEndpoint update because it has no k8s pod name" containerID= controller="sync-to-k8s-ciliumendpoint (317)" datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpointsynchronizer
level=debug msg="Controller func execution time: 331.459µs" name="sync-to-k8s-ciliumendpoint (317)" subsys=controller uuid=bb1e5172-6dc8-48cd-aba8-7e6f05e59668
level=debug msg="received signal that regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Triggering endpoint regeneration due to retrying regeneration" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=waiting-to-regenerate identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="Dequeued endpoint from build queue" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Regenerating endpoint" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ reason="retrying regeneration" startTime="2023-07-12 21:57:19.824916842 +0000 UTC m=+43.190102396" subsys=endpoint
level=debug msg="Regenerating endpoint: retrying regeneration" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=regenerating identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=317_next endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Starting policy recalculation..." containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Skipping unnecessary endpoint policy recalculation" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ policyChanged=true policyRevision.next=1 policyRevision.repo=1 subsys=endpoint
level=debug msg="Endpoint has no IP addresses" endpointID=317 subsys=envoy-manager
level=debug msg="BPF header file hashed (was: \"\")" bpfHeaderfileHash=0f5fa9a0ac774df439d9f3dc0bdbff52d824f5c229dffe9c8ab4b3a39b7c2977 containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="writing header file" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/ep_config.h identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="writing header file with DNSRules" DNSRules="map[]" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/ep_config.h identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Registered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_snat_v4_external subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct_any4_global subsys=bpf
level=debug msg="Unregistered BPF map" path=/sys/fs/bpf/tc/globals/cilium_ct4_global subsys=bpf
level=debug msg="Preparing to compile BPF" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ regeneration-level=rewrite+load subsys=endpoint
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_65535
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_65535
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Load 1-min: 4.02 5-min: 2.45 15min: 2.03" endpointID=317 subsys=endpoint
level=debug msg="Memory: Total: 3933 Used: 2513 (63.91%) Free: 66 Buffers: 27 Cached: 1325" endpointID=317 subsys=endpoint
level=debug msg="Swap: Total: 1023 Used: 1020 (99.61%) Free: 3" endpointID=317 subsys=endpoint
level=debug msg="NAME cilium-agent STATUS [sleep] PID 1 CPU: 3.84% MEM: 2.40% CMDLINE: cilium-agent --config-dir=/tmp/cilium/config-map MEM-EXT: RSS: 94 VMS: 850 Data: 0 Stack: 0 Locked: 0 Swap: 0" endpointID=317 subsys=endpoint
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_host.o subsys=elf template-path=/var/run/cilium/state/templates/dd2d89da859fc56473ec020cfbca834d6cf8e9c58ad73927e889137d833ee43e/bpf_host.o
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_00317
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_00317
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_host_cilium_net.o subsys=elf template-path=317_next/bpf_host.o
level=debug msg="Found variable with offset 196032" subsys=elf symbol=NATIVE_DEV_IFINDEX
level=debug msg="Found variable with offset 196040" subsys=elf symbol=NODE_MAC_1
level=debug msg="Found variable with offset 196044" subsys=elf symbol=NODE_MAC_2
level=debug msg="Found variable with offset 196056" subsys=elf symbol=POLICY_VERDICT_LOG_FILTER
level=debug msg="Found variable with offset 196036" subsys=elf symbol=SECCTX_FROM_IPCACHE
level=debug msg="Found variable with offset 196048" subsys=elf symbol=SECLABEL
level=debug msg="Found variable with offset 196052" subsys=elf symbol=SECLABEL_NB
level=debug msg="Found symbol referring to unknown section id 28" subsys=elf symbol=____license
level=debug msg="Skipping __send_drop_notify" subsys=elf
level=debug msg="Skipping cil_from_host" subsys=elf
level=debug msg="Skipping cil_from_netdev" subsys=elf
level=debug msg="Skipping cil_to_host" subsys=elf
level=debug msg="Skipping cil_to_netdev" subsys=elf
level=debug msg="Found symbol with offset 1515045" subsys=elf symbol=cilium_auth_map
level=debug msg="Found symbol with offset 1514696" subsys=elf symbol=cilium_call_policy
level=debug msg="Found symbol with offset 1519854" subsys=elf symbol=cilium_calls_hostns_00317
level=debug msg="Found symbol with offset 1515139" subsys=elf symbol=cilium_ct4_global
level=debug msg="Found symbol with offset 1515117" subsys=elf symbol=cilium_ct_any4_global
level=debug msg="Found symbol with offset 1515225" subsys=elf symbol=cilium_encrypt_state
level=debug msg="Found symbol with offset 1514939" subsys=elf symbol=cilium_events
level=debug msg="Found symbol with offset 1515291" subsys=elf symbol=cilium_ipcache
level=debug msg="Found symbol with offset 1514959" subsys=elf symbol=cilium_ipv4_frag_datagrams
level=debug msg="Found symbol with offset 1514657" subsys=elf symbol=cilium_lb4_affinity
level=debug msg="Found symbol with offset 1521032" subsys=elf symbol=cilium_lb4_backends_v3
level=debug msg="Found symbol with offset 1515383" subsys=elf symbol=cilium_lb4_crab
level=debug msg="Found symbol with offset 1515182" subsys=elf symbol=cilium_lb4_crab_long
level=debug msg="Found symbol with offset 1514916" subsys=elf symbol=cilium_lb4_reverse_nat
level=debug msg="Found symbol with offset 1522175" subsys=elf symbol=cilium_lb4_services_v2
level=debug msg="Found symbol with offset 1515306" subsys=elf symbol=cilium_lb4_source_range
level=debug msg="Found symbol with offset 1515157" subsys=elf symbol=cilium_lb_affinity_match
level=debug msg="Found symbol with offset 1515330" subsys=elf symbol=cilium_lxc
level=debug msg="Found symbol with offset 1515019" subsys=elf symbol=cilium_metrics
level=debug msg="Found symbol with offset 1515061" subsys=elf symbol=cilium_node_map
level=debug msg="Found symbol with offset 1520434" subsys=elf symbol=cilium_nodeport_neigh4
level=debug msg="Found symbol with offset 1519834" subsys=elf symbol=cilium_policy_00317
level=debug msg="Found symbol with offset 1515203" subsys=elf symbol=cilium_runtime_config
level=debug msg="Found symbol with offset 1514986" subsys=elf symbol=cilium_signals
level=debug msg="Found symbol with offset 1515093" subsys=elf symbol=cilium_snat_v4_external
level=debug msg="Found symbol with offset 1520409" subsys=elf symbol=cilium_tail_call_buffer4
level=debug msg="Skipping tail_handle_ipv4_from_host" subsys=elf
level=debug msg="Skipping tail_handle_ipv4_from_netdev" subsys=elf
level=debug msg="Skipping tail_handle_snat_fwd_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_egress_ipv4" subsys=elf
level=debug msg="Skipping tail_nodeport_nat_ingress_ipv4" subsys=elf
level=debug msg="Skipping tail_rev_nodeport_lb4" subsys=elf
level=debug msg="Found section with offset 1514792" subsys=elf symbol=to-netdev
level=debug msg="Found section with offset 1514806" subsys=elf symbol=from-netdev
level=debug msg="Found section with offset 1514828" subsys=elf symbol=.BTF.ext
level=debug msg="Found section with offset 1514894" subsys=elf symbol=to-host
level=debug msg="Found section with offset 1514906" subsys=elf symbol=from-host
level=debug msg="Found section with offset 1515005" subsys=elf symbol=.debug_ranges
level=debug msg="Found section with offset 1515081" subsys=elf symbol=.debug_info
level=debug msg="Found section with offset 1515262" subsys=elf symbol=.debug_line
level=debug msg="Found section with offset 1515278" subsys=elf symbol=.debug_frame
level=debug msg="Found section with offset 1515345" subsys=elf symbol=.debug_loc
level=debug msg="Found section with offset 1515463" subsys=elf symbol=.BTF
level=debug msg="Found section with offset 1517073" subsys=elf symbol=2/38
level=debug msg="Found section with offset 1518373" subsys=elf symbol=2/17
level=debug msg="Found section with offset 1518463" subsys=elf symbol=2/7
level=debug msg="Found section with offset 1518948" subsys=elf symbol=2/36
level=debug msg="Found section with offset 1520236" subsys=elf symbol=2/15
level=debug msg="Found section with offset 1522762" subsys=elf symbol=2/22
level=debug msg="Found section with offset 1523941" subsys=elf symbol=2/1
level=debug msg="Finished writing ELF" error="<nil>" new-elf-path=317_next/bpf_netdev_eth0.o subsys=elf template-path=317_next/bpf_host.o
level=debug msg="Loading CollectionSpec from ELF" device=cilium_host ifindex=5 objPath=317_next/bpf_host.o subsys=datapath-loader
level=debug msg="Loading Collection into kernel" device=cilium_host ifindex=5 objPath=317_next/bpf_host.o subsys=datapath-loader
Verifier error: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)
Verifier log: load program: permission denied:
	btf_vmlinux is malformed
	R1 type=ctx expected=fp
	; int tail_handle_snat_fwd_ipv4(struct __ctx_buff *ctx)
	0: (bf) r5 = r1
	1: (b4) w9 = 0
	; ctx->cb[off] = data;
	2: (63) *(u32 *)(r5 +52) = r9
	; return (void *)(unsigned long)ctx->data_end;
	3: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	4: (61) r6 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	5: (bf) r2 = r6
	6: (07) r2 += 34
	; __s8 ext_err = 0;
	7: (b4) w7 = 0
	8: (b4) w4 = 0
	9: (7b) *(u64 *)(r10 -152) = r5
	; if (data + tot_len > data_end)
	10: (2d) if r2 > r1 goto pc+7173
	 R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	;
	11: (61) r1 = *(u32 *)(r6 +26)
	; if (DIRECT_ROUTING_DEV_IFINDEX == NATIVE_DEV_IFINDEX &&
	12: (56) if w1 != 0x20015ac goto pc+3
	 R1_w=inv33559980 R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	13: (18) r2 = 0x0
	15: (16) if w2 == 0x41 goto pc+85
	last_idx 15 first_idx 15
	 R1_w=inv33559980 R2_rw=invP0 R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6_w=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R9_w=inv0 R10=fp0 fp-152_w=ctx
	parent didn't have regs=4 stack=0 marks
	last_idx 13 first_idx 0
	regs=4 stack=0 before 13: (18) r2 = 0x0
	; key.ip4 = ip;
	16: (63) *(u32 *)(r10 -64) = r1
	17: (b7) r7 = 0
	; struct endpoint_key key = {};
	18: (63) *(u32 *)(r10 -48) = r7
	last_idx 18 first_idx 15
	regs=80 stack=0 before 17: (b7) r7 = 0
	19: (63) *(u32 *)(r10 -52) = r7
	20: (63) *(u32 *)(r10 -56) = r7
	21: (63) *(u32 *)(r10 -60) = r7
	22: (b4) w1 = 1
	; key.family = ENDPOINT_KEY_IPV4;
	23: (73) *(u8 *)(r10 -48) = r1
	24: (bf) r2 = r10
	;
	25: (07) r2 += -64
	; return map_lookup_elem(&ENDPOINTS_MAP, &key);
	26: (18) r1 = 0xffff700159c9b400
	28: (85) call bpf_map_lookup_elem#1
	29: (bf) r8 = r0
	; remote_ep = lookup_ip4_remote_endpoint(ip4->daddr, 0);
	30: (61) r1 = *(u32 *)(r6 +30)
	; .ip4 = addr,
	31: (7b) *(u64 *)(r10 -48) = r7
	32: (63) *(u32 *)(r10 -56) = r1
	33: (18) r1 = 0x100000000000040
	; .lpm_key = { IPCACHE_PREFIX_LEN(prefix), {} },
	35: (7b) *(u64 *)(r10 -64) = r1
	36: (b4) w7 = 0
	; .ip4 = addr,
	37: (63) *(u32 *)(r10 -52) = r7
	last_idx 37 first_idx 29
	regs=80 stack=0 before 36: (b4) w7 = 0
	38: (bf) r2 = r10
	;
	39: (07) r2 += -64
	; return map_lookup_elem(map, &key);
	40: (18) r1 = 0xffff700104950c00
	42: (85) call bpf_map_lookup_elem#1
	43: (79) r5 = *(u64 *)(r10 -152)
	44: (b4) w4 = 0
	; if (local_ep) {
	45: (15) if r8 == 0x0 goto pc+7138
	 R0_w=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=invP0 R8_w=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv0 R10=fp0 fp-48_w=mmmmmmmm fp-56=mmmmmmmm fp-64_w=mmmmmmmm fp-152=ctx
	; .daddr = ip4->daddr,
	46: (61) r1 = *(u32 *)(r6 +30)
	; struct ipv4_ct_tuple tuple = {
	47: (63) *(u32 *)(r10 -128) = r1
	; .saddr = ip4->saddr
	48: (61) r1 = *(u32 *)(r6 +26)
	; struct ipv4_ct_tuple tuple = {
	49: (63) *(u32 *)(r10 -124) = r1
	50: (b4) w2 = 0
	51: (63) *(u32 *)(r10 -120) = r2
	last_idx 51 first_idx 29
	regs=4 stack=0 before 50: (b4) w2 = 0
	; .nexthdr = ip4->protocol,
	52: (71) r1 = *(u8 *)(r6 +23)
	; struct ipv4_ct_tuple tuple = {
	53: (73) *(u8 *)(r10 -115) = r2
	;
	54: (18) r7 = 0xffff7001044a2800
	56: (16) if w1 == 0x6 goto pc+2
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=map_value(id=0,off=0,ks=20,vs=48,imm=0) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0?0000 fp-128=mmmmmmmm fp-152=ctx
	57: (18) r7 = 0xffff7000ef1d5000
	; struct ipv4_ct_tuple tuple = {
	59: (73) *(u8 *)(r10 -116) = r1
	; return ip4->ihl * 4;
	60: (71) r8 = *(u8 *)(r6 +14)
	; return ip4->ihl * 4;
	61: (64) w8 <<= 2
	62: (54) w8 &= 60
	; ct_is_reply4(get_ct_map4(&tuple), ctx, ETH_HLEN +
	63: (04) w8 += 14
	; switch (tuple->nexthdr) {
	64: (16) if w1 == 0x11 goto pc+114
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8_w=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	65: (16) if w1 == 0x6 goto pc+113
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	66: (56) if w1 != 0x1 goto pc+6938
	 R0=map_value_or_null(id=2,off=0,ks=24,vs=12,imm=0) R1=inv1 R2=invP0 R4=inv0 R5=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	67: (b4) w1 = 0
	; __be16 identifier = 0;
	68: (6b) *(u16 *)(r10 -64) = r1
	last_idx 68 first_idx 65
	regs=2 stack=0 before 67: (b4) w1 = 0
	69: (bf) r3 = r10
	;
	70: (07) r3 += -80
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	71: (bf) r1 = r5
	72: (bc) w2 = w8
	73: (b4) w4 = 1
	74: (85) call bpf_skb_load_bytes#26
	last_idx 74 first_idx 65
	regs=10 stack=0 before 73: (b4) w4 = 1
	; if (ctx_load_bytes(ctx, off, &type, 1) < 0)
	75: (c6) if w0 s< 0x0 goto pc+6928
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	76: (71) r3 = *(u8 *)(r10 -80)
	; if ((type == ICMP_ECHO || type == ICMP_ECHOREPLY) &&
	77: (bc) w2 = w3
	78: (44) w2 |= 8
	79: (79) r1 = *(u64 *)(r10 -152)
	80: (16) if w2 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=ctx(id=0,off=0,imm=0) R2_w=inv(id=0,umin_value=8,umax_value=255,var_off=(0x8; 0xf7)) R3_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	81: (05) goto pc+8
	; switch (type) {
	90: (b4) w2 = 0
	; tuple->dport = 0;
	91: (63) *(u32 *)(r10 -120) = r2
	last_idx 91 first_idx 75
	regs=4 stack=0 before 90: (b4) w2 = 0
	; switch (type) {
	92: (bf) r1 = r3
	93: (66) if w1 s> 0xa goto pc+6400
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	94: (16) if w1 == 0x0 goto pc+6512
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	95: (16) if w1 == 0x3 goto pc+6400
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	96: (16) if w1 == 0x8 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R2=invP0 R3=inv(id=3,umax_value=10,var_off=(0x0; 0xf)) R6=pkt(id=0,off=0,r=34,imm=0) R7=map_ptr(id=0,off=0,ks=14,vs=56,imm=0) R8=inv(id=0,umin_value=14,umax_value=74,var_off=(0x2; 0x7c)) R9=inv0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx
	97: (05) goto pc+6900
	; if (err < 0)
	6998: (b4) w1 = 1
	; tuple->flags = TUPLE_F_IN;
	6999: (73) *(u8 *)(r10 -115) = r1
	7000: (bf) r2 = r10
	;
	7001: (07) r2 += -128
	; *is_reply = map_lookup_elem(map, tuple) != NULL;
	7002: (bf) r1 = r7
	7003: (85) call bpf_map_lookup_elem#1
	7004: (79) r5 = *(u64 *)(r10 -152)
	7005: (b4) w7 = 0
	7006: (b4) w4 = 0
	7007: (05) goto pc+175
	; if (ret == NAT_PUNT_TO_STACK)
	7183: (b4) w9 = 0
	; struct ipv4_ct_tuple tuple = {};
	7184: (6b) *(u16 *)(r10 -116) = r9
	last_idx 7184 first_idx 7004
	regs=200 stack=0 before 7183: (b4) w9 = 0
	7185: (63) *(u32 *)(r10 -120) = r9
	7186: (b7) r1 = 0
	7187: (7b) *(u64 *)(r10 -128) = r1
	last_idx 7187 first_idx 7004
	regs=2 stack=0 before 7186: (b7) r1 = 0
	; return (void *)(unsigned long)ctx->data_end;
	7188: (61) r2 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	7189: (61) r8 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	7190: (bf) r1 = r8
	7191: (07) r1 += 34
	; if (data + tot_len > data_end)
	7192: (2d) if r1 > r2 goto pc+854
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_w=pkt(id=0,off=34,r=34,imm=0) R2_w=pkt_end(id=0,off=0,imm=0) R4_w=inv0 R5_w=ctx(id=0,off=0,imm=0) R6=pkt(id=0,off=0,r=34,imm=0) R7_w=inv0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9_w=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??000000 fp-128_w=00000000 fp-152=ctx
	7193: (7b) *(u64 *)(r10 -160) = r2
	7194: (b4) w4 = -158
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7195: (69) r6 = *(u16 *)(r8 +20)
	; tuple->nexthdr = ip4->protocol;
	7196: (71) r1 = *(u8 *)(r8 +23)
	; tuple->nexthdr = ip4->protocol;
	7197: (73) *(u8 *)(r10 -116) = r1
	; tuple->daddr = ip4->daddr;
	7198: (61) r2 = *(u32 *)(r8 +30)
	; tuple->daddr = ip4->daddr;
	7199: (63) *(u32 *)(r10 -128) = r2
	; tuple->saddr = ip4->saddr;
	7200: (61) r3 = *(u32 *)(r8 +26)
	; tuple->saddr = ip4->saddr;
	7201: (63) *(u32 *)(r10 -124) = r3
	; switch (tuple->nexthdr) {
	7202: (16) if w1 == 0x1 goto pc+732
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv0 R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end
	7203: (63) *(u32 *)(r10 -168) = r7
	last_idx 7203 first_idx 7202
	regs=80 stack=0 before 7202: (16) if w1 == 0x1 goto pc+732
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1_rw=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4_w=inv4294967138 R5_w=ctx(id=0,off=0,imm=0) R6_w=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_rw=invP0 R8_w=pkt(id=0,off=0,r=34,imm=0) R9_w=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128_w=mmmmmmmm fp-152=ctx fp-160_w=pkt_end
	parent didn't have regs=80 stack=0 marks
	last_idx 7201 first_idx 7004
	regs=80 stack=0 before 7201: (63) *(u32 *)(r10 -124) = r3
	regs=80 stack=0 before 7200: (61) r3 = *(u32 *)(r8 +26)
	regs=80 stack=0 before 7199: (63) *(u32 *)(r10 -128) = r2
	regs=80 stack=0 before 7198: (61) r2 = *(u32 *)(r8 +30)
	regs=80 stack=0 before 7197: (73) *(u8 *)(r10 -116) = r1
	regs=80 stack=0 before 7196: (71) r1 = *(u8 *)(r8 +23)
	regs=80 stack=0 before 7195: (69) r6 = *(u16 *)(r8 +20)
	regs=80 stack=0 before 7194: (b4) w4 = -158
	regs=80 stack=0 before 7193: (7b) *(u64 *)(r10 -160) = r2
	regs=80 stack=0 before 7192: (2d) if r1 > r2 goto pc+854
	regs=80 stack=0 before 7191: (07) r1 += 34
	regs=80 stack=0 before 7190: (bf) r1 = r8
	regs=80 stack=0 before 7189: (61) r8 = *(u32 *)(r5 +76)
	regs=80 stack=0 before 7188: (61) r2 = *(u32 *)(r5 +80)
	regs=80 stack=0 before 7187: (7b) *(u64 *)(r10 -128) = r1
	regs=80 stack=0 before 7186: (b7) r1 = 0
	regs=80 stack=0 before 7185: (63) *(u32 *)(r10 -120) = r9
	regs=80 stack=0 before 7184: (6b) *(u16 *)(r10 -116) = r9
	regs=80 stack=0 before 7183: (b4) w9 = 0
	regs=80 stack=0 before 7007: (05) goto pc+175
	regs=80 stack=0 before 7006: (b4) w4 = 0
	regs=80 stack=0 before 7005: (b4) w7 = 0
	;
	7204: (71) r7 = *(u8 *)(r8 +14)
	; switch (tuple->nexthdr) {
	7205: (16) if w1 == 0x11 goto pc+1
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7206: (56) if w1 != 0x6 goto pc+29
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv6 R2=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-80=???????m fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; struct ipv4_frag_id frag_id = {
	7207: (63) *(u32 *)(r10 -76) = r3
	7208: (63) *(u32 *)(r10 -80) = r2
	; .id = ip4->id,
	7209: (69) r2 = *(u16 *)(r8 +18)
	7210: (b4) w3 = 0
	; struct ipv4_frag_id frag_id = {
	7211: (73) *(u8 *)(r10 -69) = r3
	last_idx 7211 first_idx 7202
	regs=8 stack=0 before 7210: (b4) w3 = 0
	7212: (73) *(u8 *)(r10 -70) = r1
	7213: (6b) *(u16 *)(r10 -72) = r2
	; return ip4->frag_off & bpf_htons(0x3FFF);
	7214: (bc) w1 = w6
	7215: (54) w1 &= 65343
	; if (unlikely(is_fragment)) {
	7216: (16) if w1 == 0x0 goto pc+654
	 R0=map_value_or_null(id=4,off=0,ks=14,vs=56,imm=0) R1=inv(id=0,umax_value=65343,var_off=(0x0; 0xff3f)) R2=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R3=invP0 R4=inv4294967138 R5=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=invP0 R10=fp0 fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmm00 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; return ctx->len;
	7217: (61) r9 = *(u32 *)(r5 +0)
	7218: (b7) r1 = 0
	; struct metrics_value *entry, new_entry = {};
	7219: (7b) *(u64 *)(r10 -56) = r1
	last_idx 7219 first_idx 7216
	regs=2 stack=0 before 7218: (b7) r1 = 0
	7220: (7b) *(u64 *)(r10 -64) = r1
	7221: (b7) r1 = 521
	; struct metrics_key key = {};
	7222: (7b) *(u64 *)(r10 -144) = r1
	7223: (bf) r2 = r10
	;
	7224: (07) r2 += -144
	; entry = map_lookup_elem(&METRICS_MAP, &key);
	7225: (18) r1 = 0xffff7000ac846c00
	7227: (85) call bpf_map_lookup_elem#1
	; if (entry) {
	7228: (15) if r0 == 0x0 goto pc+616
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; entry->count += 1;
	7229: (79) r1 = *(u64 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7230: (07) r1 += 1
	7231: (7b) *(u64 *)(r0 +0) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; entry->bytes += bytes;
	7232: (79) r1 = *(u64 *)(r0 +8)
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7233: (0f) r1 += r9
	7234: (7b) *(u64 *)(r0 +8) = r1
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7235: (05) goto pc+620
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7856: (69) r1 = *(u16 *)(r8 +20)
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7857: (54) w1 &= 65311
	7858: (79) r5 = *(u64 *)(r10 -152)
	; if (likely(not_first_fragment))
	7859: (16) if w1 == 0x0 goto pc+11
	 R0=map_value(id=0,off=0,ks=8,vs=16,imm=0) R1_w=inv(id=0,umax_value=65311,var_off=(0x0; 0xff1f)) R5_w=ctx(id=0,off=0,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????0mmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7860: (bf) r2 = r10
	;
	7861: (07) r2 += -80
	; tmp = map_lookup_elem(&IPV4_FRAG_DATAGRAMS_MAP, frag_id);
	7862: (18) r1 = 0xffff7001044a2400
	7864: (85) call bpf_map_lookup_elem#1
	; if (!tmp)
	7865: (55) if r0 != 0x0 goto pc+548
	
	from 7865 to 8414: R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; case  4: __it_mob(d, s, 32);
	8414: (61) r1 = *(u32 *)(r0 +0)
	 R0=map_value(id=0,off=0,ks=12,vs=4,imm=0) R6=inv(id=0,umax_value=65535,var_off=(0x0; 0xffff)) R7=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0m0000 fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	8415: (63) *(u32 *)(r10 -120) = r1
	8416: (05) goto pc-485
	; map_update_elem(&METRICS_MAP, &key, &new_entry, 0);
	7932: (79) r5 = *(u64 *)(r10 -152)
	7933: (61) r7 = *(u32 *)(r10 -168)
	7934: (b4) w4 = 0
	7935: (54) w6 &= -225
	7936: (b4) w1 = 1
	; if (IS_ERR(ret)) goto skip_crab;
	7937: (16) if w4 == 0x2 goto pc+1
	last_idx 7937 first_idx 8414
	regs=10 stack=0 before 7936: (b4) w1 = 1
	regs=10 stack=0 before 7935: (54) w6 &= -225
	regs=10 stack=0 before 7934: (b4) w4 = 0
	7938: (b4) w1 = 0
	; return ip4->frag_off & bpf_htons(0x1FFF);
	7939: (54) w6 &= 65535
	7940: (79) r0 = *(u64 *)(r10 -160)
	; if (IS_ERR(ret)) goto skip_crab;
	7941: (56) if w6 != 0x0 goto pc+105
	 R0_w=pkt_end(id=0,off=0,imm=0) R1=inv0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6_w=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	;
	7942: (bc) w2 = w4
	7943: (74) w2 >>= 31
	7944: (4c) w2 |= w1
	; if (IS_ERR(ret)) goto skip_crab;
	7945: (56) if w2 != 0x0 goto pc+101
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	7946: (71) r1 = *(u8 *)(r8 +23)
	; if (has_l4_header && ip4->protocol == IPPROTO_TCP)
	7947: (56) if w1 != 0x6 goto pc+99
	 R0=pkt_end(id=0,off=0,imm=0) R1=inv6 R2=invP0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=pkt(id=0,off=0,r=34,imm=0) R9=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7948: (07) r8 += 14
	; return ip4->ihl * 4;
	7949: (71) r1 = *(u8 *)(r8 +0)
	; return ip4->ihl * 4;
	7950: (64) w1 <<= 2
	7951: (57) r1 &= 60
	; tcph = (struct tcphdr *)((void*)ip4 + ipv4_hdrlen(ip4));
	7952: (0f) r8 += r1
	last_idx 7952 first_idx 7947
	regs=2 stack=0 before 7951: (57) r1 &= 60
	regs=2 stack=0 before 7950: (64) w1 <<= 2
	regs=2 stack=0 before 7949: (71) r1 = *(u8 *)(r8 +0)
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	7953: (bf) r9 = r8
	7954: (07) r9 += 20
	; if ((void*)tcph + sizeof(struct tcphdr) > data_end)
	7955: (2d) if r9 > r0 goto pc+91
	 R0=pkt_end(id=0,off=0,imm=0) R1_w=invP(id=0,umax_value=60,var_off=(0x0; 0x3c)) R2=invP0 R4=invP0 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=9,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_w=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7956: (b4) w2 = 15
	;
	7957: (61) r1 = *(u32 *)(r5 +80)
	; offset = tcph->doff * 4;
	7958: (69) r3 = *(u16 *)(r8 +12)
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	7959: (74) w3 >>= 2
	7960: (54) w3 &= 60
	; parser.rest_len = (__u8)offset - sizeof(struct tcphdr);
	7961: (04) w3 += -20
	7962: (05) goto pc+6
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=inv(id=0,umax_value=252,var_off=(0x0; 0xfc)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=inv15 R3=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4=pkt(id=9,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=9,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	last_idx 7968 first_idx 8017
	regs=4 stack=0 before 7967: (bc) w4 = w8
	regs=4 stack=0 before 7966: (04) w2 += -1
	regs=4 stack=0 before 7965: (79) r5 = *(u64 *)(r10 -152)
	regs=4 stack=0 before 8020: (05) goto pc-56
	regs=4 stack=0 before 8019: (1c) w3 -= w4
	regs=4 stack=0 before 8018: (0f) r9 += r4
	regs=4 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=9,off=36,r=36,umax_value=60,var_off=(0x0; 0x3c)) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_r=invP0 R9_r=pkt(id=9,off=34,r=36,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 8007 first_idx 7992
	regs=4 stack=0 before 8007: (bd) if r4 <= r1 goto pc+9
	regs=4 stack=0 before 8006: (07) r4 += 2
	regs=4 stack=0 before 8005: (bf) r4 = r9
	regs=4 stack=0 before 7995: (56) if w5 != 0x0 goto pc+9
	regs=4 stack=0 before 7994: (16) if w5 == 0x2d goto pc+218
	regs=4 stack=0 before 7993: (16) if w5 == 0x1 goto pc-31
	regs=4 stack=0 before 7992: (71) r5 = *(u8 *)(r9 +0)
	 R0=pkt_end(id=0,off=0,imm=0) R1_r=pkt_end(id=0,off=0,imm=0) R2_r=invP15 R3_r=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_w=pkt(id=9,off=35,r=35,umax_value=60,var_off=(0x0; 0x3c)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_rw=invP0 R9_r=pkt(id=9,off=34,r=35,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48_r=mmmmmmmm fp-56=00000000 fp-64_r=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160_r=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 7983 first_idx 7969
	regs=4 stack=0 before 7983: (bd) if r4 <= r1 goto pc+8
	regs=4 stack=0 before 7982: (07) r4 += 1
	regs=4 stack=0 before 7981: (bf) r4 = r9
	regs=4 stack=0 before 7972: (56) if w4 != 0x0 goto pc+8
	regs=4 stack=0 before 7971: (54) w4 &= 255
	regs=4 stack=0 before 7970: (bc) w4 = w3
	regs=4 stack=0 before 7969: (bc) w8 = w4
	 R0=pkt_end(id=0,off=0,imm=0) R1_rw=pkt_end(id=0,off=0,imm=0) R2_rw=invP15 R3_rw=inv(id=0,umax_value=4294967292,var_off=(0x0; 0xfffffffc),s32_min_value=-20,s32_max_value=40) R4_r=invP0 R5_r=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=pkt(id=9,off=14,r=34,umax_value=60,var_off=(0x0; 0x3c)) R9_rw=pkt(id=9,off=34,r=34,umax_value=60,var_off=(0x0; 0x3c)) R10=fp0 fp-48_r=mmmmmmmm fp-56=00000000 fp-64_r=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152_r=ctx fp-160_r=pkt_end fp-168=????0000
	parent didn't have regs=4 stack=0 marks
	last_idx 7962 first_idx 7947
	regs=4 stack=0 before 7962: (05) goto pc+6
	regs=4 stack=0 before 7961: (04) w3 += -20
	regs=4 stack=0 before 7960: (54) w3 &= 60
	regs=4 stack=0 before 7959: (74) w3 >>= 2
	regs=4 stack=0 before 7958: (69) r3 = *(u16 *)(r8 +12)
	regs=4 stack=0 before 7957: (61) r1 = *(u32 *)(r5 +80)
	regs=4 stack=0 before 7956: (b4) w2 = 15
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=0,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4=pkt(id=20,off=35,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=35,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP14 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-275,s32_max_value=40) R4_w=pkt(id=20,off=36,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=20,off=34,r=36,umax_value=315,var_off=(0x0; 0x1ff),s32_max_value=511,u32_max_value=511) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8005
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=21,off=34,r=0,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=35,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=35,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP13 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-530,s32_max_value=40) R4=pkt(id=21,off=36,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=21,off=34,r=36,umax_value=570,var_off=(0x0; 0x3ff),s32_max_value=1023,u32_max_value=1023) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8007
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=0,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4=pkt(id=22,off=35,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=22,off=34,r=35,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP12 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-785,s32_max_value=40) R4_w=pkt(id=22,off=36,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=22,off=34,r=36,umax_value=825,var_off=(0x0; 0x7ff),s32_max_value=2047,u32_max_value=2047) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=0,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=35,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=35,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP11 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1040,s32_max_value=40) R4_w=pkt(id=23,off=36,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=23,off=34,r=36,umax_value=1080,var_off=(0x0; 0xfff),s32_max_value=4095,u32_max_value=4095) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=0,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=35,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=35,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP10 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1295,s32_max_value=40) R4_w=pkt(id=24,off=36,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=24,off=34,r=36,umax_value=1335,var_off=(0x0; 0x1fff),s32_max_value=8191,u32_max_value=8191) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7981
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=0,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP9 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4_w=pkt(id=25,off=35,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=25,off=34,r=35,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP9 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1550,s32_max_value=40) R4=pkt(id=25,off=36,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=25,off=34,r=36,umax_value=1590,var_off=(0x0; 0x3fff),s32_max_value=16383,u32_max_value=16383) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=0,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=35,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=35,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP8 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-1805,s32_max_value=40) R4_w=pkt(id=26,off=36,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=26,off=34,r=36,umax_value=1845,var_off=(0x0; 0x7fff),s32_max_value=32767,u32_max_value=32767) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=0,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP7 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4=pkt(id=27,off=35,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=27,off=34,r=35,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP7 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2060,s32_max_value=40) R4_w=pkt(id=27,off=36,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=27,off=34,r=36,umax_value=2100,var_off=(0x0; 0xffff),s32_max_value=65535,u32_max_value=65535) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=0,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=35,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=35,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP6 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2315,s32_max_value=40) R4_w=pkt(id=28,off=36,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=28,off=34,r=36,umax_value=2355,var_off=(0x0; 0x1ffff),s32_max_value=131071,u32_max_value=131071) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=0,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=35,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=35,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP5 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2570,s32_max_value=40) R4_w=pkt(id=29,off=36,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=29,off=34,r=36,umax_value=2610,var_off=(0x0; 0x3ffff),s32_max_value=262143,u32_max_value=262143) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7981
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=0,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP4 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4_w=pkt(id=30,off=35,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=30,off=34,r=35,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP4 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-2825,s32_max_value=40) R4=pkt(id=30,off=36,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=30,off=34,r=36,umax_value=2865,var_off=(0x0; 0x7ffff),s32_max_value=524287,u32_max_value=524287) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=0,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=35,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=35,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP3 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3080,s32_max_value=40) R4_w=pkt(id=31,off=36,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=31,off=34,r=36,umax_value=3120,var_off=(0x0; 0xfffff),s32_max_value=1048575,u32_max_value=1048575) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 8017
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=0,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP2 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7995: (56) if w5 != 0x0 goto pc+9
	
	from 7995 to 8005: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4=pkt(id=32,off=35,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=32,off=34,r=35,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)parser->cur_pos + 2 > data_end){
	8005: (bf) r4 = r9
	8006: (07) r4 += 2
	; if ((void*)parser->cur_pos + 2 > data_end){
	8007: (bd) if r4 <= r1 goto pc+9
	
	from 8007 to 8017: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP2 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3335,s32_max_value=40) R4_w=pkt(id=32,off=36,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R5=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=32,off=34,r=36,umax_value=3375,var_off=(0x0; 0x1fffff),s32_max_value=2097151,u32_max_value=2097151) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; parser->cur_size = parser->cur_pos[1];
	8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->cur_pos += parser->cur_size;
	8018: (0f) r9 += r4
	last_idx 8018 first_idx 7995
	regs=10 stack=0 before 8017: (71) r4 = *(u8 *)(r9 +1)
	; parser->rest_len -= parser->cur_size;
	8019: (1c) w3 -= w4
	8020: (05) goto pc-56
	;
	7965: (79) r5 = *(u64 *)(r10 -152)
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7966: (04) w2 += -1
	7967: (bc) w4 = w8
	; for (i=0; i < MAX_TCP_OPT_LENGTH; i++){
	7968: (16) if w2 == 0x0 goto pc+78
	7969: (bc) w8 = w4
	; if (parser->rest_len <= 0) {
	7970: (bc) w4 = w3
	7971: (54) w4 &= 255
	; if (parser->rest_len <= 0) {
	7972: (56) if w4 != 0x0 goto pc+8
	
	from 7972 to 7981: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=0,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7981: (bf) r4 = r9
	7982: (07) r4 += 1
	; if ((void*)(parser->cur_pos) + 1 > data_end) {
	7983: (bd) if r4 <= r1 goto pc+8
	
	from 7983 to 7992: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; opt_type = parser->cur_pos[0];
	7992: (71) r5 = *(u8 *)(r9 +0)
	; if (opt_type == TCP_OPT_EOL) {
	7993: (16) if w5 == 0x1 goto pc-31
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=invP1 R3_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5_w=inv(id=0,umax_value=255,var_off=(0x0; 0xff)) R6=inv0 R7=invP0 R8_w=invP0 R9_w=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	7994: (16) if w5 == 0x2d goto pc+218
	
	from 7994 to 8213: R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=invP1 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4=pkt(id=33,off=35,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R5=inv45 R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=35,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	8213: (bf) r2 = r9
	8214: (07) r2 += 20
	8215: (79) r5 = *(u64 *)(r10 -152)
	8216: (bc) w4 = w8
	; if ((void*)redir_opt + sizeof(struct redir_opt_complete) > data_end)
	8217: (2d) if r2 > r0 goto pc-171
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=33,off=54,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=invP0 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	8218: (71) r2 = *(u8 *)(r9 +18)
	; if (redir_opt->index == 0) { // client egress, put masquerade ip to ip3
	8219: (56) if w2 != 0x0 goto pc+107
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2_w=inv0 R3=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff),s32_min_value=-3590,s32_max_value=40) R4_w=invP0 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	8220: (b4) w4 = -134
	; return (void *)(unsigned long)ctx->data;
	8221: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	8222: (bf) r3 = r2
	8223: (07) r3 += 34
	; if (data + tot_len > data_end)
	8224: (2d) if r3 > r1 goto pc-178
	 R0=pkt_end(id=0,off=0,imm=0) R1=pkt_end(id=0,off=0,imm=0) R2=pkt(id=0,off=0,r=34,imm=0) R3=pkt(id=0,off=34,r=34,imm=0) R4=inv4294967162 R5=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=pkt(id=33,off=34,r=54,umax_value=3630,var_off=(0x0; 0x3fffff),s32_max_value=4194303,u32_max_value=4194303) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=pkt_end fp-168=????0000
	; masquerade_ip = ip4->saddr;
	8225: (61) r1 = *(u32 *)(r2 +26)
	; masquerade_ip = ip4->saddr;
	8226: (63) *(u32 *)(r10 -80) = r1
	; return ip4->ihl * 4;
	8227: (71) r2 = *(u8 *)(r2 +14)
	; return ip4->ihl * 4;
	8228: (64) w2 <<= 2
	8229: (54) w2 &= 60
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	8230: (04) w2 += 44
	8231: (bf) r3 = r10
	; masquerade_ip = ip4->saddr;
	8232: (07) r3 += -80
	; ret = ctx_store_bytes(ctx, ETH_HLEN + ipv4_hdrlen(ip4) + sizeof(struct tcphdr) + offsetof(struct redir_opt_complete, ip3),
	8233: (bf) r1 = r5
	8234: (b4) w4 = 4
	8235: (b4) w5 = 0
	8236: (85) call bpf_skb_store_bytes#9
	last_idx 8236 first_idx 8224
	regs=10 stack=0 before 8235: (b4) w5 = 0
	regs=10 stack=0 before 8234: (b4) w4 = 4
	8237: (79) r5 = *(u64 *)(r10 -152)
	8238: (b4) w4 = -141
	; if (ret < 0) return DROP_WRITE_ERROR;
	8239: (c6) if w0 s< 0x0 goto pc-193
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R4_w=inv4294967155 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	; return ctx->len;
	8240: (61) r1 = *(u32 *)(r5 +0)
	; __u64 cap_len = min_t(__u64, monitor ? : TRACE_PAYLOAD_LEN,
	8241: (bf) r3 = r1
	8242: (a6) if w1 < 0x80 goto pc+1
	 R0=inv(id=0,smax_value=9223372034707292159,umax_value=18446744071562067967,var_off=(0x0; 0xffffffff7fffffff),s32_min_value=0,u32_max_value=2147483647) R1_w=inv(id=35,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R3_w=inv(id=35,umin_value=128,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R4_w=inv4294967155 R5_w=ctx(id=0,off=0,imm=0) R6=inv0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-48=mmmmmmmm fp-56=00000000 fp-64=00000000 fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	8243: (b7) r3 = 128
	; __notify_common_hdr(CILIUM_NOTIFY_TRACE, obs_point),
	8244: (61) r2 = *(u32 *)(r5 +68)
	8245: (b7) r4 = 327680
	; msg = (typeof(msg)) {
	8246: (7b) *(u64 *)(r10 -40) = r4
	8247: (18) r4 = 0x1
	8249: (63) *(u32 *)(r10 -48) = r4
	8250: (b4) w4 = 1
	8251: (6b) *(u16 *)(r10 -50) = r4
	8252: (63) *(u32 *)(r10 -56) = r1
	8253: (63) *(u32 *)(r10 -60) = r2
	8254: (b4) w1 = 20776196
	8255: (63) *(u32 *)(r10 -64) = r1
	8256: (b7) r1 = 0
	; case  8: jmp_8:  __it_set(d, 64);
	8257: (7b) *(u64 *)(r10 -32) = r1
	last_idx 8257 first_idx 8237
	regs=2 stack=0 before 8256: (b7) r1 = 0
	8258: (7b) *(u64 *)(r10 -24) = r1
	; msg = (typeof(msg)) {
	8259: (6b) *(u16 *)(r10 -52) = r3
	8260: (b4) w6 = 0
	8261: (63) *(u32 *)(r10 -44) = r6
	last_idx 8261 first_idx 8237
	regs=40 stack=0 before 8260: (b4) w6 = 0
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	8262: (67) r3 <<= 32
	8263: (18) r1 = 0xffffffff
	; (cap_len << 32) | BPF_F_CURRENT_CPU,
	8265: (4f) r3 |= r1
	8266: (bf) r4 = r10
	;
	8267: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP,
	8268: (bf) r1 = r5
	8269: (18) r2 = 0xffff7000722cc800
	8271: (b4) w5 = 48
	8272: (85) call bpf_perf_event_output#25
	last_idx 8272 first_idx 8237
	regs=20 stack=0 before 8271: (b4) w5 = 48
	8273: (b4) w1 = 20774914
	; struct debug_msg msg = {
	8274: (63) *(u32 *)(r10 -64) = r1
	8275: (b4) w1 = 50
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	8276: (79) r2 = *(u64 *)(r10 -152)
	8277: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	8278: (63) *(u32 *)(r10 -48) = r1
	8279: (18) r1 = 0x3200000032
	8281: (7b) *(u64 *)(r10 -56) = r1
	8282: (63) *(u32 *)(r10 -60) = r2
	8283: (bf) r4 = r10
	;
	8284: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	8285: (79) r1 = *(u64 *)(r10 -152)
	8286: (18) r2 = 0xffff7000722cc800
	8288: (18) r3 = 0xffffffff
	8290: (b4) w5 = 20
	8291: (85) call bpf_perf_event_output#25
	last_idx 8291 first_idx 8273
	regs=20 stack=0 before 8290: (b4) w5 = 20
	; cilium_dbg3(ctx, DBG_CT_LOOKUP4_1, masquerade_ip, masquerade_ip,
	8292: (61) r1 = *(u32 *)(r10 -80)
	8293: (b4) w2 = 20787202
	; struct debug_msg msg = {
	8294: (63) *(u32 *)(r10 -64) = r2
	; __notify_common_hdr(CILIUM_NOTIFY_DBG_MSG, type),
	8295: (79) r2 = *(u64 *)(r10 -152)
	8296: (61) r2 = *(u32 *)(r2 +68)
	; struct debug_msg msg = {
	8297: (63) *(u32 *)(r10 -56) = r1
	8298: (63) *(u32 *)(r10 -52) = r1
	8299: (63) *(u32 *)(r10 -48) = r6
	8300: (63) *(u32 *)(r10 -60) = r2
	8301: (bf) r4 = r10
	;
	8302: (07) r4 += -64
	; ctx_event_output(ctx, &EVENTS_MAP, BPF_F_CURRENT_CPU,
	8303: (79) r1 = *(u64 *)(r10 -152)
	8304: (18) r2 = 0xffff7000722cc800
	8306: (18) r3 = 0xffffffff
	8308: (b4) w5 = 20
	8309: (85) call bpf_perf_event_output#25
	last_idx 8309 first_idx 8273
	regs=20 stack=0 before 8308: (b4) w5 = 20
	8310: (79) r5 = *(u64 *)(r10 -152)
	; return (void *)(unsigned long)ctx->data_end;
	8311: (61) r1 = *(u32 *)(r5 +80)
	; return (void *)(unsigned long)ctx->data;
	8312: (61) r2 = *(u32 *)(r5 +76)
	; if (data + tot_len > data_end)
	8313: (07) r2 += 34
	8314: (b4) w4 = -134
	; if (data + tot_len > data_end)
	8315: (2d) if r2 > r1 goto pc-269
	 R0=inv(id=0) R1_w=pkt_end(id=0,off=0,imm=0) R2_w=pkt(id=0,off=34,r=34,imm=0) R4_w=inv4294967162 R5_w=ctx(id=0,off=0,imm=0) R6=invP0 R7=invP0 R8=invP0 R9=inv(id=0) R10=fp0 fp-24=mmmmmmmm fp-32=mmmmmmmm fp-40=mmmmmmmm fp-48=mmmmmmmm fp-56=mmmmmmmm fp-64=mmmmmmmm fp-72=????mmmm fp-80=mmmmmmmm fp-120=??0mmmmm fp-128=mmmmmmmm fp-144=mmmmmmmm fp-152=ctx fp-160=inv fp-168=????0000
	; &redir_opt->ip1, 4, 0);
	8316: (07) r9 += 2
	; ret = ctx_store_bytes(ctx, ETH_HLEN + offsetof(struct iphdr, saddr),
	8317: (bf) r1 = r5
	8318: (b4) w2 = 26
	8319: (bf) r3 = r9
	8320: (b4) w4 = 4
	8321: (b4) w5 = 0
	8322: (85) call bpf_skb_store_bytes#9
	R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf
	processed 1463 insns (limit 1000000) max_states_per_insn 3 total_states 58 peak_states 58 mark_read 28
level=warning msg="JoinEP: Failed to load program for host endpoint (cil_to_host)" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" file-path=317_next/bpf_host.o identity=1 ipv4= ipv6= k8sPodName=/ subsys=datapath-loader veth=cilium_host
level=error msg="Error while rewriting endpoint BPF program" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting endpoint changes after BPF regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting proxy redirect removals" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting proxy redirect removals" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Reverting proxy redirect additions" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting proxy redirect additions" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Finished reverting endpoint changes after BPF regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=info msg="Wrote verifier log to endpoint directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 file-path=317_next/verifier.log identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=info msg="generating BPF for endpoint failed, keeping stale directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" file-path=317_next_fail identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=317_next_fail endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="removing directory" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 directory=317_next endpointID=317 identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Completed endpoint regeneration with no pending regeneration requests" code=OK containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=ready identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=0
level=warning msg="Regeneration of endpoint failed" bpfCompilation=0s bpfLoadProg=152.494958ms bpfWaitForELF="26.25µs" bpfWriteELF=4.770708ms containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ mapSync="77.75µs" policyCalculation="363.375µs" prepareBuild=2.384791ms proxyConfiguration="54.124µs" proxyPolicyCalculation="60.583µs" proxyWaitForAck=0s reason="retrying regeneration" subsys=endpoint total=176.033167ms waitingForCTClean=2.128458ms waitingForLock="5.291µs"
level=debug msg="Error regenerating endpoint: loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" code=Failure containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 endpointState=ready identity=1 ipv4= ipv6= k8sPodName=/ policyRevision=0 subsys=endpoint type=200
level=debug msg="EventQueue event processing statistics" eventConsumeOffQueueWaitTime="43.5µs" eventEnqueueWaitTime="22.959µs" eventHandlingDuration=176.233375ms eventType="*endpoint.EndpointRegenerationEvent" name=endpoint-317 subsys=eventqueue
level=error msg="endpoint regeneration failed" containerID= datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=317 error="loading eBPF collection into the kernel: program tail_handle_snat_fwd_ipv4: load program: permission denied: 8322: (85) call bpf_skb_store_bytes#9: R3 type=inv expected=fp, pkt, pkt_meta, map_key, map_value, mem, buf (1277 line(s) omitted)" identity=1 ipv4= ipv6= k8sPodName=/ subsys=endpoint
level=debug msg="Controller func execution time: 177.202084ms" name=endpoint-317-regeneration-recovery subsys=controller uuid=e7863fbe-c1cf-4ee3-ba58-7391bc06fe4a
level=debug msg="Controller run failed" consecutiveErrors=6 error="regeneration recovery failed" name=endpoint-317-regeneration-recovery subsys=controller uuid=e7863fbe-c1cf-4ee3-ba58-7391bc06fe4a
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Skipping CiliumEndpoint update because it has no k8s pod name" containerID= controller="sync-to-k8s-ciliumendpoint (767)" datapathPolicyRevision=0 desiredPolicyRevision=1 endpointID=767 identity=4 ipv4=10.244.1.174 ipv6= k8sPodName=/ subsys=endpointsynchronizer
level=debug msg="Controller func execution time: 75.417µs" name="sync-to-k8s-ciliumendpoint (767)" subsys=controller uuid=5039eeaf-3bc8-4a34-86d2-ee0a245eba33
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
level=debug msg="Controller func execution time: 117.833µs" name=metricsmap-bpf-prom-sync subsys=controller uuid=38a9c0b7-176f-4a35-865f-69a2af221242
level=debug msg="Cannot find socket" error="stat /var/run/cilium/health.sock: no such file or directory" file-path=/var/run/cilium/health.sock subsys=cilium-health-launcher
